{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/pages/create/create.component.ts","./src/app/pages/create/create.component.html","./src/app/pages/index/index.component.ts","./src/app/pages/index/index.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/profile-puzzles/profile-puzzles.component.ts","./src/app/pages/profile-puzzles/profile-puzzles.component.html","./src/app/pages/profile-ratings/profile-ratings.component.ts","./src/app/pages/profile-ratings/profile-ratings.component.html","./src/app/pages/profile/profile.component.ts","./src/app/pages/profile/profile.component.html","./src/app/pages/ratings/RatingsArr.ts","./src/app/pages/ratings/puzzleArr.ts","./src/app/pages/ratings/ratings.component.ts","./src/app/pages/ratings/ratings.component.html","./src/app/pages/reset-password/reset-password.component.ts","./src/app/pages/reset-password/reset-password.component.html","./src/app/pages/reset-success/reset-success.component.ts","./src/app/pages/reset-success/reset-success.component.html","./src/app/pages/signup/signup.component.ts","./src/app/pages/signup/signup.component.html","./src/app/rate-dialog/rate-dialog.component.ts","./src/app/rate-dialog/rate-dialog.component.html","./src/app/services/api.service.ts","./src/assets/js/manualCreation.js","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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ACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,wB;AACA;AACA,GAAG;AACH,EAAE;;AAEF;AACA,qCAAqC,mBAAmB;AACxD;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA,mBAAmB,4CAAK;AACxB;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,oBAAoB,2BAA2B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB,kBAAkB;AAClC;;AAEA,kBAAkB,cAAc;AAChC;AACA,mBAAmB,aAAa;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;AACA,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;ACnRA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SignupComponent } from './pages/signup/signup.component';\r\nimport { IndexComponent } from './pages/index/index.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { ProfileComponent } from './pages/profile/profile.component';\r\nimport { ProfilePuzzlesComponent } from './pages/profile-puzzles/profile-puzzles.component'\r\nimport { ProfileRatingsComponent } from './pages/profile-ratings/profile-ratings.component'\r\nimport { RatingsComponent } from './pages/ratings/ratings.component';\r\nimport { ResetPasswordComponent } from './pages/reset-password/reset-password.component';\r\nimport { ResetSuccessComponent } from './pages/reset-success/reset-success.component';\r\nimport { CreateComponent } from './pages/create/create.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: 'index', component: IndexComponent},\r\n  {path: 'signup', component: SignupComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'profile', component: ProfileComponent},\r\n  {path: 'profilePuzzles', component: ProfilePuzzlesComponent},\r\n  {path: 'profileRatings', component: ProfileRatingsComponent},\r\n  {path: 'ratings', component: RatingsComponent},\r\n  {path: 'resetPassword', component: ResetPasswordComponent},\r\n  {path: 'resetSuccess', component: ResetSuccessComponent},\r\n  {path: 'create', component: CreateComponent},\r\n\r\n    // otherwise redirect to home\r\n  { path: '', redirectTo: '/index', pathMatch: 'full' },\r\n  { path: '**', component: IndexComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'prometheus-puzzles';\r\n  \r\n  constructor() {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n//\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport { MatToolbarModule} from '@angular/material/toolbar';\r\nimport { MatTableModule} from '@angular/material/table';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatGridListModule } from '@angular/material/grid-list'\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport {MatListModule} from '@angular/material/list';\r\n\r\n\r\n//pages\r\nimport { IndexComponent } from './pages/index/index.component';\r\nimport { SignupComponent } from './pages/signup/signup.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { ProfileComponent } from './pages/profile/profile.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { RatingsComponent } from './pages/ratings/ratings.component';\r\nimport { ResetPasswordComponent } from './pages/reset-password/reset-password.component';\r\nimport { ResetSuccessComponent } from './pages/reset-success/reset-success.component';\r\nimport { CreateComponent } from './pages/create/create.component';\r\nimport { RateDialogComponent } from './rate-dialog/rate-dialog.component';\r\nimport { ProfilePuzzlesComponent } from './pages/profile-puzzles/profile-puzzles.component';\r\nimport { ProfileRatingsComponent } from './pages/profile-ratings/profile-ratings.component';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    IndexComponent,\r\n    SignupComponent,\r\n    LoginComponent,\r\n    ProfileComponent,\r\n    RatingsComponent,\r\n    NavbarComponent,\r\n    ResetPasswordComponent,\r\n    ResetSuccessComponent,\r\n    CreateComponent,\r\n    RateDialogComponent,\r\n    ProfilePuzzlesComponent,\r\n    ProfileRatingsComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NgxPaginationModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FlexLayoutModule,\r\n    MatButtonModule,\r\n    MatDividerModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatProgressSpinnerModule,\r\n    MatToolbarModule,\r\n    MatTableModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    MatInputModule, MatListModule,\r\n    MatCardModule, MatFormFieldModule, MatDialogModule, MatGridListModule, MatRadioModule, ReactiveFormsModule,\r\n    MDBBootstrapModule.forRoot(),\r\n  ],\r\n  entryComponents: [RateDialogComponent],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n//import { getName } from '.././pages/login/login.component';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  name:string;\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  logout(){\r\n    localStorage.removeItem('token');\r\n    this.router.navigate(['/index']);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.name = localStorage.getItem('name');\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n  <mdb-navbar id=\"navCustom\" SideClass=\"navbar\">\r\n    <div>\r\n        <ul class=\"nav navbar-nav mr-auto\" routerLinkActive=\"active\">\r\n            <li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"/ratings\">View</a></li>\r\n            <li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"/create\">Create</a></li>\r\n            <li class=\"nav-item dropdown\" dropdown>\r\n              <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\" mdbWavesEffect>Profile<div class=\"caret\"></div></a>\r\n               <div *dropdownMenu class=\"dropdown-menu dropdown dropdown-primary\" role=\"menu\">\r\n                 <a class=\"dropdown-item waves-light\" routerLink=\"/profile\" mdbWavesEffect>My Details</a><br>\r\n                 <a class=\"dropdown-item waves-light\" routerLink=\"/profileRatings\" mdbWavesEffect>My Ratings</a><br>\r\n                 <a class=\"dropdown-item waves-light\" routerLink=\"/profilePuzzles\" mdbWavesEffect>My Puzzles</a>\r\n               </div>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <span class=\"navbar-text\">\r\n        Hello, {{name}}\r\n        <a id=\"logout\" (click)=\"logout()\">Logout</a>\r\n    </span>\r\n  </mdb-navbar>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { createModule } from 'src/assets/js/manualCreation.js';\r\nimport Konva from 'konva';\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.css']\r\n})\r\nexport class CreateComponent implements OnInit {\r\n\r\n  token: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    createModule;\r\n    this.token = localStorage.getItem('token')\r\n  }\r\n\r\n}\r\n","<img src=\"assets/images/logo.jpg\">\r\n<app-navbar></app-navbar>\r\n<div class=\"container-fluid\">\r\n  <!-- <h1 class=\"main-title\"><strong>LET'S CREATE</strong></h1> -->\r\n\r\n  <div class=\"content\">\r\n    <label id=\"label\">What puzzle type would you like to generate?</label>\r\n    <mat-radio-group class=\"radio-group\">\r\n      <mat-radio-button class=\"radio-button\" value=\"euclidean\" name=\"distanceMetric\" id=\"euclideanButton\" > Euclidian </mat-radio-button>\r\n      <mat-radio-button class=\"radio-button\" value=\"manhattan\" name=\"distanceMetric\" id=\"manhattanButton\" > Manhattan </mat-radio-button>\r\n    </mat-radio-group>\r\n    <br>\r\n    <label id=\"label\">Create puzzle by selecting points on the canvas</label>\r\n\r\n    <br>\r\n    <div id=\"container\">\r\n    </div>\r\n    <br>\r\n\r\n    <button mat-raised-button class=\"btns\" id=\"generatePuzzleButton\">Generate Puzzle</button> <br >\r\n      <label id=\"label\">Name: </label><input type=\"text\" name=\"puzzleName\" id=\"puzzleNameInputBox\"><br>\r\n      <label id=\"label\">Short Description: </label><input type=\"text\" name=\"puzzleDescription\" id=\"puzzleDescriptionInputBox\"><br>\r\n      <label hidden=\"true\" id=\"tokenLabel\">{{token}}</label>\r\n\r\n\r\n    <button mat-raised-button class=\"btns\" id=\"saveButton\">Save</button>\r\n    <button mat-raised-button class=\"btns\" id=\"saveAndSubmitButton\">Save and Submit</button>\r\n    <br><br>\r\n    <img src=\"\" id=\"testingImg\">\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.css']\r\n})\r\nexport class IndexComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n"," <img src=\"assets/images/websmalp.jpg\">\r\n<!--     <div class=\"why\">\r\n     <a href=\"#second\" class=\"btn\" id=\"more\">Learn More</a>\r\n    </div> -->\r\n\r\n\r\n      \r\n    <div class=\"container\" id=\"second\">\r\n\r\n        <h1 class=\"main-title\"><strong>C R E A T E .  S H A R E .  R A T E . </strong></h1>\r\n        <h2>Have fun creating 3D puzzles that can be shared, rated and printed</h2>\r\n        <div class=\"flex-container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\" >\r\n    <div class=\"one\">\r\n        <div class=\"content\">\r\n            <div class=\"content-overlay\"></div>\r\n            <img class=\"content-image\" src=\"assets/images/puzzles/6.png\">\r\n            <div class=\"content-details fadeIn-bottom\">\r\n              <h3 class=\"content-title\">Geometric Puzzles</h3>\r\n              <p class=\"content-text\">This is a short description of a geometric equationed arithmatic puzzle. Magnified by bliss.</p>\r\n            </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"one\">\r\n        <div class=\"content\">\r\n            <div class=\"content-overlay\"></div>\r\n            <img class=\"content-image\" src=\"assets/images/puzzles/2.png\">\r\n            <div class=\"content-details fadeIn-bottom\">\r\n              <h3 class=\"content-title\">Arithmatic Puzzles</h3>\r\n              <p class=\"content-text\">This is a short description of a arithmatic equationed arithmatic puzzle. Magnified by razor.</p>\r\n            </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"one\">\r\n        <div class=\"content\">\r\n            <div class=\"content-overlay\"></div>\r\n            <img class=\"content-image\" src=\"assets/images/puzzles/6.png\">\r\n            <div class=\"content-details fadeIn-bottom\">\r\n              <h3 class=\"content-title\">Polygon Puzzles</h3>\r\n              <p class=\"content-text\">This is a short description of a polygon equationed arithmatic puzzle. Magnified by shoes.</p>\r\n            </div>\r\n\r\n        </div>\r\n      </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"try\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center\" class=\"indexNavBtns\">\r\n        <a routerLink=\"/login\"  class=\"btn\">Login</a>\r\n        <a routerLink=\"/signup\"  class=\"btn\">Sign Up</a>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <!--\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"indexNavBtns\">\r\n        <mat-card fxFlex=\"90\" fxLayoutAlign=\"space-evenly center\">\r\n            <a routerLink=\"/login\" mat-raised-button class=\"btn\">Login\r\n            <a routerLink=\"/signup\" mat-raised-button class=\"btn\">Sign Up\r\n      </mat-card>\r\n    </div> -->\r\n\r\n\r\n    <!--\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"indexNavBtns\">\r\n        <mat-card fxFlex=\"90\" fxLayoutAlign=\"space-evenly center\">\r\n            <a routerLink=\"/login\" mat-raised-button class=\"btn\">Login\r\n            <a routerLink=\"/signup\" mat-raised-button class=\"btn\">Sign Up\r\n      </mat-card>\r\n    </div>\r\n     -->\r\n\r\n    <!-- <div class=\"content\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"descText\">\r\n            <mat-card fxFlex=\"90\">\r\n                    <p>Puzzles have been a hobby of many people over the centuries, coming in various\r\n                    forms which have various ways of solving. Puzzles have played a role in people’s\r\n                    problem solving skills. Puzzle generators have allowed for more puzzles to be\r\n                    created, using various techniques to create interesting and challenging puzzles.\r\n                    The system requested by the client involves the creation of 3-Dimensional puzzles (manually and from the use of AI), testing of puzzles, sharing and rating of\r\n                    puzzles by other users, as well as the ability of downloading 3D printable files.\r\n                    Team Prometheus, has come up with a way to develop the system according to\r\n                    the client’s specifications.</p>\r\n          </mat-card>\r\n        </div> -->\r\n\r\n\r\n\r\n        <!-- <div class=\"container\">\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <div class=\"flex-container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\" >\r\n            <div class=\"overlay\"></div>\r\n            <mat-card  class=\"child-1\">\r\n                <mat-card-header>\r\n                    <mat-card-title>Puzzle One</mat-card-title>\r\n                    <mat-card-subtitle class=\"one\">Created by {{puzzle.creator}}</mat-card-subtitle>\r\n                    <mat-card-subtitle class=\"one\">Rating: </mat-card-subtitle>\r\n                    <mat-card-subtitle class=\"one\">Date: </mat-card-subtitle>\r\n                    <mat-card-subtitle class=\"one\">Created by X</mat-card-subtitle>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                    <img class=\"indexImg\" src=\"assets/images/imgC.jpg\">\r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                    <button mat-button class=\"btns\">SOLVE</button>\r\n                    <button mat-button class=\"btns\">RATE</button>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n\r\n            <mat-card  class=\"child-2\">\r\n                <mat-card-header>\r\n                    <mat-card-title>Puzzle One</mat-card-title>\r\n                    <mat-card-subtitle class=\"one\">Created by X</mat-card-subtitle>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                    <img class=\"indexImg\"  src=\"assets/images/imgB.jpg\">\r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                    <button mat-button class=\"btns\">SOLVE</button>\r\n                    <button mat-button class=\"btns\">RATE</button>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n            <mat-card class=\"child-3\">\r\n                <mat-card-header>\r\n                    <mat-card-title>Puzzle One</mat-card-title>\r\n                    <mat-card-subtitle class=\"one\">Created by X</mat-card-subtitle>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                    <img class=\"indexImg\"  src=\"assets/images/imgC.jpg\">\r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                    <button mat-button class=\"btns\">SOLVE</button>\r\n                    <button mat-button class=\"btns\">RATE</button>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n        </div>\r\n\r\n\r\n                <a routerLink=\"/login\" mat-raised-button class=\"btn\">Login\r\n                <a routerLink=\"/signup\" mat-raised-button class=\"btn\">Sign Up\r\n\r\n\r\n    </div> -->\r\n\r\n    <!--\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"indexNavBtns\">\r\n        <mat-card fxFlex=\"90\" fxLayoutAlign=\"space-evenly center\">\r\n            <a routerLink=\"/login\" mat-raised-button class=\"btn\">Login\r\n            <a routerLink=\"/signup\" mat-raised-button class=\"btn\">Sign Up\r\n      </mat-card>\r\n    </div> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { User } from 'src/app/models/user';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  verifyUser: any;\r\n  formError: string;\r\n\r\n  constructor(private formBuilder: FormBuilder, private api: APIService, private router: Router) {}\r\n  //method for logging in user and getting the token associated with the said user\r\n  loginUser(currentUser: User){\r\n    this.formError = '';\r\n    if(currentUser !== null){\r\n      this.verifyUser = {\r\n        \"username\":currentUser.email,\r\n        \"password\":currentUser.password\r\n      }\r\n\r\n      this.api.loginUser(this.verifyUser).subscribe(\r\n        data => { console.log(data);\r\n          localStorage.removeItem('name');\r\n          localStorage.setItem('name', data['name']);\r\n          localStorage.removeItem('token');\r\n          localStorage.setItem('token', data['token']);\r\n\r\n          // update api to get id as well\r\n          localStorage.removeItem('id');\r\n          localStorage.setItem('id', data['id']);\r\n          this.formError = \"\";\r\n        this.router.navigate(['/ratings']);\r\n\r\n        //var timeoutHandle = window.setTimeout(...);\r\n        //window.clearTimeout(timeoutHandle);\r\n        //timeoutHandle = window.setTimeout(...);\r\n\r\n        setTimeout(()=>{\r\n          localStorage.removeItem('token');\r\n          this.router.navigate(['login']);\r\n          alert(\"You have been logged out after 1 hour\");\r\n        },3600000);\r\n      },\r\n        error => {//if status code other than in the 200 range returned, show error\r\n          console.log('Error from API: ', error.error);\r\n          if(error.status >= 401){\r\n            this.formError = error.error;\r\n          }\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n  //error messages used during login/register validation\r\n  error_messages = {\r\n    'email': [\r\n      { type: 'required', message: 'Email is required.' },\r\n      { type: 'email', message: 'Invalid email format.' }\r\n    ],\r\n    'password': [\r\n      { type: 'required', message: 'Password is required.' },\r\n      { type: 'minlength', message: 'Password must have at least 6 characters.' }\r\n    ]\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]]\r\n\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"flex-container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center none\">\r\n        <mat-card class=\"regForm\">\r\n            <mat-card-header>\r\n                <h1>Login</h1>\r\n            </mat-card-header>\r\n            <mat-card-content class=\"regFormContent\">\r\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser(loginForm.value)\">\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your email</mat-label>\r\n                        <input class=\"input\" matInput placeholder=\"john@doe.com\" formControlName=\"email\" required>\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.email\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"loginForm.get('email').hasError(error.type) && (loginForm.get('email').dirty || loginForm.get('email').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your password</mat-label>\r\n                        <input class=\"input\" matInput required formControlName=\"password\" type=\"password\">\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.password\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"loginForm.get('password').hasError(error.type) && (loginForm.get('password').dirty || loginForm.get('password').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                            <span id=\"passError\">{{formError}}</span>\r\n                        </div>\r\n                    </div>\r\n                    <button mat-raised-button type=\"submit\" [disabled]=\"!loginForm.valid\" class=\"btns\" id=\"one\">Login</button>\r\n                    <a routerLink=\"/index\" mat-raised-button class=\"btns\" id=\"two\">Cancel</a>\r\n                </form>\r\n            </mat-card-content>\r\n            <mat-card-actions>\r\n                <a routerLink=\"/resetPassword\" class=\"link\">Forgot Password</a>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { Puzzle } from 'src/app/models/Puzzle';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-profile-puzzles',\r\n  templateUrl: './profile-puzzles.component.html',\r\n  styleUrls: ['./profile-puzzles.component.css']\r\n})\r\nexport class ProfilePuzzlesComponent implements OnInit {\r\n\r\n  currentUser: any;\r\n  //user  puzzle variables\r\n  //puzzleList: Observable <Puzzle[]> ;\r\n  userPuzzleList: any;\r\n  puzzle: any;\r\n  show: boolean;\r\n  text: boolean;\r\n  imageList: any;\r\n  temp: boolean = false;\r\n  tee: any;\r\n\r\n  constructor(private api: APIService, private router: Router) { }\r\n\r\n  getUserPuzzles(){\r\n    this.api.getPuzzlesByUser(this.currentUser).subscribe( data => {\r\n      this.userPuzzleList = data;\r\n      if (data[0]==null)\r\n      {\r\n        this.text = true;\r\n      }\r\n\r\n      //let puzzleImage = data[0].image.toDataURL();\r\n\r\n    this.temp = true;\r\n    this.getBase64ImageFromUrl(data[0].image)\r\n    .then(result => this.tee = result)\r\n    .catch(err => console.error(err));\r\n      this.show = false;\r\n    });\r\n  }\r\n\r\n  async getBase64ImageFromUrl(imageUrl) {\r\n    var res = await fetch(imageUrl);\r\n    var blob = await res.blob();\r\n\r\n    return new Promise((resolve, reject) => {\r\n      var reader  = new FileReader();\r\n      reader.addEventListener(\"load\", function () {\r\n          resolve( reader.result);\r\n      }, false);\r\n\r\n      reader.onerror = () => {\r\n        return reject(this);\r\n      };\r\n      reader.readAsDataURL(blob);\r\n    })\r\n  }\r\n\r\n  share(data: any){\r\n    this.puzzle = {\r\n      \"puzzleID\": data\r\n    }\r\n    if(this.api.sharePuzzle(this.puzzle).subscribe()){\r\n        alert(\"Puzzle shared\");\r\n    }\r\n    location.reload();\r\n  }\r\n\r\n  stopShare(data: any){\r\n    this.puzzle = {\r\n      \"puzzleID\": data\r\n    }\r\n    if(this.api.stopSharingPuzzle(this.puzzle).subscribe()){\r\n        alert(\"Stop sharing puzzle\");\r\n    }\r\n    location.reload();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if(!localStorage.getItem('token')){\r\n      this.router.navigate(['/index']);\r\n      alert(\"You are not logged in\");\r\n    }\r\n\r\n    this.currentUser = {\r\n      \"token\": localStorage.getItem('token')\r\n    }\r\n    this.show = true;\r\n    this.text = false;\r\n\r\n    this.getUserPuzzles();\r\n  }\r\n\r\n}\r\n","<img src=\"assets/images/logo.jpg\">\r\n<app-navbar></app-navbar>\r\n\r\n<div class=\"container-fluid\">\r\n  <h1 class=\"main-title\">My Puzzles</h1>\r\n  <mat-spinner *ngIf=\"show\" id=\"spinner\"></mat-spinner>\r\n  <div *ngIf=\"currentUser\" class=\"flex-container\" fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\">\r\n    <mat-card *ngFor=\"let puzzle of userPuzzleList\" class=\"content\">\r\n      <div class=\"content-overlay\"></div>\r\n      <img class=\"content-image\" src=\"{{puzzle.image}}\">\r\n        <mat-card-header>\r\n            <mat-card-title>{{puzzle.name}}</mat-card-title>\r\n            <mat-card-subtitle>Description: {{puzzle.description}}</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <div class=\"content-details fadeIn-bottom\">\r\n            <h3 class=\"content-title\">{{puzzle.name}}</h3>\r\n            <button *ngIf=\"!puzzle.shared\" mat-button class=\"btns\" (click)=\"share(puzzle.id)\">SHARE</button>\r\n            <button *ngIf=\"puzzle.shared\" mat-button class=\"btns\" (click)=\"stopShare(puzzle.id)\">STOP SHARING</button>\r\n        </div>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div *ngIf=\"text\">\r\n    <h3 id=\"NoneText\" >You have not created any puzzles at the moment</h3>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Puzzle } from 'src/app/models/Puzzle';\r\nimport { Observable } from 'rxjs';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { RateDialogComponent } from '../../rate-dialog/rate-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-profile-ratings',\r\n  templateUrl: './profile-ratings.component.html',\r\n  styleUrls: ['./profile-ratings.component.css']\r\n})\r\nexport class ProfileRatingsComponent implements OnInit {\r\n\r\n  currentUser: any;\r\n  //user puzzle ratings variables\r\n  //ratingList: Observable <any[]> ;\r\n  userRatingsList: any;\r\n  text: boolean;\r\n  ratePID: number;\r\n  ratingEntry: any;\r\n  rateDialogRef: MatDialogRef<RateDialogComponent>;\r\n  show: boolean;\r\n\r\n  constructor(private api: APIService, private router: Router, private dialog: MatDialog) { }\r\n\r\n  getUserPuzzleRatings(){\r\n    this.api.getPuzzleRatingsByUser(this.currentUser).subscribe( data => {\r\n      this.userRatingsList = data;\r\n      this.show = false;\r\n    });\r\n  }\r\n\r\n  checkData(data: any){\r\n    this.ratePID = data;\r\n    //this.rateUID = localStorage.getItem('token');\r\n    //this.rateUID = localStorage.getItem('id');\r\n    //console.log(localStorage.getItem('id'));\r\n  }\r\n\r\n  openRateDialog(){\r\n    this.rateDialogRef = this.dialog.open(RateDialogComponent);\r\n\r\n    this.rateDialogRef.afterClosed().subscribe( result => {\r\n      if (result != \"\"){\r\n\r\n        this.ratingEntry = {\r\n        //\"id\":this.rateUID,\r\n          \"puzzleID\":this.ratePID,\r\n          \"rating\":result,\r\n          \"token\": localStorage.getItem('token')\r\n        }\r\n\r\n        console.log(this.ratingEntry);\r\n\r\n        if(this.api.createNewPuzzleRating(this.ratingEntry).subscribe())\r\n        {\r\n          alert(\"Rating added\");\r\n        }\r\n\r\n        location.reload();\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  openAndCheck(rateP: any){\r\n    this.checkData(rateP);\r\n    this.openRateDialog();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if(!localStorage.getItem('token')){\r\n      this.router.navigate(['/index']);\r\n      alert(\"You are not logged in\");\r\n    }\r\n\r\n    this.currentUser = {\r\n      \"token\": localStorage.getItem('token')\r\n    }\r\n\r\n    this.show = true;\r\n\r\n    this.getUserPuzzleRatings();\r\n  }\r\n\r\n}\r\n","<img src=\"assets/images/logo.jpg\">\r\n<app-navbar></app-navbar>\r\n<!--app-navbar-profile></app-navbar-profile-->\r\n<div class=\"container-fluid\">\r\n<h1 class=\"main-title\">My Ratings</h1>\r\n<mat-spinner *ngIf=\"show\" id=\"spinner\"></mat-spinner>\r\n<div *ngIf=\"currentUser\" class=\"flex-container\" fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\">\r\n    <mat-card *ngFor=\"let rating of userRatingsList\" class=\"content\">\r\n      <div class=\"content-overlay\"></div>\r\n      <img class=\"content-image\" src=\"{{rating.image}}\">\r\n        <mat-card-header>\r\n            <mat-card-title>{{rating.puzzleName}}</mat-card-title>\r\n            <mat-card-subtitle>Rating: {{rating.rating}}/5</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <div class=\"content-details fadeIn-bottom\">\r\n            <h3 class=\"content-title\">{{rating.puzzleName}}</h3>\r\n            <button mat-button class=\"btns\">SOLVE</button>\r\n            <button mat-button class=\"btns\" (click)=\"openAndCheck(rating.puzzleID)\">UPDATE RATING</button>\r\n        </div>\r\n    </mat-card>\r\n</div>\r\n<div id=\"NoneText\" *ngIf=\"!show\">\r\n    <h3>You have not made any ratings at the moment</h3>\r\n</div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  nameTextboxValue: string;\r\n  usernameTextboxValue: string;\r\n  currentUserObject:any;\r\n  token: any;\r\n  currentUser: any;\r\n  updateNameForm: FormGroup;\r\n  updateUsernameForm: FormGroup;\r\n\r\n  constructor(private api: APIService, private formBuilder: FormBuilder, private router: Router) { }\r\n\r\n  updateName(){\r\n    this.currentUser = null;\r\n      if(this.nameTextboxValue != undefined){\r\n      this.currentUser = {\r\n        \"token\": localStorage.getItem('token'),\r\n        \"name\": this.nameTextboxValue\r\n      }\r\n      localStorage.removeItem('name');\r\n      localStorage.setItem('name', this.currentUser['name']);\r\n      this.api.updateName(this.currentUser).subscribe( data => {\r\n        this.currentUserObject['name'] = data['name'];\r\n      });\r\n      alert(\"Name updated\");\r\n    }\r\n    else{ console.log(\"No value provided\");}\r\n    location.reload();\r\n  }\r\n\r\n  updateUsername(){\r\n    this.currentUser = null;\r\n    if(this.usernameTextboxValue != undefined){\r\n    this.currentUser = {\r\n      \"token\": localStorage.getItem('token'),\r\n      \"username\": this.usernameTextboxValue\r\n    }\r\n    this.api.updateUsername(this.currentUser).subscribe( data => {\r\n      this.currentUserObject['username'] = data['username'];\r\n    })\r\n  }\r\n  else{console.log(\"No value provided\")}\r\n  }\r\n\r\n  error_messages = {\r\n    'username': [\r\n      { type: 'required', message: 'Email is required.' },\r\n      { type: 'email', message: 'Invalid email format.' }\r\n    ],\r\n    'name': [\r\n      { type: 'required', message: 'Full name is required.' },\r\n      { type: 'pattern', message: 'Name can only consist of letters' }\r\n    ]\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if(!localStorage.getItem('token')){\r\n      this.router.navigate(['/index']);\r\n      alert(\"You are not logged in\");\r\n    }\r\n\r\n    this.currentUser = {\r\n      \"token\": localStorage.getItem('token')\r\n    }\r\n\r\n    this.api.getUser(this.currentUser).subscribe( data => {\r\n      this.currentUserObject = data;\r\n\r\n      this.updateNameForm = this.formBuilder.group({\r\n        name: [data['name'], [Validators.required, Validators.pattern('[a-zA-Z ]*')]]\r\n      });\r\n\r\n      this.updateUsernameForm = this.formBuilder.group({\r\n        username: [data['username'], [Validators.required, Validators.email]]\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","<img src=\"assets/images/logo.jpg\">\r\n<app-navbar></app-navbar>\r\n<!--app-navbar-profile></app-navbar-profile-->\r\n\r\n\r\n<div class=\"container-fluid\" >\r\n    <mat-card class=\"profile\">\r\n        <mat-card-header>\r\n            <h1>Profile</h1>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n        <div><img src=\"assets/images/profile.jpg\" id=\"profileImage\"></div>\r\n        <div *ngIf=\"currentUserObject\">\r\n            <form [formGroup]=\"updateNameForm\" (ngSubmit)=\"updateName()\">\r\n                <mat-form-field appearance=\"fill\">\r\n                    <input matInput formControlName=\"name\"  value=\"{{currentUserObject.name}}\" (input)=\"nameTextboxValue=$event.target.value\">\r\n                </mat-form-field>\r\n                <div>\r\n                    <ng-container *ngFor=\"let error of error_messages.name\">\r\n                        <mat-error class=\"error-message\" *ngIf=\"updateNameForm.get('name').hasError(error.type) && (updateNameForm.get('name').dirty || updateNameForm.get('name').touched)\">\r\n                            {{ error.message }}\r\n                        </mat-error>\r\n                    </ng-container>\r\n                </div>\r\n                <button mat-raised-button type=\"submit\" [disabled]=\"!updateNameForm.valid\" class=\"btns\" >Save</button>\r\n            </form>\r\n\r\n            <form [formGroup]=\"updateUsernameForm\" (ngSubmit)=\"updateUsername()\">\r\n                <mat-form-field appearance=\"fill\">\r\n                    <input matInput formControlName=\"username\"  value=\"{{currentUserObject.username}}\" (input)=\"usernameTextboxValue=$event.target.value\">\r\n                </mat-form-field>\r\n                <div>\r\n                    <ng-container *ngFor=\"let error of error_messages.username\">\r\n                        <mat-error class=\"error-message\" *ngIf=\"updateUsernameForm.get('username').hasError(error.type) && (updateUsernameForm.get('username').dirty || updateUsernameForm.get('username').touched)\">\r\n                            {{ error.message }}\r\n                        </mat-error>\r\n                    </ng-container>\r\n                </div>\r\n                <button mat-raised-button type=\"submit\" [disabled]=\"!updateUsernameForm.valid\" class=\"btns\">Save</button>\r\n            </form>\r\n        </div>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>\r\n","export class RatingsArr{\r\n  id: number;\r\n  rating: number;\r\n  puzzleID: number;\r\n}\r\n","export class PuzzleArr{\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  creator: string;\r\n  rating: string;\r\n  created: any;\r\n  showRating: boolean;\r\n  image: any; \r\n}\r\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { User } from 'src/app/models/user';\r\nimport { Router } from '@angular/router';\r\nimport { PuzzleArr } from './puzzleArr';\r\nimport { RatingsArr } from './RatingsArr';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { RateDialogComponent } from '../../rate-dialog/rate-dialog.component';\r\nimport { PuzzleRating } from 'src/app/models/PuzzleRating';\r\n\r\n@Component({\r\n  selector: 'app-ratings',\r\n  templateUrl: './ratings.component.html',\r\n  styleUrls: ['./ratings.component.css']\r\n})\r\nexport class RatingsComponent implements OnInit {\r\n\r\n  rateDialogRef: MatDialogRef<RateDialogComponent>;\r\n  puzzles: Array<PuzzleArr> = [];\r\n  name: string;\r\n  ratings: Array<RatingsArr> = [];\r\n  ratePID: number;\r\n  rateUID: string;\r\n  ratingEntry: any;\r\n  formError: string;\r\n  show: boolean;\r\n  dataAvailable: boolean;\r\n  //searchbar\r\n  searchTextboxValue: string;\r\n  token: any;\r\n  currentUser: any;\r\n\r\n  constructor(private api: APIService, private cdr: ChangeDetectorRef, private dialog: MatDialog, private router: Router) {\r\n  }\r\n\r\n  populate(populatePuz: any)\r\n  {\r\n    this.ratings.length = 0;\r\n    this.api.getAllPuzzleRatings().subscribe(\r\n      data=> {\r\n        for(let i=0; data[i]!= null; i++){\r\n          let ratingObj = new RatingsArr();\r\n          ratingObj.id = data[i].id;\r\n          ratingObj.rating = data[i].rating;\r\n          ratingObj.puzzleID = data[i].puzzleID;\r\n          this.ratings.push(ratingObj);\r\n        }\r\n      },\r\n      error => {\r\n        console.log(\"Error from API: \", error.error);\r\n      });\r\n\r\n\r\n    if (populatePuz != null)\r\n    {\r\n      this.getPuzzles(populatePuz);\r\n    }\r\n    else\r\n    {\r\n      this.api.getAllPuzzles().subscribe(\r\n        data => {\r\n          this.getPuzzles(data);\r\n      },\r\n        error => {//if status code other than in the 200 range returned, show error\r\n          console.log('Error from API: ', error.error);\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n  searchItems(searchValue: any){\r\n    if(searchValue != undefined){\r\n      this.api.getSearchedPuzzles(searchValue).subscribe( data => {\r\n        var dataObjectSize = Object.keys(data).length;\r\n        if(dataObjectSize == 0 )\r\n        {\r\n          alert(\"Nothing matches given criteria\");\r\n          console.log(\"Nothing matches given criteria\");\r\n        }\r\n        else{\r\n          //Please populate the page with the data received. Other puzzles not fromd data must be cleared\r\n          console.log(data);\r\n          this.populate(data);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getPuzzles(data: any){\r\n    this.puzzles.length = 0;\r\n    for(let i=0; data[i]!=null; i++)\r\n    {\r\n      let puzzleObj = new PuzzleArr();\r\n      puzzleObj.id = data[i].id;\r\n      puzzleObj.name = data[i].name;\r\n      puzzleObj.description = data[i].description;\r\n      puzzleObj.creator = data[i].creator;\r\n      puzzleObj.created = data[i].createdAt;\r\n      puzzleObj.image = data[i].image; \r\n      if (puzzleObj.creator== this.currentUser[\"name\"])\r\n      {\r\n        puzzleObj.showRating = false;\r\n      }\r\n      else\r\n      {\r\n        puzzleObj.showRating = true;\r\n      }\r\n\r\n      let j = 0;\r\n      let total = 0;\r\n\r\n      for (let k=0; this.ratings[k]!=null; k++){\r\n        if (this.ratings[k].puzzleID == data[i].id)\r\n        {\r\n          //********* ERROR HERE - THIS LOOP IS NOT ENTERED WHEN THE RATINGS VALUE IS 0  ************\r\n          console.log(this.ratings[k]);\r\n          total = total + this.ratings[k].rating;\r\n          j = j+1;\r\n        }\r\n      }\r\n\r\n      if (j == 0){\r\n        puzzleObj.rating = (0).toString();\r\n      }\r\n      else{\r\n        puzzleObj.rating = (total/j).toFixed(2);\r\n      }\r\n      this.puzzles.push(puzzleObj);\r\n    }\r\n\r\n    this.dataAvailable = true;\r\n    this.show= false;\r\n\r\n  }\r\n\r\n  checkData(data: any){\r\n    this.ratePID = data;\r\n    //this.rateUID = localStorage.getItem('token');\r\n    //this.rateUID = localStorage.getItem('id');\r\n    //console.log(localStorage.getItem('id'));\r\n  }\r\n\r\n  openRateDialog(){\r\n    this.rateDialogRef = this.dialog.open(RateDialogComponent);\r\n\r\n    this.rateDialogRef.afterClosed().subscribe( result => {\r\n      //console.log(result);\r\n      //console.log(this.ratePID);\r\n      //console.log(this.rateUID);\r\n\r\n      if (result != \"\"){\r\n\r\n        this.ratingEntry = {\r\n        //\"id\":this.rateUID,\r\n          \"puzzleID\":this.ratePID,\r\n          \"rating\":result,\r\n          \"token\": localStorage.getItem('token')\r\n        }\r\n\r\n        console.log(this.ratingEntry);\r\n\r\n        if(this.api.createNewPuzzleRating(this.ratingEntry).subscribe())\r\n        {\r\n          alert(\"Rating added\");\r\n        }\r\n\r\n        location.reload();\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  openAndCheck(rateP: any){\r\n    this.checkData(rateP);\r\n    this.openRateDialog();\r\n  }\r\n\r\n  reload(){\r\n    this.populate(null);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.show=true;\r\n    this.dataAvailable = false;\r\n    if(!localStorage.getItem('token')){\r\n      this.router.navigate(['/index']);\r\n      alert(\"You are not logged in\");\r\n    }\r\n\r\n    this.currentUser = {\r\n      \"token\": localStorage.getItem('token')\r\n    }\r\n\r\n    this.api.getUser(this.currentUser).subscribe( data => {\r\n      console.log(data[\"name\"]);\r\n      this.currentUser = {\r\n        \"token\": localStorage.getItem('token'),\r\n        \"name\": data[\"name\"]\r\n      }\r\n    });\r\n\r\n    this.populate(null);\r\n  }\r\n\r\n}\r\n","<img src=\"assets/images/logo.jpg\">\r\n<app-navbar></app-navbar>\r\n\r\n<mat-form-field class=\"example-form-field\">\r\n    <mat-label>Search</mat-label>\r\n    <input matInput type=\"text\" (input)=\"searchTextboxValue=$event.target.value\">\r\n    <button mat-button matSuffix (click)=\"searchItems(searchTextboxValue)\">\r\n      <mat-icon>search</mat-icon>\r\n    </button>\r\n</mat-form-field>\r\n<button mat-button id=\"resetBtn\" class=\"btns\" (click)=\"reload()\">Reset Search Criteria</button>\r\n\r\n<mat-spinner *ngIf=\"show\" id=\"spinner\"></mat-spinner>\r\n\r\n<div class=\"container\">\r\n<div class=\"container-fluid\" *ngIf=\"dataAvailable\" >\r\n  <h1 class=\"main-title\"><strong>LET'S PLAY</strong></h1>\r\n    <div class=\"flex-container\" fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\">\r\n        <mat-card div class=\"content\" *ngFor=\"let puzzle of puzzles\">\r\n          <div class=\"content-overlay\"></div>\r\n          <img class=\"content-image\" src=\"{{puzzle.image}}\">\r\n            <mat-card-header>\r\n                <mat-card-title>{{puzzle.name}}</mat-card-title>\r\n                <mat-card-subtitle>Created by {{puzzle.creator}}</mat-card-subtitle>\r\n                <mat-card-subtitle>Rating: {{puzzle.rating}}/5</mat-card-subtitle>\r\n                <mat-card-subtitle>Date: {{puzzle.created}}</mat-card-subtitle>\r\n                <mat-card-subtitle>Description: {{puzzle.description}}</mat-card-subtitle>\r\n            </mat-card-header>\r\n            <div class=\"content-details fadeIn-bottom\">\r\n                <h3 class=\"content-title\">{{puzzle.name}}</h3>\r\n                <button mat-button class=\"btns\">SOLVE</button>\r\n                <button *ngIf=\"puzzle.showRating\" mat-button class=\"btns\" (click)=\"openAndCheck(puzzle.id)\">RATE</button>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { User } from 'src/app/models/user';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.css']\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n  resetPasswordForm: FormGroup;\r\n  verifyUser: any;\r\n  formError: string;\r\n  resetDone: string;\r\n\r\n  constructor(private formBuilder: FormBuilder, private api: APIService, private router: Router ) {}\r\n\r\n  //method for logging in user and getting the token associated with the said user\r\n  resetPassword(currentUser: User){\r\n    this.resetDone = '';\r\n    this.formError = '';\r\n    if(this.doPasswordsMatch(this.resetPasswordForm.controls['password'].value, this.resetPasswordForm.controls['confirmPassword'].value) == true){\r\n      this.verifyUser = {\r\n        \"username\": currentUser.email,\r\n        \"password\": currentUser.password\r\n      }\r\n      if(this.verifyUser != null){\r\n        this.api.resetPassword(this.verifyUser).subscribe(\r\n          () => {},\r\n          error => {//if status code other than in the 200 range returned, show error\r\n            if(error.status >= 401){\r\n              this.formError = error.error;\r\n            }\r\n            else\r\n            {\r\n              this.router.navigate(['/resetSuccess', { message: \"Password reset. Please login\" }]);\r\n            }\r\n          })\r\n      }\r\n    }\r\n    else\r\n    {\r\n      this.formError = \"Passwords do not match\";\r\n    }\r\n  }\r\n\r\n  //error messages used during login/register validation\r\n  error_messages = {\r\n    'email': [\r\n      { type: 'required', message: 'Email is required.' },\r\n      { type: 'email', message: 'Invalid email format.' }\r\n    ],\r\n    'password': [\r\n      { type: 'required', message: 'Password is required.' },\r\n      { type: 'minlength', message: 'Password must have at least 6 characters.' }\r\n    ],\r\n    'confirmPassword': [\r\n      { type: 'required', message: 'password is required.' },\r\n      { type: 'minlength', message: 'Password must have at least 6 characters.' }\r\n    ],\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.resetPasswordForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: ['', [Validators.required, Validators.minLength(6)]]\r\n    });\r\n  }\r\n\r\n  //checking if passwords match\r\n  doPasswordsMatch(firstPassword: string, secondPassword: string) {\r\n    if (firstPassword !== secondPassword) {\r\n        return false;\r\n    } else {\r\n      return true;\r\n    }\r\n}\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"flex-container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center none\">\r\n        <mat-card class=\"regForm\">\r\n          <mat-card-header>\r\n              <h1>Reset Password</h1>\r\n          </mat-card-header>\r\n            <mat-card-content class=\"regFormContent\">\r\n                <form [formGroup]=\"resetPasswordForm\" (ngSubmit)=\"resetPassword(resetPasswordForm.value)\">\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your email</mat-label>\r\n                        <input class=\"input\" matInput placeholder=\"john@doe.com\" formControlName=\"email\" required>\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.email\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"resetPasswordForm.get('email').hasError(error.type) && (resetPasswordForm.get('email').dirty || resetPasswordForm.get('email').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your password</mat-label>\r\n                        <input class=\"input\" matInput required formControlName=\"password\" type=\"password\">\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.password\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"resetPasswordForm.get('password').hasError(error.type) && (resetPasswordForm.get('password').dirty || resetPasswordForm.get('password').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <mat-form-field appearance=\"fill\">\r\n                            <mat-label>Confirm password</mat-label>\r\n                            <input class=\"input\" matInput  required formControlName=\"confirmPassword\" type=\"password\">\r\n                        </mat-form-field>\r\n                            <div>\r\n                                <ng-container *ngFor=\"let error of error_messages.confirmPassword\">\r\n                                    <mat-error class=\"error-message\" *ngIf=\"resetPasswordForm.get('confirmPassword').hasError(error.type) && (resetPasswordForm.get('confirmPassword').dirty || resetPasswordForm.get('confirmPassword').touched)\">\r\n                                        {{ error.message }}\r\n                                    </mat-error>\r\n                                </ng-container>\r\n                                <span id=\"passError\">{{formError}}</span>\r\n                            </div>\r\n                    </div>\r\n\r\n                    <button mat-raised-button type=\"submit\" [disabled]=\"!resetPasswordForm.valid\" class=\"btns\" id=\"one\">Submit</button>\r\n                    <a routerLink=\"/index\" mat-raised-button class=\"btns\" id=\"two\">Cancel</a>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-reset-success',\r\n  templateUrl: './reset-success.component.html',\r\n  styleUrls: ['./reset-success.component.css']\r\n})\r\nexport class ResetSuccessComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router ) {}\r\n\r\n  ngOnInit() {\r\n\r\n    let message = this.route.snapshot.paramMap.get('message');\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"flex-container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center none\">\r\n        <mat-card class=\"regForm\">\r\n            <mat-card-header>\r\n                <mat-card-title class=\"cardTitle\">Reset Password Successfully</mat-card-title>\r\n            </mat-card-header>\r\n            <mat-card-content class=\"regFormContent\">\r\n                    <p>Please login</p>\r\n                    <a routerLink=\"/login\" mat-raised-button class=\"btns\" id=\"two\">Login</a>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { User } from '../../models/user';\r\nimport { APIService } from '../../services/api.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  signUpForm: FormGroup;\r\n  newUser: any;\r\n  formError: string;\r\n\r\n  constructor(private formBuilder: FormBuilder, private api: APIService, private router: Router) {}\r\n\r\n  //method for creating a new user. A new JSON object is created and sent to the node api\r\n  createNewUser(createUser: any){\r\n    this.formError = '';\r\n    if(this.doPasswordsMatch(this.signUpForm.controls['password'].value, this.signUpForm.controls['confirmPassword'].value) == true){\r\n      this.newUser = {\r\n        \"name\": createUser.name,\r\n        \"username\": createUser.email,\r\n        \"password\": createUser.password\r\n      }\r\n      if(this.newUser != null){\r\n        this.api.createUser(this.newUser).subscribe(\r\n          data => {console.log(data);\r\n              this.router.navigate(['/login']);\r\n            },\r\n          error => {//if status code other than in the 200 range returned, show error\r\n            console.log('Error from API: ', error.error);\r\n            if(error.status >= 401){\r\n              this.formError = error.error;\r\n            }\r\n          })\r\n      }\r\n    }\r\n    else\r\n    {\r\n      this.formError = \"Passwords do not match\";\r\n    }\r\n  }\r\n\r\n  //error messages used during login/register validation\r\n  error_messages = {\r\n    'name': [\r\n      { type: 'required', message: 'Full name is required.' },\r\n      { type: 'pattern', message: 'Name can only consist of letters' }\r\n    ],\r\n    'email': [\r\n      { type: 'required', message: 'Email is required.' },\r\n      { type: 'email', message: 'Invalid email format.' }\r\n    ],\r\n    'password': [\r\n      { type: 'required', message: 'Password is required.' },\r\n      { type: 'minlength', message: 'Password must have at least 6 characters.' }\r\n    ],\r\n    'confirmPassword': [\r\n      { type: 'required', message: 'password is required.' },\r\n      { type: 'minlength', message: 'Password must have at least 6 characters.' }\r\n    ],\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.signUpForm = this.formBuilder.group({\r\n      name: ['', [Validators.required, Validators.pattern('[a-zA-Z ]*')]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: ['', [Validators.required, Validators.minLength(6)]]\r\n    });\r\n  }\r\n\r\n  //checking if passwords match\r\n  doPasswordsMatch(firstPassword: string, secondPassword: string) {\r\n        if (firstPassword !== secondPassword) {\r\n          //this.formError = \"Passwords do not match: \" + controlName + \" \" + matchingControlName;\r\n            return false;\r\n        } else {\r\n          //this.formError = \"Match: \" + controlName + \" \" + matchingControlName;\r\n          return true;\r\n        }\r\n    }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"flex-container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center none\">\r\n        <mat-card class=\"regForm\">\r\n            <mat-card-header>\r\n                <h1>Sign Up</h1>\r\n            </mat-card-header>\r\n            <mat-card-content class=\"regFormContent\">\r\n                <form [formGroup]=\"signUpForm\" (ngSubmit)=\"createNewUser(signUpForm.value)\">\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your full name</mat-label>\r\n                        <input class=\"input\" matInput placeholder=\"John Doe\" formControlName=\"name\" required >\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.name\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"signUpForm.get('name').hasError(error.type) && (signUpForm.get('name').dirty || signUpForm.get('name').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your email</mat-label>\r\n                        <input class=\"input\" matInput placeholder=\"john@doe.com\" formControlName=\"email\" required>\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.email\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"signUpForm.get('email').hasError(error.type) && (signUpForm.get('email').dirty || signUpForm.get('email').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your password</mat-label>\r\n                        <input class=\"input\" matInput required formControlName=\"password\" type=\"password\">\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.password\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"signUpForm.get('password').hasError(error.type) && (signUpForm.get('password').dirty || signUpForm.get('password').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Confirm password</mat-label>\r\n                        <input class=\"input\" matInput  required formControlName=\"confirmPassword\" type=\"password\">\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.confirmPassword\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"signUpForm.get('confirmPassword').hasError(error.type) && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                            <span id=\"passError\">{{formError}}</span>\r\n                        </div>\r\n                    </div>\r\n                    <button mat-raised-button type=\"submit\" [disabled]=\"!signUpForm.valid\" class=\"btn\" id=\"one\">Sign Up</button>\r\n\r\n                    <a routerLink=\"/index\" mat-raised-button color=\"accent\" class=\"btns\">Cancel</a>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-rate-dialog',\r\n  templateUrl: './rate-dialog.component.html',\r\n  styleUrls: ['./rate-dialog.component.css']\r\n})\r\nexport class RateDialogComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    private dialogRef: MatDialogRef<RateDialogComponent>) { }\r\n\r\n    error_messages = {\r\n      'rating': [\r\n        { type: 'pattern', message: 'Number must be between 1 and 5' }\r\n      ]\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      rating: ['', Validators.pattern(\"[1-5]\")]\r\n    })\r\n  }\r\n\r\n  submit(form){\r\n    this.dialogRef.close(`${form.rating}`);\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"submit(form.value)\">\r\n  <h1 mat-dialog-title>Rate Puzzle (out of 5)</h1>\r\n  <mat-dialog-content>\r\n    <mat-form-field>\r\n      <input matInput type=\"number\" min=\"1\" max=\"5\" formControlName=\"rating\" placeholder=\"Enter Rating\" ngControl=\"rating\">\r\n    </mat-form-field>\r\n    <div>\r\n        <ng-container *ngFor=\"let error of error_messages.rating\">\r\n            <mat-error class=\"error-message\" *ngIf=\"form.get('rating').hasError(error.type) && (form.get('rating').dirty || form.get('rating').touched)\">\r\n                {{ error.message }}\r\n            </mat-error>\r\n        </ng-container>\r\n    </div>\r\n\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button mat-button type=\"submit\" [disabled]=\"!form.valid\">Submit</button>\r\n    <button mat-button type=\"button\" mat-dialog-close>Cancel</button>\r\n  </mat-dialog-actions>\r\n</form>\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { User } from '../models/user';\r\nimport { Puzzle } from '../models/Puzzle';\r\nimport { PuzzleRating } from '../models/PuzzleRating';\r\nimport {HttpHeaders} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class APIService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  /**\r\n   * User endpoints start here\r\n   */\r\n  //create new user\r\n  createUser(newUser: User){\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'} ) };\r\n    return this.http.post('http://localhost:3200/api/users/createUser',newUser, httpOptions);\r\n  }\r\n\r\n  loginUser(currentUser: User){\r\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n    return this.http.post('http://localhost:3200/api/users/login', currentUser, httpOptions);\r\n  }\r\n\r\n  resetPassword(currentUser: User){\r\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n    return this.http.put('http://localhost:3200/api/users/resetPassword', currentUser, httpOptions);\r\n  }\r\n\r\n  getUser(token: any){\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'} ) };\r\n    return this.http.post('http://localhost:3200/api/users/getUser',token, httpOptions);\r\n  }\r\n\r\n  updateName(currentUser: User){\r\n    console.log(\"---------\");\r\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n    return this.http.put('http://localhost:3200/api/users/updateName', currentUser, httpOptions);\r\n  }\r\n\r\n  updateUsername(currentUser: User){\r\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n    return this.http.put('http://localhost:3200/api/users/updateUsername', currentUser, httpOptions);\r\n  }\r\n\r\n  getPuzzlesByUser(token: any): Observable<any[]> {\r\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n    return this.http.post<any[]>('http://localhost:3200/api/users/getPuzzlesByUser', token, httpOptions);\r\n  }\r\n\r\n  getPuzzleRatingsByUser(token: any): Observable<any[]>{\r\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n    return this.http.post<any[]>('http://localhost:3200/api/users/getPuzzleRatingsByUser', token, httpOptions);\r\n  }\r\n\r\n  /**\r\n   * User endpoints end here\r\n   */\r\n\r\n\r\n/**\r\n* Puzzle endpoints start here\r\n*/\r\ngetAllPuzzles(){\r\n  return this.http.get('http://localhost:3200/api/puzzles/getAllPuzzles');\r\n}\r\n\r\ngetAllPuzzleByID(puzzleID: number){\r\n  return this.http.get('http://localhost:3200/api/puzzles/getPuzzleByID?Id=' + puzzleID);\r\n}\r\n\r\ncreateNewPuzzle(puzzle: Puzzle){\r\n  const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n  return this.http.post('http://localhost:3200/api/puzzles/createPuzzle', puzzle, httpOptions);\r\n}\r\n\r\ncreateNewPuzzleRating(rating: PuzzleRating){\r\n  const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n  return this.http.post('http://localhost:3200/api/puzzles/createPuzzleRating', rating, httpOptions);\r\n}\r\n\r\ngetAllPuzzleRatings(){\r\n  return this.http.get('http://localhost:3200/api/puzzles/getAllPuzzleRatings');\r\n}\r\n\r\ngetSearchedPuzzles(term: any){\r\n  return this.http.get('http://localhost:3200/api/puzzles/getSearchedPuzzles/' + term);\r\n}\r\n\r\nsharePuzzle(puzzle: any){\r\n  const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n  return this.http.put('http://localhost:3200/api/puzzles/sharePuzzle', puzzle, httpOptions);\r\n}\r\n\r\nstopSharingPuzzle(puzzle: any){\r\n  const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n  return this.http.put('http://localhost:3200/api/puzzles/stopSharingPuzzle', puzzle, httpOptions);\r\n}\r\n\r\n/**\r\n* Puzzle endpoints end here\r\n*/\r\n}\r\n","import Konva from 'konva';\r\n\r\nfunction everything() {\r\n\tlet apiURL = \"http://localhost:3200/api/puzzles/createPuzzle\";\r\n\r\nlet distanceMetric = 'euclidean';\r\nfunction setDistanceMetric(metric)\r\n{\r\n\tdistanceMetric = metric;\r\n}\r\n\r\nwindow.onload = function() {\r\n\tlet puzzleImage;\r\n\tlet canvas = document.getElementById('container');\r\n\tlet canvasCoords = canvas.getBoundingClientRect();\r\n\tlet width = canvas.offsetWidth;\r\n\tlet height = canvas.offsetHeight;\r\n\tlet sites = [];\r\n\tlet siteBoundaries = [];\r\n\tlet precision = 0;\r\n\tlet colors = ['Plum', 'Tomato', 'Orange', 'Violet', 'Gray', 'MediumSeaGreen', 'LightGray', 'SlateBlue', 'Brown', 'Aquamarine', 'AntiqueWhite'];\r\n\tlet generateButtonClicked = false;\r\n\t//let token = 'KQlH2g5Io_AwCwotB4TUC';\r\n\tlet piecesJSONObject = {\r\n\t\t'pieces' : []\r\n\t};\r\n\r\n\tlet stage = new Konva.Stage({\r\n\t\tcontainer: 'container',\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t});\r\n\r\n\tlet layer = new Konva.Layer();\r\n\r\n\tlet square = new Konva.Rect({\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\tstroke: 'black',\r\n\t\tstrokeWidth: 2,\r\n\r\n\t});\r\n\r\n\tlayer.add(square);\r\n\tstage.add(layer);\r\n\r\n\tcanvas.addEventListener('mousedown', function(event){\r\n\t\tif(!generateButtonClicked)\r\n\t\t{\r\n\t\t\tlet x = event.clientX - canvasCoords.x;\r\n\t\t\tlet y = event.clientY - canvasCoords.y;\r\n\t\t\tlet point = createPoint(x, y);\r\n\t\t\tsites.push({\r\n\t\t\t\tx: point.x(),\r\n\t\t\t\ty: point.y(),\r\n\t\t\t\tid: sites.length,\r\n\t\t\t});\r\n\r\n\t\t\tlayer.add(point);\r\n\t\t\tlayer.draw();\r\n\t\t\tconsole.log(\"X: \" + x + \" Y: \" + y);\r\n\t\t}\r\n\t});\r\n\r\n\tfunction createPoint(x, y)\r\n\t{\r\n\t\tlet point = new Konva.Circle({\r\n\t\t\tx: x,\r\n\t\t\ty: y,\r\n\t\t\tradius: 1,\r\n\t\t\tstroke: 'black',\r\n\t\t\tstrokeWidth: 2,\r\n\t\t});\r\n\r\n\t\treturn point;\r\n\t}\r\n\r\n\tdocument.getElementById('generatePuzzleButton').addEventListener('mousedown', generatePuzzle);\r\n\t\r\n\tdocument.getElementById('euclideanButton').addEventListener('mousedown', function(){\r\n\t\tsetDistanceMetric('euclidean');\r\n\t});\r\n\r\n\tdocument.getElementById('manhattanButton').addEventListener('mousedown', function(){\r\n\t\tsetDistanceMetric('manhattan');\r\n\t});\r\n\r\n\t// = token;\r\n\t\r\n\tdocument.getElementById('saveButton').addEventListener('mousedown', function() {\r\n\t\tlet token = document.getElementById('tokenLabel').innerHTML;\r\n\t\tlet puzzleName = document.getElementById('puzzleNameInputBox').value;\r\n\t\tlet puzzleDescription = document.getElementById('puzzleDescriptionInputBox').value;\r\n\r\n\t\tlet puzzleImage = stage.toDataURL({ pixelRatio: 0.25 });\r\n\r\n\t\tlet jsonData = {\r\n\t\t\ttoken: token,\r\n\t\t\tname: puzzleName,\r\n\t\t\tdescription: puzzleDescription,\r\n\t\t\tpuzzleObject: piecesJSONObject,\r\n\t\t\timage: puzzleImage,\r\n\t\t\tshared: false\r\n\t\t};\r\n\r\n\t\t$.ajax({\r\n\t\t\ttype: 'POST',\r\n\t\t\turl: apiURL,\r\n\t\t\theaders: { \r\n\t\t\t\t'Access-Control-Allow-Origin' : '*' \r\n\t\t\t},\r\n\t\t\tcontentType: 'application/json',\r\n\t\t\tdata: JSON.stringify(jsonData),\r\n\t\t\tdataType: 'json',\r\n\t\t\tsuccess: function(data, status) {\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tconsole.log(status);\r\n\t\t\t},\r\n\t\t\terror: function(data, status) {\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tconsole.log(status);\t\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\tdocument.getElementById('saveAndSubmitButton').addEventListener('mousedown', function(){\r\n\t\tlet puzzleImage = stage.toDataURL({ pixelRatio: 0.25 });\r\n\t\tdocument.getElementById('testingImg').src = puzzleImage;\r\n\t});\r\n\r\n\tfunction generatePuzzle()\r\n\t{\r\n\t\tgenerateButtonClicked = true;\r\n\t\tgenerateSiteBoundaries();\r\n\t\tcreatePieces();\r\n\t}\r\n\r\n\tfunction createPieces()\r\n\t{\r\n\t\tlet colorCount = colors.length;\r\n\t\tfor(let i = 0; i < sites.length; i++)\r\n\t\t{\r\n\t\t\tlet trimmedPoints = trimPoints(siteBoundaries[i]);\r\n\t\t\tlet piece = new Konva.Line({\r\n\t\t\t\t// points: siteBoundaries[i],\r\n\t\t\t\tpoints: trimmedPoints,\r\n\t\t\t\tstroke: colors[i % colorCount],\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tdraggable: true\r\n\t\t\t});\r\n\r\n\t\t\tpiece.on('mouseover', function (){\r\n\t\t\t\tdocument.body.style.cursor = 'pointer';\r\n\t\t\t});\r\n\r\n\t\t\tpiece.on('mouseout', function() {\r\n\t\t\t\tdocument.body.style.cursor = 'default';\r\n\t\t\t});\r\n\r\n\t\t\tpiecesJSONObject.pieces.push(trimmedPoints);\r\n\t\t\tlayer.add(piece);\r\n\t\t}\r\n\t\tlayer.draw();\r\n\t\tpiecesJSONObject = JSON.stringify(piecesJSONObject);\r\n\t\t// console.log(piecesJSONObject);\r\n\t}\r\n\r\n\tfunction trimPoints(pointArray)\r\n\t{\r\n\t\tlet trimmedPoints = [];\r\n\t\tlet lastPointCol;\r\n\t\tlet firstPointCol = pointArray[0];\r\n\t\tlet currentRow = pointArray[1];\r\n\r\n\t\ttrimmedPoints.push(firstPointCol, currentRow);\r\n\r\n\t\tfor(let index = 0; index < pointArray.length; index+=2)\r\n\t\t{\r\n\t\t\tif(currentRow != pointArray[index+1])\r\n\t\t\t{\r\n\t\t\t\ttrimmedPoints.push(lastPointCol, currentRow);\r\n\t\t\t\tcurrentRow = pointArray[index+1];\r\n\t\t\t\tfirstPointCol = pointArray[index];\r\n\t\t\t\ttrimmedPoints.push(firstPointCol, currentRow);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tlastPointCol = pointArray[index];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn trimmedPoints;\r\n\t}\r\n\r\n\tfunction generateSiteBoundaries()\r\n\t{\r\n\t\tfor(let i = 0; i < sites.length; i++)\r\n\t\t\tsiteBoundaries[i] = [];\r\n\r\n\t\tfor(let row = 0; row < height; row++)\r\n\t\t{\r\n\t\t\tfor(let col = 0; col < width; col++)\r\n\t\t\t{\r\n\t\t\t\tlet distances = calculateDistancesFromSitesToPoint(col, row, sites);\r\n\t\t\t\tlet equidistantPoints = equidistantPointsPresent(distances);\r\n\r\n\t\t\t\tsiteBoundaries[equidistantPoints[0]].push(col);\r\n\t\t\t\tsiteBoundaries[equidistantPoints[0]].push(row);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction equidistantPointsPresent(distances)\r\n\t{\r\n\t\tlet returnArray = [];\r\n\t\tlet minimumDistance = Math.min(...distances);\r\n\r\n\t\tif(distanceMetric === 'euclidean')\r\n\t\t\tminimumDistance = minimumDistance.toFixed(precision) + '';\r\n\r\n\t\tlet index = 0, counter = 0;\r\n\r\n\t\twhile(index != -1)\r\n\t\t{\r\n\t\t\tindex = distances.indexOf(minimumDistance);\r\n\t\t\tif(index != -1)\r\n\t\t\t{\r\n\t\t\t\treturnArray.push(index+counter);\r\n\t\t\t\tdistances.splice(index, 1);\r\n\t\t\t\tcounter++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn returnArray;\r\n\t}\r\n\r\n\tfunction calculateDistancesFromSitesToPoint(xOfPoint, yOfPoint, sitePoints)\r\n\t{\r\n\t\tlet result = [];\r\n\t\tif(distanceMetric === 'euclidean')\r\n\t\t{\r\n\t\t\tfor(let i = 0; i < sitePoints.length; i++)\r\n\t\t\t\tresult.push(calculateEuclideanDistance(xOfPoint, yOfPoint, sitePoints[i].x, sitePoints[i].y));\r\n\t\t}\r\n\t\telse if(distanceMetric === 'manhattan')\r\n\t\t{\r\n\t\t\tfor(let i = 0; i < sitePoints.length; i++)\r\n\t\t\t\tresult.push(calculateManhattanDistance(xOfPoint, yOfPoint, sitePoints[i].x, sitePoints[i].y));\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction calculateEuclideanDistance(point1X, point1Y, point2X, point2Y)\r\n\t{\r\n\t\tlet result = Math.pow( Math.pow( point1X - point2X, 2 ) + Math.pow( point1Y - point2Y, 2 ), 0.5 );\r\n\t\treturn result.toFixed(precision);\r\n\t}\r\n\r\n\r\n\tfunction calculateManhattanDistance(point1X, point1Y, point2X, point2Y)\r\n\t{\r\n\t\tlet resultX = point1X - point2X;\r\n\t\tif(resultX < 0)\r\n\t\t\tresultX *= -1;\r\n\t\tlet resultY = point1Y - point2Y;\r\n\t\tif(resultY < 0)\r\n\t\t\tresultY *= -1;\r\n\t\tlet result = resultX + resultY;\r\n\t\treturn result;\r\n\t}\r\n}\r\n}\r\n\r\nvar createModule = new everything();\r\n\r\nexport { createModule };","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}