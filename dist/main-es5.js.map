{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/pages/aicreate/aicreate.component.ts","webpack:///src/app/pages/aicreate/aicreate.component.html","webpack:///src/app/pages/create/create.component.ts","webpack:///src/app/pages/create/create.component.html","webpack:///src/app/pages/index/index.component.ts","webpack:///src/app/pages/index/index.component.html","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/profile-puzzles/profile-puzzles.component.html","webpack:///src/app/pages/profile-puzzles/profile-puzzles.component.ts","webpack:///src/app/pages/profile-ratings/profile-ratings.component.ts","webpack:///src/app/pages/profile-ratings/profile-ratings.component.html","webpack:///src/app/pages/profile/profile.component.ts","webpack:///src/app/pages/profile/profile.component.html","webpack:///src/app/pages/ratings/RatingsArr.ts","webpack:///src/app/pages/ratings/puzzleArr.ts","webpack:///src/app/pages/ratings/ratings.component.ts","webpack:///src/app/pages/ratings/ratings.component.html","webpack:///src/app/pages/reset-password/reset-password.component.ts","webpack:///src/app/pages/reset-password/reset-password.component.html","webpack:///src/app/pages/reset-success/reset-success.component.ts","webpack:///src/app/pages/reset-success/reset-success.component.html","webpack:///src/app/pages/signup/signup.component.ts","webpack:///src/app/pages/signup/signup.component.html","webpack:///src/app/rate-dialog/rate-dialog.component.ts","webpack:///src/app/rate-dialog/rate-dialog.component.html","webpack:///src/app/services/api.service.ts","webpack:///src/assets/js/aiCreation.js","webpack:///src/assets/js/manualCreation.js","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","entryComponents","providers","bootstrap","NavbarComponent","router","localStorage","removeItem","navigate","name","getItem","logout","AICreateComponent","token","CreateComponent","IndexComponent","LoginComponent","formBuilder","api","error_messages","type","message","fieldTextType","currentUser","formError","verifyUser","email","password","loginUser","subscribe","data","console","log","setItem","setTimeout","alert","error","status","loginForm","group","required","minLength","toggleFieldTextType","ProfilePuzzlesComponent","temp","pageSize","startIndex","endIndex","pageSizeOptions","setPageSizeOptionsInput","split","map","str","event","pageIndex","totalNumberOfPuzzles","userPuzzleList","slice","sort","a","b","paramA","toLowerCase","paramB","getPuzzlesByUser","Object","length","text","show","puzzle","sharePuzzle","location","reload","puzzleID","deletePuzzle","stopSharingPuzzle","ms","delay","getUserPuzzles","nameAscending","nameDescending","changeEvent","ProfileRatingsComponent","dialog","userRatingsList","puzzleName","rating","getPuzzleRatingsByUser","ratePID","rateDialogRef","open","afterClosed","result","ratingEntry","createNewPuzzleRating","rateP","checkData","openRateDialog","deleteVal","findRatingID","deleteRating","getUserPuzzleRatings","ratingAscending","ratingDescending","ProfileComponent","nameTextboxValue","undefined","updateName","currentUserObject","usernameTextboxValue","updateUsername","getUser","updateNameForm","pattern","updateUsernameForm","username","RatingsArr","PuzzleArr","RatingsComponent","cdr","displayedColumns","puzzles","ratings","creator","created","populatePuz","getAllPuzzleRatings","i","ratingObj","push","getPuzzles","getAllPuzzles","searchValue","getSearchedPuzzles","dataObjectSize","populate","puzzleObj","description","createdAt","image","showRating","j","total","k","toString","toFixed","datasource","dataAvailable","filterValue","filterPredicate","filter","includes","trim","filteredData","applyFilter","puzzleAscending","puzzleDescending","creatorAscending","creatorDescending","dateAscending","dateDescending","ResetPasswordComponent","fieldTextType2","resetDone","doPasswordsMatch","resetPasswordForm","controls","value","resetPassword","confirmPassword","firstPassword","secondPassword","toggleFieldTextType2","ResetSuccessComponent","route","snapshot","paramMap","get","SignupComponent","createUser","signUpForm","newUser","createNewUser","RateDialogComponent","dialogRef","form","close","submit","APIService","http","httpOptions","headers","post","put","term","providedIn","Chromosome","sites","fitness","Site","x","y","surfaceArea","generatePuzzleAIButton","colorPalettesDiv","tempWidth","tempHeight","totalSurfaceArea","generationSize","tournamentSize","maximumIterations","seedString","sliders","labels","numberOfSites","desiredProportions","groupDistribution","copyObject","obj","JSON","parse","stringify","xmur3","h","Math","imul","charCodeAt","mulberry32","t","seed","rand","random","max","ceil","expandPuzzle","factor","initializeDataAI","document","getElementById","addEventListener","generatePuzzleAI","remove","displaySlidersCard","generateSliders","appendChild","proportion","counter","innerHTML","run","numberOfSliders","inputContainer","defaultValue","slider","createElement","min","previousValue","sliderid","step","difference","distributedValue","leftover","tempValue","parseFloat","parseInt","headerLabel","valueLabel","br","currentGeneration","nextGeneration","parentX","parentY","children","initializeGeneration","generation","getFittest","runTournament","crossover","mutate","calculateAndSetFitness","fittestChromosome","chromosome","selectedSite","offset","movementDirection","chromosomeX","chromosomeY","swapIndex","childX","childY","tempSite","chosenChromosome","newChromosome","siteIndex","determineAndSetSiteBoundaries","sortSites","siteA","siteB","row","col","distances","equidistantPoints","apiURL","distanceMetric","contentDiv","aiContentDiv","canvas","canvasCoords","width","height","stage","layer","square","pointsArray","siteBoundaries","pieces","precision","colorPalettes","selectedPalette","paletteCounter","radioButtons","hoverOverPoint","disableEditMode","deletePointButtonClicked","piecesJSONObject","editIcon","deleteIcon","defaultPalette","addColorPalette","shadesOfRedPalette","shadesOfGreenPalette","shadesOfBluePalette","arrayOfColors","paletteName","changePuzzleColorPalette","colors","removeChildren","attrs","stroke","add","draw","randomizePuzzleColorPalette","getRandomRGB","r","floor","g","initializeData","appendedString","Stage","container","Layer","Rect","strokeWidth","getBoundingClientRect","clientX","clientY","point","createPoint","generatePuzzle","setDistanceMetric","savePuzzle","palettes","getElementsByClassName","paletteIndex","getAttribute","addColorPalettePicker","colorPaletteDiv","label","puzzleDescription","puzzleImage","toDataURL","pixelRatio","jsonData","puzzleObject","shared","$","ajax","url","contentType","dataType","success","metric","setDisableEditMode","bool","setSites","tempSites","clearBoard","destroyChildren","Circle","radius","draggable","on","onmousemove","body","style","cursor","destroy","getChildren","node","getClassName","generateSiteBoundaries","createPieces","trimmedPoints","trimPoints","piece","Line","points","pointArray","lastPointCol","firstPointCol","currentRow","crissCross","index","calculateDistancesFromSitesToPoint","equidistantPointsPresent","returnArray","minimumDistance","indexOf","splice","xOfPoint","yOfPoint","sitePoints","calculateDistance","point1X","point1Y","point2X","point2Y","calculateEuclideanDistance","calculateManhattanDistance","pow","resultX","resultY","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SignupComponent } from './pages/signup/signup.component';\nimport { IndexComponent } from './pages/index/index.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { ProfilePuzzlesComponent } from './pages/profile-puzzles/profile-puzzles.component'\nimport { ProfileRatingsComponent } from './pages/profile-ratings/profile-ratings.component'\nimport { RatingsComponent } from './pages/ratings/ratings.component';\nimport { ResetPasswordComponent } from './pages/reset-password/reset-password.component';\nimport { ResetSuccessComponent } from './pages/reset-success/reset-success.component';\nimport { CreateComponent } from './pages/create/create.component';\nimport { AICreateComponent } from './pages/aicreate/aicreate.component';\nimport {MatTableDataSource} from '@angular/material/table';\n\n\nconst routes: Routes = [\n  {path: 'index', component: IndexComponent},\n  {path: 'signup', component: SignupComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'profile', component: ProfileComponent},\n  {path: 'profilePuzzles', component: ProfilePuzzlesComponent},\n  {path: 'profileRatings', component: ProfileRatingsComponent},\n  {path: 'ratings', component: RatingsComponent},\n  {path: 'resetPassword', component: ResetPasswordComponent},\n  {path: 'resetSuccess', component: ResetSuccessComponent},\n  {path: 'create', component: CreateComponent},\n  {path: 'aicreate', component: AICreateComponent},\n\n    // otherwise redirect to home\n  { path: '', redirectTo: '/index', pathMatch: 'full' },\n  { path: '**', component: IndexComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'prometheus-puzzles';\n  \n  constructor() {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n//\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { MatToolbarModule} from '@angular/material/toolbar';\nimport { MatTableModule} from '@angular/material/table';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatGridListModule } from '@angular/material/grid-list'\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSliderModule } from '@angular/material/slider';\nimport {MatPaginatorModule} from '@angular/material/paginator';\n\n\n//pages\nimport { IndexComponent } from './pages/index/index.component';\nimport { SignupComponent } from './pages/signup/signup.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { RatingsComponent } from './pages/ratings/ratings.component';\nimport { ResetPasswordComponent } from './pages/reset-password/reset-password.component';\nimport { ResetSuccessComponent } from './pages/reset-success/reset-success.component';\nimport { CreateComponent } from './pages/create/create.component';\nimport { RateDialogComponent } from './rate-dialog/rate-dialog.component';\nimport { ProfilePuzzlesComponent } from './pages/profile-puzzles/profile-puzzles.component';\nimport { ProfileRatingsComponent } from './pages/profile-ratings/profile-ratings.component';\nimport { AICreateComponent } from './pages/aicreate/aicreate.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    IndexComponent,\n    SignupComponent,\n    LoginComponent,\n    ProfileComponent,\n    RatingsComponent,\n    NavbarComponent,\n    ResetPasswordComponent,\n    ResetSuccessComponent,\n    CreateComponent,\n    RateDialogComponent,\n    ProfilePuzzlesComponent,\n    ProfileRatingsComponent,\n    AICreateComponent,\n  ],\n  imports: [\n    BrowserModule,\n    NgxPaginationModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatDividerModule,\n    MatIconModule,\n    MatMenuModule,\n    MatProgressSpinnerModule,\n    MatToolbarModule,\n    MatTableModule,\n    HttpClientModule,\n    FormsModule,\n    MatInputModule, MatListModule, MatPaginatorModule,\n    MatCardModule, MatFormFieldModule, MatDialogModule, MatGridListModule, MatRadioModule, ReactiveFormsModule,\n    MDBBootstrapModule.forRoot(),\n  ],\n  entryComponents: [RateDialogComponent],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit} from '@angular/core';\n//import { getName } from '.././pages/login/login.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  name:string;\n\n  constructor(private router: Router) { }\n\n  logout(){\n    localStorage.removeItem('token');\n    this.router.navigate(['/index']);\n  }\n\n  ngOnInit(): void {\n    this.name = localStorage.getItem('name');\n  }\n\n\n}\n","<div class=\"container-fluid\">\n<div class=\"logo\">\n  <img class=\"navimg\" src=\"assets/images/logo_nav.png\" routerLink=\"/ratings\">\n</div>\n  <nav class=\"navbar navbar-expand-sm\" id=\"navCustom\">\n\n    <span class=\"left\"><button id=\"burger\" class=\"navbar-toggler hidden-sm hidden-md hidden-lg hidden-xl\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent1\"\n    aria-controls=\"navbarSupportedContent1\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span><i\n        class=\"fa fa-bars fa-2x\"></i></span></button></span>\n\n    <span class=\"collapse navbar-collapse left\" id=\"navbarSupportedContent1\">\n        <ul class=\"nav navbar-nav mr-auto\" routerLinkActive=\"active\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" routerLink=\"/ratings\">View</a>\n            </li>\n            <li class=\"nav-item dropdown\" >\n              <a  role=\"button\" class=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Create<div class=\"caret\"></div></a>\n               <div  class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                 <a class=\"dropdown-item\" routerLink=\"/create\" >Manual</a><br>\n                 <a class=\"dropdown-item\" routerLink=\"/aicreate\" >AI</a><br>\n               </div>\n            </li>\n            <li class=\"nav-item dropdown\">\n              <a role=\"button\" class=\"nav-link dropdown-toggle\" id=\"navbarDropdown2\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Profile<div class=\"caret\"></div></a>\n               <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown2\">\n                 <a class=\"dropdown-item\" routerLink=\"/profile\">My Details</a><br>\n                 <a class=\"dropdown-item\" routerLink=\"/profileRatings\">My Ratings</a><br>\n                 <a class=\"dropdown-item\" routerLink=\"/profilePuzzles\">My Puzzles</a>\n               </div>\n            </li>\n        </ul>\n    </span>\n    <span class=\"navbar-text\">\n        Hello, {{name}}\n        <a id=\"logout\" (click)=\"logout()\">Logout</a>\n    </span>\n  </nav>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { initializeDataAI } from 'src/assets/js/aiCreation.js';\n\n@Component({\n  selector: 'app-aicreate',\n  templateUrl: './aicreate.component.html',\n  styleUrls: ['./aicreate.component.css']\n})\nexport class AICreateComponent implements OnInit {\n\n  token: any;\n\n  name: any;\n  description: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  \tinitializeDataAI();\n    this.token = localStorage.getItem('token');\n  }\n\n}\n","<app-navbar></app-navbar>\n<div>\n  <a mat-raised-button id=\"help\" src=\"../../../assets/gifHelp.mp4\">Tutorial</a>\n </div>\n\n<div class=\"container-fluid\">\n  <div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutGap=\"1\">\n    <mat-card class=\"puzzleOptions\">\n      <mat-card-header>\n        <mat-card-title class=\"titleLabel\">Algorithm Parameters</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <div id=\"inputContainer\">\n          <label>Number of puzzle pieces(20 max):</label><br>\n          <input type=\"text\" name=\"numberOfPieces\" id=\"numberOfPiecesInputBox\" value=\"3\"><br>\n          <label>Number of Group 1 pieces:</label><br>\n          <input type=\"text\" name=\"numberOfPieces\" id=\"numberOfPiecesInputBox1\" value=\"1\"><br>\n          <label>Number of Group 2 pieces:</label><br>\n          <input type=\"text\" name=\"numberOfPieces\" id=\"numberOfPiecesInputBox2\" value=\"1\"><br>\n          <label>Number of Group 3 pieces:</label><br>\n          <input type=\"text\" name=\"numberOfPieces\" id=\"numberOfPiecesInputBox3\" value=\"1\"><br>\n          <label>Select Puzzle Type</label><br>\n          <mat-radio-group class=\"radio-group\">\n            <mat-radio-button class=\"radio-button\" value=\"euclidean\" name=\"distanceMetric\" id=\"euclideanButtonAI\" > Euclidian </mat-radio-button>\n            <mat-radio-button class=\"radio-button\" value=\"manhattan\" name=\"distanceMetric\" id=\"manhattanButtonAI\" > Manhattan </mat-radio-button>\n          </mat-radio-group>\n          <button mat-raised-button class=\"btns\" id=\"nextButton\">Next</button>\n          <button mat-raised-button class=\"btns\" id=\"generatePuzzleButtonAI\">Generate Puzzle</button><br>\n        </div>\n      </mat-card-content>\n   </mat-card>\n\n   <mat-card class=\"creationCard\">\n     <mat-card-header>\n       <mat-card-title >Create a puzzle</mat-card-title>\n     </mat-card-header>\n    <mat-card-content>\n      <div id=\"containerAI\">\n      </div>\n      <!-- <div id='colorPalettesAI'>\n        <button mat-raised-button class=\"btns\" id=\"randomizeColorsButtonAI\">Randomize Colors</button>\n      </div> -->\n    </mat-card-content>\n  </mat-card>\n  <mat-card class=\"saveOptions\">\n    <mat-card-header>\n      <mat-card-title class=\"titleLabel\">Saving Options</mat-card-title>\n    </mat-card-header>\n    <mat-card-content class=\"matContentC\">\n      <label>Select a color-palette:</label><br>\n      <mat-radio-group>\n        <mat-radio-button class=\"radio-button colorPalettes\" paletteid=0 value=\"default\" name=\"colorPalettes\">Default</mat-radio-button>\n        <mat-radio-button class=\"radio-button colorPalettes\" paletteid=1 value=\"shadesOfRed\" name=\"colorPalettes\">Shades Of Red</mat-radio-button>\n        <mat-radio-button class=\"radio-button colorPalettes\" paletteid=2 value=\"shadesOfGreen\" name=\"colorPalettes\">Shades Of Green</mat-radio-button>\n        <mat-radio-button class=\"radio-button colorPalettes\" paletteid=3 value=\"shadesOfBlue\" name=\"colorPalettes\">Shades of Blue</mat-radio-button>\n      </mat-radio-group>\n      <button mat-raised-button class=\"btns\" id=\"randomizeColorsButtonAI\">Randomize Colors</button>\n      <br><br>\n      <label id=\"\">Name: </label><br><input [(ngModel)]=\"name\" type=\"text\" name=\"puzzleName\" id=\"puzzleNameInputBoxAI\"><br>\n      <label id=\"\">Short Description: </label><br><input [(ngModel)]=\"description\" type=\"text\" name=\"puzzleDescription\" id=\"puzzleDescriptionInputBoxAI\"><br>\n      <label hidden=\"true\" id=\"tokenLabel\">{{token}}</label><br>\n      <button mat-raised-button class=\"btns\" [disabled]=\"(!name) || (!description)\" id=\"saveButtonAI\" routerLink=\"/profilePuzzles\">Save</button>\n    </mat-card-content>\n  </mat-card>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { initializeData } from 'src/assets/js/manualCreation.js';\r\nimport Konva from 'konva';\r\nimport { Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.css']\r\n})\r\nexport class CreateComponent implements OnInit {\r\n\r\n  token: any;\r\n\r\n  name: any;\r\n  description: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    initializeData();\r\n    this.token = localStorage.getItem('token');\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n<div>\r\n <a mat-raised-button id=\"help\" src=\"../../../assets/gifHelp.mp4\">Tutorial</a>\r\n</div>\r\n<div class=\"container-fluid\">\r\n  <div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutGap=\"1\">\r\n    <mat-card class=\"puzzleType\">\r\n      <mat-card-header>\r\n        <mat-card-title class=\"titleLabel\">Select Puzzle Type</mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <mat-radio-group class=\"radio-group\">\r\n          <mat-radio-button class=\"radio-button\" value=\"euclidean\" name=\"distanceMetric\" id=\"euclideanButton\" > Euclidian </mat-radio-button>\r\n          <mat-radio-button class=\"radio-button\" value=\"manhattan\" name=\"distanceMetric\" id=\"manhattanButton\" > Manhattan </mat-radio-button>\r\n        </mat-radio-group>\r\n      </mat-card-content>\r\n   </mat-card>\r\n\r\n   <mat-card class=\"creationCard\">\r\n    <mat-card-header>\r\n      <mat-card-title class=\"titleLabel\">Create puzzle by selecting points on the canvas</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <button mat-raised-button class=\"btns\" id=\"deletePointButton\">\r\n        <mat-icon id=\"deletePointButtonIcon\">delete</mat-icon><mat-icon id=\"editPointButtonIcon\">edit</mat-icon> Delete Mode\r\n      </button>\r\n      <div id=\"container\">\r\n      </div>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <!-- <div id='colorPalettes'>\r\n      </div> -->\r\n      <!-- <button mat-raised-button class=\"btns\" id=\"deletePointButton\">Delete Mode</button> -->\r\n      <button mat-raised-button class=\"btns\" id=\"generatePuzzleButton\">Generate Puzzle</button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"saveOptions\">\r\n    <mat-card-header>\r\n      <mat-card-title>Saving Options</mat-card-title>\r\n    </mat-card-header>\r\n    \r\n    <mat-card-content class=\"matContentC\">\r\n      <label class=\"titleLabel\">Select a color-palette:</label><br>\r\n      <mat-radio-group>\r\n        <mat-radio-button class=\"radio-button colorPalettes\" paletteid=0 value=\"default\" name=\"colorPalettes\">Default</mat-radio-button>\r\n        <mat-radio-button class=\"radio-button colorPalettes\" paletteid=1 value=\"shadesOfRed\" name=\"colorPalettes\">Shades Of Red</mat-radio-button>\r\n        <mat-radio-button class=\"radio-button colorPalettes\" paletteid=2 value=\"shadesOfGreen\" name=\"colorPalettes\">Shades Of Green</mat-radio-button>\r\n        <mat-radio-button class=\"radio-button colorPalettes\" paletteid=3 value=\"shadesOfBlue\" name=\"colorPalettes\">Shades of Blue</mat-radio-button>\r\n      </mat-radio-group>\r\n      <button mat-raised-button class=\"btns\" id=\"randomizeColorsButton\">Randomize Colors</button>\r\n      <br><br>\r\n      <!-- <mat-form-field appearance=\"fill\">\r\n        <mat-label>Enter your email</mat-label>\r\n        <input class=\"input\" matInput placeholder=\"john@doe.com\" formControlName=\"email\" required>\r\n    </mat-form-field> -->\r\n      <label id=\"\">Name: </label><br><input type=\"text\" [(ngModel)]=\"name\" name=\"puzzleName\" id=\"puzzleNameInputBox\"><br>\r\n      <label id=\"\">Short Description: </label><br><input type=\"text\" [(ngModel)]=\"description\" name=\"puzzleDescription\" id=\"puzzleDescriptionInputBox\"><br>\r\n      <label hidden=\"true\" id=\"tokenLabel\">{{token}}</label><br>\r\n      <button mat-raised-button class=\"btns\" [disabled]=\"(!name) || (!description)\" id=\"saveButton\" routerLink=\"/profilePuzzles\">Save</button>\r\n    </mat-card-content>\r\n  </mat-card>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.css']\r\n})\r\nexport class IndexComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<header id=\"indexNav\">\r\n    <nav class=\"links\">\r\n      <ul>\r\n        <li id=\"btnLink\"><a href=\"/signup\" mat-button class=\"indexBtn\">Sign Up</a></li>\r\n        <li id=\"btnLink\"><a href=\"/login\" mat-button class=\"indexBtn\">Login</a></li>\r\n      </ul>\r\n    </nav>\r\n</header>\r\n\r\n<img class=\"splashImage\" src=\"assets/images/web.jpg\">\r\n<div class=\"container\" id=\"second\">\r\n        <h1 class=\"main-title\"><strong>C R E A T E .  S H A R E .  R A T E . </strong></h1>\r\n        <h2 class=\"subtitle\">Create account or login to start creating 3D puzzles that can be shared, rated and printed</h2>\r\n    <div class=\"flex-container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\" >\r\n        <div class=\"one\">\r\n            <div class=\"content\">\r\n                <div class=\"content-overlay\"></div>\r\n                <img class=\"content-image\" src=\"assets/images/puzzles/6.png\">\r\n                <div class=\"content-details fadeIn-bottom\">\r\n                    <h3 class=\"content-title\">Geometric Puzzles</h3>\r\n                    <p class=\"content-text\">This is a short description of a geometric equationed arithmetic puzzle. Magnified by bliss.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"one\">\r\n            <div class=\"content\">\r\n                <div class=\"content-overlay\"></div>\r\n                <img class=\"content-image\" src=\"assets/images/puzzles/2.png\">\r\n                <div class=\"content-details fadeIn-bottom\">\r\n                    <h3 class=\"content-title\">Arithmetic Puzzles</h3>\r\n                    <p class=\"content-text\">This is a short description of a arithmetic equationed arithmetic puzzle. Magnified by razor.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"one\" id=\"hiddenImage\">\r\n            <div class=\"content\">\r\n                <div class=\"content-overlay\"></div>\r\n                <img class=\"content-image\" src=\"assets/images/puzzles/6.png\">\r\n                <div class=\"content-details fadeIn-bottom\">\r\n                    <h3 class=\"content-title\">Polygon Puzzles</h3>\r\n                    <p class=\"content-text\">This is a short description of a polygon equationed arithmetic puzzle. Magnified by shoes.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <!--\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"indexNavBtns\">\r\n        <mat-card fxFlex=\"90\" fxLayoutAlign=\"space-evenly center\">\r\n            <a routerLink=\"/login\" mat-raised-button class=\"btn\">Login\r\n            <a routerLink=\"/signup\" mat-raised-button class=\"btn\">Sign Up\r\n      </mat-card>\r\n    </div> -->\r\n\r\n\r\n    <!--\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"indexNavBtns\">\r\n        <mat-card fxFlex=\"90\" fxLayoutAlign=\"space-evenly center\">\r\n            <a routerLink=\"/login\" mat-raised-button class=\"btn\">Login\r\n            <a routerLink=\"/signup\" mat-raised-button class=\"btn\">Sign Up\r\n      </mat-card>\r\n    </div>\r\n     -->\r\n\r\n    <!-- <div class=\"content\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"descText\">\r\n            <mat-card fxFlex=\"90\">\r\n                    <p>Puzzles have been a hobby of many people over the centuries, coming in various\r\n                    forms which have various ways of solving. Puzzles have played a role in people’s\r\n                    problem solving skills. Puzzle generators have allowed for more puzzles to be\r\n                    created, using various techniques to create interesting and challenging puzzles.\r\n                    The system requested by the client involves the creation of 3-Dimensional puzzles (manually and from the use of AI), testing of puzzles, sharing and rating of\r\n                    puzzles by other users, as well as the ability of downloading 3D printable files.\r\n                    Team Prometheus, has come up with a way to develop the system according to\r\n                    the client’s specifications.</p>\r\n          </mat-card>\r\n        </div> -->\r\n\r\n\r\n\r\n        <!-- <div class=\"container\">\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <div class=\"flex-container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\" >\r\n            <div class=\"overlay\"></div>\r\n            <mat-card  class=\"child-1\">\r\n                <mat-card-header>\r\n                    <mat-card-title>Puzzle One</mat-card-title>\r\n                    <mat-card-subtitle class=\"one\">Created by {{puzzle.creator}}</mat-card-subtitle>\r\n                    <mat-card-subtitle class=\"one\">Rating: </mat-card-subtitle>\r\n                    <mat-card-subtitle class=\"one\">Date: </mat-card-subtitle>\r\n                    <mat-card-subtitle class=\"one\">Created by X</mat-card-subtitle>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                    <img class=\"indexImg\" src=\"assets/images/imgC.jpg\">\r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                    <button mat-button class=\"btns\">SOLVE</button>\r\n                    <button mat-button class=\"btns\">RATE</button>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n\r\n            <mat-card  class=\"child-2\">\r\n                <mat-card-header>\r\n                    <mat-card-title>Puzzle One</mat-card-title>\r\n                    <mat-card-subtitle class=\"one\">Created by X</mat-card-subtitle>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                    <img class=\"indexImg\"  src=\"assets/images/imgB.jpg\">\r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                    <button mat-button class=\"btns\">SOLVE</button>\r\n                    <button mat-button class=\"btns\">RATE</button>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n            <mat-card class=\"child-3\">\r\n                <mat-card-header>\r\n                    <mat-card-title>Puzzle One</mat-card-title>\r\n                    <mat-card-subtitle class=\"one\">Created by X</mat-card-subtitle>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                    <img class=\"indexImg\"  src=\"assets/images/imgC.jpg\">\r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                    <button mat-button class=\"btns\">SOLVE</button>\r\n                    <button mat-button class=\"btns\">RATE</button>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n        </div>\r\n\r\n\r\n                <a routerLink=\"/login\" mat-raised-button class=\"btn\">Login\r\n                <a routerLink=\"/signup\" mat-raised-button class=\"btn\">Sign Up\r\n\r\n\r\n    </div> -->\r\n\r\n    <!--\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"indexNavBtns\">\r\n        <mat-card fxFlex=\"90\" fxLayoutAlign=\"space-evenly center\">\r\n            <a routerLink=\"/login\" mat-raised-button class=\"btn\">Login\r\n            <a routerLink=\"/signup\" mat-raised-button class=\"btn\">Sign Up\r\n      </mat-card>\r\n    </div> -->\r\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { APIService } from 'src/app/services/api.service';\nimport { User } from 'src/app/models/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  verifyUser: any;\n  formError: string;\n  fieldTextType: boolean;\n\n  constructor(private formBuilder: FormBuilder, private api: APIService, private router: Router) {}\n  //method for logging in user and getting the token associated with the said user\n\n  toggleFieldTextType() {\n    this.fieldTextType = !this.fieldTextType;\n  }\n\n\n  loginUser(currentUser: User){\n    this.formError = '';\n    if(currentUser !== null){\n      this.verifyUser = {\n        \"username\":currentUser.email,\n        \"password\":currentUser.password\n      }\n\n      this.api.loginUser(this.verifyUser).subscribe(\n        data => { console.log(data);\n          localStorage.removeItem('name');\n          localStorage.setItem('name', data['name']);\n          localStorage.removeItem('token');\n          localStorage.setItem('token', data['token']);\n\n        this.formError = \"\";\n        this.router.navigate(['/ratings']);\n\n        setTimeout(()=>{\n          localStorage.removeItem('token');\n          this.router.navigate(['login']);\n          alert(\"You have been logged out after 1 hour\");\n        },3600000);\n      },\n        error => {//if status code other than in the 200 range returned, show error\n          console.log('Error from API: ', error.error);\n          if(error.status >= 401){\n            this.formError = error.error;\n          }\n        })\n    }\n\n  }\n\n  //error messages used during login/register validation\n  error_messages = {\n    'email': [\n      { type: 'required', message: 'Email is required.' },\n      { type: 'email', message: 'Invalid email format.' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password is required.' },\n      { type: 'minlength', message: 'Password must have at least 6 characters.' }\n    ]\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n\n    });\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"flex-container\" fxLayout=\"row\" fxLayoutAlign=\"center none\">\n        <mat-card class=\"regForm\"><img src=\"assets/images/label.png\">\n            <mat-card-header>\n                <h3>Login</h3>\n            </mat-card-header>\n            <mat-card-content class=\"regFormContent\">\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser(loginForm.value)\">\n                    <div>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Enter your email</mat-label>\n                        <input class=\"input\" matInput placeholder=\"john@doe.com\" formControlName=\"email\" required>\n                    </mat-form-field>\n                        <div>\n                            <ng-container *ngFor=\"let error of error_messages.email\">\n                                <mat-error class=\"error-message\" *ngIf=\"loginForm.get('email').hasError(error.type) && (loginForm.get('email').dirty || loginForm.get('email').touched)\">\n                                    {{ error.message }}\n                                </mat-error>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Enter your password</mat-label><br>\n                        <input matInput required\n                            [type]=\"fieldTextType ? 'text' : 'password'\" class=\"input\" formControlName=\"password\"/>\n                    </mat-form-field>\n                    <span>\n                        <i class=\"fa\" [ngClass]=\"{ 'fa-eye-slash': !fieldTextType,'fa-eye': fieldTextType }\" (click)=\"toggleFieldTextType()\">\n                        </i>\n                    </span>\n\n                        <div>\n                            <ng-container *ngFor=\"let error of error_messages.password\">\n                                <mat-error class=\"error-message\" *ngIf=\"loginForm.get('password').hasError(error.type) && (loginForm.get('password').dirty || loginForm.get('password').touched)\">\n                                    {{ error.message }}\n                                </mat-error>\n                            </ng-container>\n                            <span id=\"passError\">{{formError}}</span>\n                        </div>\n                    </div>\n                    <button mat-raised-button type=\"submit\" [disabled]=\"!loginForm.valid\" class=\"btns\" id=\"one\">Login</button>\n                    <a routerLink=\"/index\" mat-raised-button class=\"btns\" id=\"two\">Cancel</a>\n                </form>\n            </mat-card-content>\n            <mat-card-actions>\n                <a routerLink=\"/resetPassword\" class=\"link\">Forgot Password</a>\n            </mat-card-actions>\n        </mat-card>\n    </div>\n</div>\n *\n","<app-navbar></app-navbar>\n\n<button mat-button class=\"sortBtns\">Name\n  <mat-icon (click)=\"nameAscending()\" class=\"arrow\">arrow_upwardward</mat-icon> |\n  <mat-icon (click)=\"nameDescending()\" class=\"arrow\">arrow_downward</mat-icon>\n</button>\n\n<div class=\"container\">\n<div class=\"container-fluid\" *ngIf=\"currentUser\" >\n    <h1 class=\"main-title\" >My Puzzles</h1>\n    <div class=\"flex-container\" fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\">\n        <mat-card class=\"content\" *ngFor=\"let puzzle of (userPuzzleList | slice: startIndex:endIndex)\">\n          <div class=\"content-overlay\"></div>\n          <img class=\"content-image\" src=\"{{puzzle.image}}\">\n            <mat-card-title><strong>{{puzzle.name}}</strong></mat-card-title>\n            <!-- <mat-card-subtitle>Description: {{puzzle.description}}</mat-card-subtitle> -->\n            <mat-card-actions class=\"puzzleActions\">\n              <button *ngIf=\"!puzzle.shared\" mat-button class=\"btns\" (click)=\"share(puzzle.id)\">SHARE</button>\n              <button *ngIf=\"puzzle.shared\" mat-button class=\"btns\" (click)=\"stopShare(puzzle.id)\">STOP SHARING</button>\n              <button mat-button class=\"btns\" (click)=\"deletePuzzle(puzzle.id)\">DELETE</button>\n            </mat-card-actions>\n        </mat-card>\n    </div>\n</div>\n\n<mat-paginator [length]=\"totalNumberOfPuzzles\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\"\n                  (page)=\"pageEvent = changeEvent($event)\">\n</mat-paginator>\n\n</div>\n\n  <div *ngIf=\"text\">\n    <h2 id=\"NoneText\" >You have not created any puzzles at the moment</h2>\n  </div>\n<div class=\"spinner\">\n  <mat-spinner *ngIf=\"show\" id=\"spinner\"></mat-spinner>\n</div> \n","import { Component, OnInit } from '@angular/core';\nimport { APIService } from 'src/app/services/api.service';\nimport { Puzzle } from 'src/app/models/Puzzle';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { PageEvent } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-profile-puzzles',\n  templateUrl: './profile-puzzles.component.html',\n  styleUrls: ['./profile-puzzles.component.css']\n})\nexport class ProfilePuzzlesComponent implements OnInit {\n\n  currentUser: any;\n  //user  puzzle variables\n  //puzzleList: Observable <Puzzle[]> ;\n  userPuzzleList: any;\n  puzzle: any;\n  show: boolean;\n  text: boolean;\n  imageList: any;\n  temp: boolean = false;\n  tee: any;\n\n  totalNumberOfPuzzles: number;\n  ratingsLSize: number;\n\n  //pagination\n  pageSize: number = 4;\n  startIndex:number = 0;\n  endIndex: number = 4;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  // MatPaginator Output\n  pageEvent: PageEvent;\n\n  constructor(private api: APIService, private router: Router) { }\n\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\n    this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n  }\n\n  changeEvent(event: PageEvent)\n  {\n    console.log(\"Event: \", event);\n    this.startIndex = event.pageIndex * event.pageSize;\n    this.endIndex = this.startIndex + this.pageSize;\n    if(this.endIndex > this.totalNumberOfPuzzles){\n      this.endIndex = this.totalNumberOfPuzzles\n    }\n    this.userPuzzleList.slice(this.startIndex, this.endIndex);\n    return event;\n  }\n\n  nameDescending()\n  {\n    return this.userPuzzleList.sort( (a,b) => {\n      console.log(\"values: \", this.userPuzzleList);\n      //console.log(\"args: \", args);\n      let paramA = a.name.toLowerCase();\n      let paramB = b.name.toLowerCase();\n\n      if(paramA > paramB ){ return -1; }\n      else { return 1; }\n      return 0;\n    });\n  }\n\n  nameAscending()\n  {\n    return this.userPuzzleList.sort( (a,b) => {\n      console.log(\"values: \", this.userPuzzleList);\n      //console.log(\"args: \", args);\n      let paramA = a.name.toLowerCase();\n      let paramB = b.name.toLowerCase();\n\n      if(paramA < paramB ){ return -1; }\n      else { return 1; }\n      return 0;\n    });\n  }\n\n\n\n  getUserPuzzles(){\n    this.api.getPuzzlesByUser(this.currentUser).subscribe( data => {\n      this.totalNumberOfPuzzles = Object.keys(data).length;\n      this.userPuzzleList = data;\n      if (data[0]==null)\n      {\n        this.text = true;\n      }\n      this.show = false;\n    });\n  }\n\n  share(data: any){\n    this.puzzle = {\n      \"puzzleID\": data\n    }\n    if(this.api.sharePuzzle(this.puzzle).subscribe()){\n        alert(\"Puzzle shared\");\n    }\n    location.reload();\n  }\n\n  deletePuzzle(puzzleID: any){\n    // this.puzzle = {\n    //   \"puzzleID\": puzzleID\n    // }\n    if(this.api.deletePuzzle(puzzleID).subscribe()){\n        alert(\"Puzzle deleted\");\n    }\n    location.reload();\n  }\n\n  stopShare(data: any){\n    this.puzzle = {\n      \"puzzleID\": data\n    }\n    if(this.api.stopSharingPuzzle(this.puzzle).subscribe()){\n        alert(\"Stop sharing puzzle\");\n    }\n    location.reload();\n  }\n\n  async delay(ms: number) {\n    await new Promise(resolve => setTimeout(()=>resolve(), ms))\n    .then( () => { console.log(\"fired\"); });\n  }\n\n  ngOnInit(): void {\n\n    if(!localStorage.getItem('token')){\n      this.router.navigate(['/index']);\n      alert(\"You are not logged in\");\n    }\n\n    this.currentUser = {\n      \"token\": localStorage.getItem('token')\n    }\n    this.show = true;\n    this.text = false;\n\n    this.delay(2100).then( () =>{\n      this.getUserPuzzles();\n    });\n\n    //this.getUserPuzzles();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Puzzle } from 'src/app/models/Puzzle';\nimport { Observable } from 'rxjs';\nimport { APIService } from 'src/app/services/api.service';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { RateDialogComponent } from '../../rate-dialog/rate-dialog.component';\nimport { PageEvent } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-profile-ratings',\n  templateUrl: './profile-ratings.component.html',\n  styleUrls: ['./profile-ratings.component.css']\n})\nexport class ProfileRatingsComponent implements OnInit {\n\n  currentUser: any;\n  //user puzzle ratings variables\n  //ratingList: Observable <any[]> ;\n  userRatingsList: any;\n  text: boolean;\n  ratePID: number;\n  ratingEntry: any;\n  rateDialogRef: MatDialogRef<RateDialogComponent>;\n  show: boolean;\n  deleteVal: any;\n\n  totalNumberOfPuzzles: number;\n  ratingsLSize: number;\n\n  //pagination\n  pageSize: number = 4;\n  startIndex:number = 0;\n  endIndex: number = 4;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  // MatPaginator Output\n  pageEvent: PageEvent;\n\n  constructor(private api: APIService, private router: Router, private dialog: MatDialog) { }\n\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\n    this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n  }\n\n  changeEvent(event: PageEvent)\n  {\n    console.log(\"Event: \", event);\n    this.startIndex = event.pageIndex * event.pageSize;\n    this.endIndex = this.startIndex + this.pageSize;\n    if(this.endIndex > this.totalNumberOfPuzzles){\n      this.endIndex = this.totalNumberOfPuzzles\n    }\n    this.userRatingsList.slice(this.startIndex, this.endIndex);\n    return event;\n  }\n\n  nameDescending()\n  {\n    return this.userRatingsList.sort( (a,b) => {\n      let paramA = a.puzzleName.toLowerCase();\n      let paramB = b.puzzleName.toLowerCase();\n\n      if(paramA > paramB ){ return -1; }\n      else { return 1; }\n      return 0;\n    });\n  }\n\n  nameAscending()\n  {\n    return this.userRatingsList.sort( (a,b) => {\n      let paramA = a.puzzleName.toLowerCase();\n      let paramB = b.puzzleName.toLowerCase();\n\n      if(paramA < paramB ){ return -1; }\n      else { return 1; }\n      return 0;\n    });\n  }\n\n  ratingDescending()\n  {\n    return this.userRatingsList.sort( (a,b) => {\n      let paramA = a.rating;//.toLowerCase();\n      let paramB = b.rating;//.toLowerCase();\n\n      if(paramA > paramB ){ return -1; }\n      else { return 1; }\n      return 0;\n    });\n  }\n\n  ratingAscending()\n  {\n    return this.userRatingsList.sort( (a,b) => {\n      let paramA = a.rating;//.toLowerCase();\n      let paramB = b.rating;//.toLowerCase();\n\n      if(paramA < paramB ){ return -1; }\n      else { return 1; }\n      return 0;\n    });\n  }\n\n  getUserPuzzleRatings(){\n    this.api.getPuzzleRatingsByUser(this.currentUser).subscribe( data => {\n      this.totalNumberOfPuzzles = Object.keys(data).length;\n      this.userRatingsList = data;\n      this.show = false;\n      this.text = false;\n      if (this.totalNumberOfPuzzles == 0){\n        this.text = true;\n      }\n    });\n  }\n\n  checkData(data: any){\n    this.ratePID = data;\n  }\n\n  openRateDialog(){\n    this.rateDialogRef = this.dialog.open(RateDialogComponent);\n\n    this.rateDialogRef.afterClosed().subscribe( result => {\n      if (result != \"\"){\n\n        this.ratingEntry = {\n        //\"id\":this.rateUID,\n          \"puzzleID\":this.ratePID,\n          \"rating\":result,\n          \"token\": localStorage.getItem('token')\n        }\n\n        if(this.api.createNewPuzzleRating(this.ratingEntry).subscribe())\n        {\n          alert(\"Rating added\");\n        }\n\n        location.reload();\n      }\n\n    });\n  }\n\n  openAndCheck(rateP: any){\n    this.checkData(rateP);\n    this.openRateDialog();\n  }\n\n  delete(ratePID: any){\n    this.deleteVal = {\n      \"puzzleID\" : ratePID,\n      \"token\" : localStorage.getItem('token')\n    }\n\n  this.api.findRatingID(this.deleteVal).subscribe( (result) => {\n    if(this.api.deleteRating(result[\"id\"]).subscribe()){\n        alert(\"Rating deleted\");\n        location.reload(); \n    }\n  });\n\n  }\n\n  ngOnInit(): void {\n\n    if(!localStorage.getItem('token')){\n      this.router.navigate(['/index']);\n      alert(\"You are not logged in\");\n    }\n\n    this.currentUser = {\n      \"token\": localStorage.getItem('token')\n    }\n\n    this.show = true;\n    this.text = false;\n\n    this.getUserPuzzleRatings();\n  }\n\n}\n","<app-navbar></app-navbar>\n\n<button mat-button class=\"sortBtns\">Name\n    <mat-icon (click)=\"nameAscending()\" class=\"arrow\">arrow_upwardward</mat-icon> |\n    <mat-icon (click)=\"nameDescending()\" class=\"arrow\">arrow_downward</mat-icon>\n  </button>\n\n  <button mat-button class=\"sortBtns\">Rating\n    <mat-icon (click)=\"ratingAscending()\" class=\"arrow\">arrow_upwardward</mat-icon> |\n    <mat-icon (click)=\"ratingDescending()\" class=\"arrow\">arrow_downward</mat-icon>\n  </button>\n\n<div class=\"container\">\n<div class=\"container-fluid\" *ngIf=\"currentUser\" >\n    <h1 class=\"main-title\" >My Ratings</h1>\n    <div class=\"flex-container\" fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\">\n        <mat-card class=\"content\" *ngFor=\"let rating of userRatingsList | slice: startIndex:endIndex\">\n          <div class=\"content-overlay\"></div>\n          <img class=\"content-image\" src=\"{{rating.image}}\">\n            <mat-card-title><strong>{{rating.puzzleName}}</strong></mat-card-title>\n            <mat-card-subtitle>Rating: {{rating.rating}}/5</mat-card-subtitle>\n            <mat-card-actions class=\"puzzleActions\">\n                <button mat-button class=\"btns\">SOLVE</button>\n                <button mat-button class=\"btns\" (click)=\"openAndCheck(rating.puzzleID)\">UPDATE RATING</button>\n            </mat-card-actions>\n            <br>\n            <mat-card-actions class=\"puzzleActions\">\n                <button mat-button id=\"delete\" (click)=\"delete(rating.puzzleID)\">DELETE RATING</button>\n            </mat-card-actions>\n        </mat-card>\n    </div>\n</div>\n\n<mat-paginator [length]=\"totalNumberOfPuzzles\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\"\n                  (page)=\"pageEvent = changeEvent($event)\">\n</mat-paginator>\n\n</div>\n\n<div id=\"NoneText\" *ngIf=\"text\">\n    <h2>You have not made any ratings at the moment</h2>\n</div>\n<div class=\"spinner\">\n<mat-spinner *ngIf=\"show\" id=\"spinner\"></mat-spinner>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { APIService } from 'src/app/services/api.service';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  nameTextboxValue: string;\n  usernameTextboxValue: string;\n  currentUserObject:any;\n  token: any;\n  currentUser: any;\n  updateNameForm: FormGroup;\n  updateUsernameForm: FormGroup;\n\n  constructor(private api: APIService, private formBuilder: FormBuilder, private router: Router) { }\n\n  updateName(){\n    this.currentUser = null;\n      if(this.nameTextboxValue != undefined){\n      this.currentUser = {\n        \"token\": localStorage.getItem('token'),\n        \"name\": this.nameTextboxValue\n      }\n      localStorage.removeItem('name');\n      localStorage.setItem('name', this.currentUser['name']);\n      this.api.updateName(this.currentUser).subscribe( data => {\n        this.currentUserObject['name'] = data['name'];\n      });\n      alert(\"Name updated\");\n    }\n    else{ console.log(\"No value provided\");}\n    location.reload();\n  }\n\n  updateUsername(){\n    this.currentUser = null;\n    if(this.usernameTextboxValue != undefined){\n    this.currentUser = {\n      \"token\": localStorage.getItem('token'),\n      \"username\": this.usernameTextboxValue\n    }\n    this.api.updateUsername(this.currentUser).subscribe( data => {\n      this.currentUserObject['username'] = data['username'];\n    })\n  }\n  else{console.log(\"No value provided\")}\n  }\n\n  error_messages = {\n    'username': [\n      { type: 'required', message: 'Email is required.' },\n      { type: 'email', message: 'Invalid email format.' }\n    ],\n    'name': [\n      { type: 'required', message: 'Full name is required.' },\n      { type: 'pattern', message: 'Name can only consist of letters' }\n    ]\n  }\n\n  ngOnInit(): void {\n\n    if(!localStorage.getItem('token')){\n      this.router.navigate(['/index']);\n      alert(\"You are not logged in\");\n    }\n\n    this.currentUser = {\n      \"token\": localStorage.getItem('token')\n    }\n\n    this.api.getUser(this.currentUser).subscribe( data => {\n      this.currentUserObject = data;\n\n      this.updateNameForm = this.formBuilder.group({\n        name: [data['name'], [Validators.required, Validators.pattern('[a-zA-Z ]*')]]\n      });\n\n      this.updateUsernameForm = this.formBuilder.group({\n        username: [data['username'], [Validators.required, Validators.email]]\n      });\n    });\n  }\n\n}\n","<app-navbar></app-navbar>\n<!--app-navbar-profile></app-navbar-profile-->\n\n\n<div class=\"container-fluid\" >\n    <div fxLayout=\"row\" fxLayout.xs=\"col wrap\">\n    <mat-card class=\"profileText\">\n        <mat-card-header>\n            <h1>Edit Details</h1>\n        </mat-card-header>\n        <mat-card-content class=\"move\">\n        <div *ngIf=\"currentUserObject\">\n            <form [formGroup]=\"updateNameForm\" (ngSubmit)=\"updateName()\">\n                <mat-form-field appearance=\"standard\">\n                    <label for=\"name\">Your Name: </label>\n                    <input matInput formControlName=\"name\"  value=\"{{currentUserObject.name}}\" (input)=\"nameTextboxValue=$event.target.value\">\n                </mat-form-field>\n                <div>\n                    <ng-container *ngFor=\"let error of error_messages.name\">\n                        <mat-error class=\"error-message\" *ngIf=\"updateNameForm.get('name').hasError(error.type) && (updateNameForm.get('name').dirty || updateNameForm.get('name').touched)\">\n                            {{ error.message }}\n                        </mat-error>\n                    </ng-container>\n                </div>\n                <button mat-raised-button type=\"submit\" [disabled]=\"!updateNameForm.valid\" class=\"btns\" >Save</button>\n            </form>\n\n            <form [formGroup]=\"updateUsernameForm\" (ngSubmit)=\"updateUsername()\">\n                <mat-form-field appearance=\"standard\">\n                    <label for=\"username\">Your Email: </label>\n                    <input matInput formControlName=\"username\"  value=\"{{currentUserObject.username}}\" (input)=\"usernameTextboxValue=$event.target.value\">\n                </mat-form-field>\n                <div>\n                    <ng-container *ngFor=\"let error of error_messages.username\">\n                        <mat-error class=\"error-message\" *ngIf=\"updateUsernameForm.get('username').hasError(error.type) && (updateUsernameForm.get('username').dirty || updateUsernameForm.get('username').touched)\">\n                            {{ error.message }}\n                        </mat-error>\n                    </ng-container>\n                </div>\n                <button mat-raised-button type=\"submit\" [disabled]=\"!updateUsernameForm.valid\" class=\"btns\">Save</button>\n            </form>\n        </div>\n        </mat-card-content>\n    </mat-card>\n\n  </div>\n</div>\n","export class RatingsArr{\n  id: number;\n  rating: number;\n  puzzleID: number;\n}\n","export class PuzzleArr{\n  id: number;\n  name: string;\n  description: string;\n  creator: string;\n  rating: string;\n  created: any;\n  showRating: boolean;\n  image: any;\n}\n","import { Component, OnInit, ChangeDetectorRef, ViewEncapsulation } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { APIService } from 'src/app/services/api.service';\nimport { User } from 'src/app/models/user';\nimport { Router } from '@angular/router';\nimport { PuzzleArr } from './puzzleArr';\nimport { RatingsArr } from './RatingsArr';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { RateDialogComponent } from '../../rate-dialog/rate-dialog.component';\nimport { PuzzleRating } from 'src/app/models/PuzzleRating';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { PageEvent } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-ratings',\n  templateUrl: './ratings.component.html',\n  styleUrls: ['./ratings.component.css']\n})\nexport class RatingsComponent implements OnInit {\n\n  displayedColumns: string[] = [\"id\",\"name\",\"description\",\"creator\",\"rating\",\"created\",\"showRating\",\"image\"];\n  rateDialogRef: MatDialogRef<RateDialogComponent>;\n  puzzles: Array<PuzzleArr> = [];\n  name: string;\n  ratings: Array<RatingsArr> = [];\n  ratePID: number;\n  rateUID: string;\n  ratingEntry: any;\n  formError: string;\n  show: boolean;\n  dataAvailable: boolean;\n  //searchbar\n  searchTextboxValue: string;\n  token: any;\n  currentUser: any;\n  datasource: any;\n\n  totalNumberOfPuzzles: number;\n  ratingsLSize: number;\n\n  //pagination\n  pageSize: number = 8;\n  startIndex:number = 0;\n  endIndex: number = 8;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  // MatPaginator Output\n  pageEvent: PageEvent;\n\n  constructor(private api: APIService, private cdr: ChangeDetectorRef, private dialog: MatDialog, private router: Router) {\n  }\n\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\n    this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n  }\n\n  changeEvent(event: PageEvent)\n  {\n    console.log(\"Event: \", event);\n    this.startIndex = event.pageIndex * event.pageSize;\n    this.endIndex = this.startIndex + this.pageSize;\n    if(this.endIndex > this.totalNumberOfPuzzles){\n      this.endIndex = this.totalNumberOfPuzzles\n    }\n    this.puzzles.slice(this.startIndex, this.endIndex);\n    return event;\n  }\n\n\n  //sorting functions start here\n  puzzleDescending()\n  {\n    return this.puzzles.sort( (a,b) => {\n      let paramA = a.name.toLowerCase();\n      let paramB = b.name.toLowerCase();\n\n      if(paramA > paramB ){ return -1; }\n      else { return 1; }\n      return 0;\n    });\n  }\n\n  puzzleAscending()\n  {\n    return this.puzzles.sort( (a,b) => {\n      let paramA = a.name.toLowerCase();\n      let paramB = b.name.toLowerCase();\n\n      if(paramA < paramB ){ return -1; }\n      else { return 1; }\n      return 0;\n    });\n  }\n\n  creatorDescending()\n  {\n    return this.puzzles.sort( (a,b) => {\n      let paramA = a.creator.toLowerCase();\n      let paramB = b.creator.toLowerCase();\n\n      if(paramA > paramB ){ return -1; }\n      else { return 1; }\n      return 0;\n    });\n  }\n\n  creatorAscending()\n  {\n    return this.puzzles.sort( (a,b) => {\n      let paramA = a.creator.toLowerCase();\n      let paramB = b.creator.toLowerCase();\n\n      if(paramA < paramB ){ return -1; }\n      else { return 1; }\n      return 0;\n    });\n  }\n\n  dateDescending()\n  {\n    return this.puzzles.sort( (a,b) => {\n      let paramA = a.created;//.toLowerCase();\n      let paramB = b.creator;//.toLowerCase();\n\n      if(paramA > paramB ){ return -1; }\n      else { return 1; }\n      return 0;\n    });\n  }\n\n  dateAscending()\n  {\n    return this.puzzles.sort( (a,b) => {\n      let paramA = a.created;//.toLowerCase();\n      let paramB = b.creator;//.toLowerCase();\n\n      if(paramA < paramB ){ return -1; }\n      else { return 1; }\n      return 0;\n    });\n  }\n\n  ratingDescending()\n  {\n    return this.puzzles.sort( (a,b) => {\n      let paramA = a.rating;\n      let paramB = b.rating;\n\n      if(paramA > paramB ){ return -1; }\n      else { return 1; }\n      return 0;\n    });\n  }\n\n  ratingAscending()\n  {\n    return this.puzzles.sort( (a,b) => {\n      let paramA = a.rating;\n      let paramB = b.rating;\n\n      if(paramA < paramB ){ return -1; }\n      else { return 1; }\n      return 0;\n    });\n  }\n  //sorting functions end here\n\n  populate(populatePuz: any)\n  {\n    this.ratings.length = 0;\n    this.api.getAllPuzzleRatings().subscribe(\n      data=> {\n        for(let i=0; data[i]!= null; i++){\n          let ratingObj = new RatingsArr();\n          ratingObj.id = data[i].id;\n          ratingObj.rating = data[i].rating;\n          ratingObj.puzzleID = data[i].puzzleID;\n          this.ratings.push(ratingObj);\n        }\n      },\n      error => {\n        console.log(\"Error from API: \", error.error);\n      });\n\n\n    if (populatePuz != null)\n    {\n      this.getPuzzles(populatePuz);\n    }\n    else\n    {\n      this.api.getAllPuzzles().subscribe(\n        data => {\n          this.totalNumberOfPuzzles = Object.keys(data).length;\n          this.getPuzzles(data);\n      },\n        error => {//if status code other than in the 200 range returned, show error\n          console.log('Error from API: ', error.error);\n        })\n    }\n\n  }\n\n  searchItems(searchValue: any){\n    if(searchValue != undefined){\n      this.api.getSearchedPuzzles(searchValue).subscribe( data => {\n        var dataObjectSize = Object.keys(data).length;\n        if(dataObjectSize == 0 )\n        {\n          alert(\"Nothing matches given criteria\");\n          console.log(\"Nothing matches given criteria\");\n        }\n        else{\n          //Please populate the page with the data received. Other puzzles not fromd data must be cleared\n          console.log(data);\n          this.populate(data);\n        }\n      });\n    }\n  }\n\n  getPuzzles(data: any){\n    this.puzzles.length = 0;\n    for(let i=0; data[i]!=null; i++)\n    {\n      let puzzleObj = new PuzzleArr();\n      puzzleObj.id = data[i].id;\n      puzzleObj.name = data[i].name;\n      puzzleObj.description = data[i].description;\n      puzzleObj.creator = data[i].creator;\n      puzzleObj.created = data[i].createdAt;\n      puzzleObj.image = data[i].image;\n      if (puzzleObj.creator== this.currentUser[\"name\"])\n      {\n        puzzleObj.showRating = false;\n      }\n      else\n      {\n        puzzleObj.showRating = true;\n      }\n\n      let j = 0;\n      let total = 0;\n\n      for (let k=0; this.ratings[k]!=null; k++){\n        if (this.ratings[k].puzzleID == data[i].id)\n        {\n          //********* ERROR HERE - THIS LOOP IS NOT ENTERED WHEN THE RATINGS VALUE IS 0  ************\n          total = total + this.ratings[k].rating;\n          j = j+1;\n        }\n      }\n\n      if (j == 0){\n        puzzleObj.rating = (0).toString();\n      }\n      else{\n        puzzleObj.rating = (total/j).toFixed(2);\n      }\n      this.puzzles.push(puzzleObj);\n    }\n\n    this.datasource = new MatTableDataSource(this.puzzles);\n\n    this.dataAvailable = true;\n    this.show= false;\n\n  }\n\n  applyFilter(filterValue: string) {\n    this.datasource.filterPredicate = function(data, filter: string): boolean {\n      return data.name.toLowerCase().includes(filter)\n    };\n    this.datasource.filter = filterValue.trim().toLowerCase();\n    this.totalNumberOfPuzzles = this.datasource.filteredData.length;\n  }\n\n  checkData(data: any){\n    this.ratePID = data;\n  }\n\n  openRateDialog(){\n    this.rateDialogRef = this.dialog.open(RateDialogComponent);\n\n    this.rateDialogRef.afterClosed().subscribe( result => {\n\n      if (result != \"\"){\n\n        this.ratingEntry = {\n        //\"id\":this.rateUID,\n          \"puzzleID\":this.ratePID,\n          \"rating\":result,\n          \"token\": localStorage.getItem('token')\n        }\n\n        console.log(this.ratingEntry);\n\n        if(this.api.createNewPuzzleRating(this.ratingEntry).subscribe())\n        {\n          alert(\"Rating added\");\n        }\n\n        location.reload();\n      }\n\n    });\n  }\n\n  openAndCheck(rateP: any){\n    this.checkData(rateP);\n    this.openRateDialog();\n  }\n\n  reload(){\n    this.populate(null);\n  }\n\n  ngOnInit(): void {\n    this.show=true;\n    this.dataAvailable = false;\n    if(!localStorage.getItem('token')){\n      this.router.navigate(['/index']);\n      alert(\"You are not logged in\");\n    }\n\n    this.currentUser = {\n      \"token\": localStorage.getItem('token')\n    }\n\n    this.api.getUser(this.currentUser).subscribe( data => {\n      console.log(data[\"name\"]);\n      this.currentUser = {\n        \"token\": localStorage.getItem('token'),\n        \"name\": data[\"name\"]\n      }\n    });\n\n    this.populate(null);\n\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n<mat-form-field class=\"searchArea\">\n    <mat-label>Search</mat-label>\n    <input matInput (keyup)=\"applyFilter($event.target.value)\">\n</mat-form-field>\n\n<button mat-button class=\"sortBtns\">Puzzle\n  <mat-icon (click)=\"puzzleAscending()\" class=\"arrow\">arrow_upwardward</mat-icon> |\n  <mat-icon (click)=\"puzzleDescending()\" class=\"arrow\">arrow_downward</mat-icon>\n</button>\n\n<button mat-button class=\"sortBtns\">Rating\n  <mat-icon (click)=\"ratingAscending()\" class=\"arrow\">arrow_upwardward</mat-icon> |\n  <mat-icon (click)=\"ratingDescending()\" class=\"arrow\">arrow_downward</mat-icon>\n</button>\n\n<button mat-button class=\"sortBtns\">Creator\n  <mat-icon (click)=\"creatorAscending()\" class=\"arrow\">arrow_upwardward</mat-icon> |\n  <mat-icon (click)=\"creatorDescending()\" class=\"arrow\">arrow_downward</mat-icon>\n</button>\n\n<button mat-button class=\"sortBtns\">Date\n  <mat-icon (click)=\"dateAscending()\" class=\"arrow\">arrow_upwardward</mat-icon> |\n  <mat-icon (click)=\"dateDescending()\" class=\"arrow\">arrow_downward</mat-icon>\n</button>\n\n<div class=\"spinner\">\n  <mat-spinner *ngIf=\"show\" id=\"spinner\"></mat-spinner>\n</div>\n\n<div class=\"container-fluid\" *ngIf=\"dataAvailable\" >\n    <div class=\"flex-container\" fxLayout=\"row wrap\" fxLayout.xs=\"row wrap\" fxLayoutAlign=\"space-evenly center\">\n        <mat-card class=\"content\"  *ngFor=\"let puzzle of this.datasource.filteredData | slice: startIndex:endIndex\">\n          <div class=\"content-overlay\"></div>\n          <!-- <mat-icon aria-hidden=\"false\" class=\"infoIcon\">info_outline</mat-icon> -->\n          <img class=\"content-image\" src=\"{{puzzle.image}}\">\n            <div class=\"content-details fadeIn-bottom\">\n              <mat-card-header>\n               <mat-card-subtitle class=\"puzzleDetails\"><strong>Created by:</strong> {{puzzle.creator}}</mat-card-subtitle>\n                <mat-card-subtitle class=\"puzzleDetails\"><strong>Created on:</strong> {{puzzle.created}}</mat-card-subtitle>\n                <mat-card-subtitle class=\"puzzleDetails\"><strong>Description:</strong> {{puzzle.description}}</mat-card-subtitle>\n              </mat-card-header>\n            </div>\n            <mat-card-title><strong>{{puzzle.name}}</strong></mat-card-title>\n            <mat-card-subtitle>Rating: {{puzzle.rating}}/5.00 <span *ngIf=\"puzzle.rating == '0'\">- Not yet rated</span> </mat-card-subtitle>\n\n            <mat-card-actions class=\"puzzleActions\">\n              <button mat-button class=\"btns\">SOLVE</button>\n              <button *ngIf=\"puzzle.showRating\" mat-button class=\"btns\" (click)=\"openAndCheck(puzzle.id)\">RATE</button>\n            </mat-card-actions>\n        </mat-card>\n    </div>\n</div>\n\n<mat-paginator class=\"paginator\" [length]=\"totalNumberOfPuzzles\" [pageSize]=\"pageSize\"\n                  [pageSizeOptions]=\"pageSizeOptions\"\n                  (page)=\"pageEvent = changeEvent($event)\">\n</mat-paginator>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { APIService } from 'src/app/services/api.service';\nimport { User } from 'src/app/models/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n  resetPasswordForm: FormGroup;\n  verifyUser: any;\n  formError: string;\n  resetDone: string;\n  fieldTextType: boolean;\n  fieldTextType2: boolean;\n\n  constructor(private formBuilder: FormBuilder, private api: APIService, private router: Router ) {}\n\n  toggleFieldTextType() {\n    this.fieldTextType = !this.fieldTextType;\n  }\n\n  toggleFieldTextType2() {\n    this.fieldTextType2 = !this.fieldTextType2;\n  }\n\n  //method for logging in user and getting the token associated with the said user\n  resetPassword(currentUser: User){\n    this.resetDone = '';\n    this.formError = '';\n    if(this.doPasswordsMatch(this.resetPasswordForm.controls['password'].value, this.resetPasswordForm.controls['confirmPassword'].value) == true){\n      this.verifyUser = {\n        \"username\": currentUser.email,\n        \"password\": currentUser.password\n      }\n      if(this.verifyUser != null){\n        this.api.resetPassword(this.verifyUser).subscribe(\n          () => {},\n          error => {//if status code other than in the 200 range returned, show error\n            if(error.status >= 401){\n              this.formError = error.error;\n            }\n            else\n            {\n              this.router.navigate(['/resetSuccess', { message: \"Password reset. Please login\" }]);\n            }\n          })\n      }\n    }\n    else\n    {\n      this.formError = \"Passwords do not match\";\n    }\n  }\n\n  //error messages used during login/register validation\n  error_messages = {\n    'email': [\n      { type: 'required', message: 'Email is required.' },\n      { type: 'email', message: 'Invalid email format.' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password is required.' },\n      { type: 'minlength', message: 'Password must have at least 6 characters.' }\n    ],\n    'confirmPassword': [\n      { type: 'required', message: 'password is required.' },\n      { type: 'minlength', message: 'Password must have at least 6 characters.' }\n    ],\n  }\n\n  ngOnInit() {\n\n    this.resetPasswordForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  //checking if passwords match\n  doPasswordsMatch(firstPassword: string, secondPassword: string) {\n    if (firstPassword !== secondPassword) {\n        return false;\n    } else {\n      return true;\n    }\n}\n\n}\n","<div class=\"container\">\n    <div class=\"flex-container\" fxLayout=\"row\" fxLayoutAlign=\"center none\">\n      <mat-card class=\"regForm\"><img src=\"assets/images/label.png\">\n          <mat-card-header>\n              <h3>Reset Password</h3>\n          </mat-card-header>\n            <mat-card-content class=\"regFormContent\">\n                <form [formGroup]=\"resetPasswordForm\" (ngSubmit)=\"resetPassword(resetPasswordForm.value)\">\n                    <div>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Enter your email</mat-label>\n                        <input class=\"input\" matInput placeholder=\"john@doe.com\" formControlName=\"email\" required>\n                    </mat-form-field>\n                        <div>\n                            <ng-container *ngFor=\"let error of error_messages.email\">\n                                <mat-error class=\"error-message\" *ngIf=\"resetPasswordForm.get('email').hasError(error.type) && (resetPasswordForm.get('email').dirty || resetPasswordForm.get('email').touched)\">\n                                    {{ error.message }}\n                                </mat-error>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Enter your password</mat-label>\n                        <input matInput required\n                            [type]=\"fieldTextType ? 'text' : 'password'\" class=\"input\" formControlName=\"password\"/>\n                    </mat-form-field>\n                    <span>\n                        <i class=\"fa\" [ngClass]=\"{ 'fa-eye-slash': !fieldTextType,'fa-eye': fieldTextType }\" (click)=\"toggleFieldTextType()\">\n                        </i>\n                    </span>\n                        <div>\n                            <ng-container *ngFor=\"let error of error_messages.password\">\n                                <mat-error class=\"error-message\" *ngIf=\"resetPasswordForm.get('password').hasError(error.type) && (resetPasswordForm.get('password').dirty || resetPasswordForm.get('password').touched)\">\n                                    {{ error.message }}\n                                </mat-error>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Confirm password</mat-label>\n                            <input matInput required\n                                [type]=\"fieldTextType2 ? 'text' : 'password'\" class=\"input\" formControlName=\"confirmPassword\"/>\n                        </mat-form-field>\n                        <span>\n                            <i class=\"fa\" [ngClass]=\"{ 'fa-eye-slash': !fieldTextType2,'fa-eye': fieldTextType2 }\" (click)=\"toggleFieldTextType2()\">\n                            </i>\n                        </span>\n                            <div>\n                                <ng-container *ngFor=\"let error of error_messages.confirmPassword\">\n                                    <mat-error class=\"error-message\" *ngIf=\"resetPasswordForm.get('confirmPassword').hasError(error.type) && (resetPasswordForm.get('confirmPassword').dirty || resetPasswordForm.get('confirmPassword').touched)\">\n                                        {{ error.message }}\n                                    </mat-error>\n                                </ng-container>\n                                <span id=\"passError\">{{formError}}</span>\n                            </div>\n                    </div>\n\n                    <button mat-raised-button type=\"submit\" [disabled]=\"!resetPasswordForm.valid\" class=\"btns\" id=\"one\">Submit</button>\n                    <a routerLink=\"/index\" mat-raised-button class=\"btns\" id=\"two\">Cancel</a>\n                </form>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-reset-success',\n  templateUrl: './reset-success.component.html',\n  styleUrls: ['./reset-success.component.css']\n})\nexport class ResetSuccessComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private router: Router ) {}\n\n  ngOnInit() {\n\n    let message = this.route.snapshot.paramMap.get('message');\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"flex-container\" fxLayout=\"row\" fxLayoutAlign=\"center none\">\n          <mat-card class=\"regForm\"><img src=\"assets/images/label.png\">\n              <mat-card-header>\n                  <h3>Reset Password</h3>\n              </mat-card-header>\n            <mat-card-content class=\"regFormContent\">\n                    <p>Please login</p>\n                    <a routerLink=\"/login\" mat-raised-button class=\"btns\" id=\"two\">Login</a>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { User } from '../../models/user';\nimport { APIService } from '../../services/api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  signUpForm: FormGroup;\n  newUser: any;\n  formError: string;\n  fieldTextType: boolean;\n  fieldTextType2: boolean;\n\n  token: any;\n  name: any;\n\n  constructor(private formBuilder: FormBuilder, private api: APIService, private router: Router) {}\n\n\n  toggleFieldTextType() {\n    this.fieldTextType = !this.fieldTextType;\n  }\n\n  toggleFieldTextType2() {\n    this.fieldTextType2 = !this.fieldTextType2;\n  }\n\n  //method for creating a new user. A new JSON object is created and sent to the node api\n  createNewUser(createUser: any){\n    this.formError = '';\n    if(this.doPasswordsMatch(this.signUpForm.controls['password'].value, this.signUpForm.controls['confirmPassword'].value) == true){\n      this.newUser = {\n        \"name\": createUser.name,\n        \"username\": createUser.email,\n        \"password\": createUser.password\n      }\n      if(this.newUser != null){\n        this.api.createUser(this.newUser).subscribe(\n            data => {\n              console.log(data);\n              localStorage.removeItem('name');\n              localStorage.setItem('name', data['name']);\n              localStorage.removeItem('token');\n              localStorage.setItem('token', data['token']);\n              this.router.navigate(['/ratings']);\n            },\n          error => {//if status code other than in the 200 range returned, show error\n            console.log('Error from API: ', error.error);\n            if(error.status >= 401){\n              this.formError = error.error;\n            }\n          })\n      }\n    }\n    else\n    {\n      this.formError = \"Passwords do not match\";\n    }\n  }\n\n  //error messages used during login/register validation\n  error_messages = {\n    'name': [\n      { type: 'required', message: 'Full name is required.' },\n      { type: 'pattern', message: 'Name can only consist of letters' }\n    ],\n    'email': [\n      { type: 'required', message: 'Email is required.' },\n      { type: 'email', message: 'Invalid email format.' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password is required.' },\n      { type: 'minlength', message: 'Password must have at least 6 characters.' }\n    ],\n    'confirmPassword': [\n      { type: 'required', message: 'password is required.' },\n      { type: 'minlength', message: 'Password must have at least 6 characters.' }\n    ],\n  }\n\n  ngOnInit() {\n    this.signUpForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.pattern('[a-zA-Z ]*')]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  //checking if passwords match\n  doPasswordsMatch(firstPassword: string, secondPassword: string) {\n        if (firstPassword !== secondPassword) {\n          //this.formError = \"Passwords do not match: \" + controlName + \" \" + matchingControlName;\n            return false;\n        } else {\n          //this.formError = \"Match: \" + controlName + \" \" + matchingControlName;\n          return true;\n        }\n    }\n\n}\n","<div class=\"container\">\n    <div class=\"flex-container\" fxLayout=\"row\" fxLayoutAlign=\"center none\">\n      <mat-card class=\"regForm\"><img src=\"assets/images/label.png\">\n          <mat-card-header>\n              <h3>Sign Up</h3>\n          </mat-card-header>\n            <mat-card-content class=\"regFormContent\">\n                <form [formGroup]=\"signUpForm\" (ngSubmit)=\"createNewUser(signUpForm.value)\">\n                    <div>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Enter your full name</mat-label>\n                        <input class=\"input\" matInput placeholder=\"John Doe\" formControlName=\"name\" required >\n                    </mat-form-field>\n                        <div>\n                            <ng-container *ngFor=\"let error of error_messages.name\">\n                                <mat-error class=\"error-message\" *ngIf=\"signUpForm.get('name').hasError(error.type) && (signUpForm.get('name').dirty || signUpForm.get('name').touched)\">\n                                    {{ error.message }}\n                                </mat-error>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Enter your email</mat-label>\n                        <input class=\"input\" matInput placeholder=\"john@doe.com\" formControlName=\"email\" required>\n                    </mat-form-field>\n                        <div>\n                            <ng-container *ngFor=\"let error of error_messages.email\">\n                                <mat-error class=\"error-message\" *ngIf=\"signUpForm.get('email').hasError(error.type) && (signUpForm.get('email').dirty || signUpForm.get('email').touched)\">\n                                    {{ error.message }}\n                                </mat-error>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Enter your password</mat-label>\n                        <input matInput required\n                  [type]=\"fieldTextType ? 'text' : 'password'\"\n                  class=\"input\"\n                  formControlName=\"password\"\n                />\n                    </mat-form-field>\n                    <span><i\n                      class=\"fa\"\n                      [ngClass]=\"{\n                        'fa-eye-slash': !fieldTextType,\n                        'fa-eye': fieldTextType\n                      }\"\n                      (click)=\"toggleFieldTextType()\"\n                    ></i></span>\n                        <div>\n                            <ng-container *ngFor=\"let error of error_messages.password\">\n                                <mat-error class=\"error-message\" *ngIf=\"signUpForm.get('password').hasError(error.type) && (signUpForm.get('password').dirty || signUpForm.get('password').touched)\">\n                                    {{ error.message }}\n                                </mat-error>\n                            </ng-container>\n                        </div>\n                    </div>\n                    <div>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Confirm password</mat-label>\n                        <input matInput required\n                  [type]=\"fieldTextType2 ? 'text' : 'password'\"\n                  class=\"input\"\n                  formControlName=\"confirmPassword\"\n                />\n                    </mat-form-field>\n                    <span><i\n                      class=\"fa\"\n                      [ngClass]=\"{\n                        'fa-eye-slash': !fieldTextType2,\n                        'fa-eye': fieldTextType2\n                      }\"\n                      (click)=\"toggleFieldTextType2()\"\n                    ></i></span>\n                        <div>\n                            <ng-container *ngFor=\"let error of error_messages.confirmPassword\">\n                                <mat-error class=\"error-message\" *ngIf=\"signUpForm.get('confirmPassword').hasError(error.type) && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched)\">\n                                    {{ error.message }}\n                                </mat-error>\n                            </ng-container>\n                            <span id=\"passError\">{{formError}}</span>\n                        </div>\n                    </div>\n                    <button mat-raised-button type=\"submit\" [disabled]=\"!signUpForm.valid\" class=\"btn\" id=\"one\">Sign Up</button>\n\n                    <a routerLink=\"/index\" mat-raised-button color=\"accent\" class=\"btns\">Cancel</a>\n                </form>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-rate-dialog',\n  templateUrl: './rate-dialog.component.html',\n  styleUrls: ['./rate-dialog.component.css']\n})\nexport class RateDialogComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor(private formBuilder: FormBuilder,\n    private dialogRef: MatDialogRef<RateDialogComponent>) { }\n\n    error_messages = {\n      'rating': [\n        { type: 'pattern', message: 'Number must be between 1 and 5' }\n      ]\n    }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      rating: ['', Validators.pattern(\"[1-5]\")]\n    })\n  }\n\n  submit(form){\n    this.dialogRef.close(`${form.rating}`);\n  }\n\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"submit(form.value)\">\n  <h1 mat-dialog-title>Rate Puzzle (out of 5)</h1>\n  <mat-dialog-content>\n    <mat-form-field>\n      <input matInput type=\"number\" min=\"1\" max=\"5\" formControlName=\"rating\" placeholder=\"Enter Rating\" ngControl=\"rating\">\n    </mat-form-field>\n    <div>\n        <ng-container *ngFor=\"let error of error_messages.rating\">\n            <mat-error class=\"error-message\" *ngIf=\"form.get('rating').hasError(error.type) && (form.get('rating').dirty || form.get('rating').touched)\">\n                {{ error.message }}\n            </mat-error>\n        </ng-container>\n    </div>\n\n  </mat-dialog-content>\n  <mat-dialog-actions>\n    <button mat-button type=\"submit\" [disabled]=\"!form.valid\">Submit</button>\n    <button mat-button type=\"button\" mat-dialog-close>Cancel</button>\n  </mat-dialog-actions>\n</form>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { User } from '../models/user';\nimport { Puzzle } from '../models/Puzzle';\nimport { PuzzleRating } from '../models/PuzzleRating';\nimport {HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class APIService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * User endpoints start here\n   */\n  //create new user\n  createUser(newUser: User){\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'} ) };\n    return this.http.post('https://prometheuspuzzles.herokuapp.com/api/users/createUser',newUser, httpOptions);\n  }\n\n  loginUser(currentUser: User){\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\n    return this.http.post('https://prometheuspuzzles.herokuapp.com/api/users/login', currentUser, httpOptions);\n  }\n\n  resetPassword(currentUser: User){\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\n    return this.http.put('https://prometheuspuzzles.herokuapp.com/api/users/resetPassword', currentUser, httpOptions);\n  }\n\n  getUser(token: any){\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'} ) };\n    return this.http.post('https://prometheuspuzzles.herokuapp.com/api/users/getUser',token, httpOptions);\n  }\n\n  updateName(currentUser: User){\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\n    return this.http.put('https://prometheuspuzzles.herokuapp.com/api/users/updateName', currentUser, httpOptions);\n  }\n\n  updateUsername(currentUser: User){\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\n    return this.http.put('https://prometheuspuzzles.herokuapp.com/api/users/updateUsername', currentUser, httpOptions);\n  }\n\n  getPuzzlesByUser(token: any): Observable<any[]> {\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\n    return this.http.post<any[]>('https://prometheuspuzzles.herokuapp.com/api/users/getPuzzlesByUser', token, httpOptions);\n  }\n\n  getPuzzleRatingsByUser(token: any): Observable<any[]>{\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\n    return this.http.post<any[]>('https://prometheuspuzzles.herokuapp.com/api/users/getPuzzleRatingsByUser', token, httpOptions);\n  }\n\n  /**\n   * User endpoints end here\n   */\n\n\n/**\n* Puzzle endpoints start here\n*/\ngetAllPuzzles(){\n  return this.http.get('https://prometheuspuzzles.herokuapp.com/api/puzzles/getAllPuzzles');\n}\n\ngetAllPuzzleByID(puzzleID: number){\n  return this.http.get('https://prometheuspuzzles.herokuapp.com/api/puzzles/getPuzzleByID?Id=' + puzzleID);\n}\n\ncreateNewPuzzle(puzzle: Puzzle){\n  const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\n  return this.http.post('https://prometheuspuzzles.herokuapp.com/api/puzzles/createPuzzle', puzzle, httpOptions);\n}\n\ncreateNewPuzzleRating(rating: PuzzleRating){\n  const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\n  return this.http.post('https://prometheuspuzzles.herokuapp.com/api/puzzles/createPuzzleRating', rating, httpOptions);\n}\n\ngetAllPuzzleRatings(){\n  return this.http.get('https://prometheuspuzzles.herokuapp.com/api/puzzles/getAllPuzzleRatings');\n}\n\ngetSearchedPuzzles(term: any){\n  return this.http.get('https://prometheuspuzzles.herokuapp.com/api/puzzles/getSearchedPuzzles/' + term);\n}\n\nsharePuzzle(puzzle: any){\n  const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\n  return this.http.put('https://prometheuspuzzles.herokuapp.com/api/puzzles/sharePuzzle', puzzle, httpOptions);\n}\n\nstopSharingPuzzle(puzzle: any){\n  const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\n  return this.http.put('https://prometheuspuzzles.herokuapp.com/api/puzzles/stopSharingPuzzle', puzzle, httpOptions);\n}\n\ndeletePuzzle(puzzle:number):Observable<number>\n{\n  return this.http.delete<number>('https://prometheuspuzzles.herokuapp.com/api/puzzles/deletePuzzle/'+puzzle);\n}\n\nfindRatingID(rating: any){\n  const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\n  return this.http.post('https://prometheuspuzzles.herokuapp.com/api/puzzles/findRatingID', rating, httpOptions);\n}\n\ndeleteRating(rating:number):Observable<number>\n{\n  return this.http.delete<number>('https://prometheuspuzzles.herokuapp.com/api/puzzles/deleteRating/'+rating);\n}\n\n/**\n* Puzzle endpoints end here\n*/\n}\n","import { width, height, setSites, setDisableEditMode, initializeData, calculateDistancesFromSitesToPoint, \r\n\tequidistantPointsPresent, generateSiteBoundaries, createPieces, clearBoard } from 'src/assets/js/manualCreation.js'\r\n\r\n///The structure of each individual/chromosome object\r\nlet Chromosome = {\r\n\tsites: [],\r\n\tfitness: -1,\r\n};\r\n\r\n///The structure of each site object\r\nlet Site = {\r\n\tx: 0,\r\n\ty: 0,\r\n\tsurfaceArea: 0,\r\n}\r\n\r\nlet generatePuzzleAIButton, colorPalettesDiv;\r\nlet tempWidth, tempHeight;\r\nlet totalSurfaceArea;\r\n\r\nlet generationSize = 10 + 1;\r\nlet tournamentSize = 4;\r\nlet maximumIterations = 150;\r\nlet seedString = 'apples';\r\n\r\nlet sliders = [];\r\nlet labels = [];\r\nlet numberOfSites = 6;\r\nlet desiredProportions = [0.40, 0.20, 0.10, 0.10, 0.10, 0.10];\r\nlet groupDistribution = [];\r\n\r\nfunction copyObject(obj)\r\n{\r\n    return JSON.parse(JSON.stringify(obj));\r\n}\r\n\r\nfunction xmur3(str) {\r\n    for(var i = 0, h = 1779033703 ^ str.length; i < str.length; i++)\r\n        h = Math.imul(h ^ str.charCodeAt(i), 3432918353),\r\n        h = h << 13 | h >>> 19;\r\n    return function() {\r\n        h = Math.imul(h ^ h >>> 16, 2246822507);\r\n        h = Math.imul(h ^ h >>> 13, 3266489909);\r\n        return (h ^= h >>> 16) >>> 0;\r\n    }\r\n}\r\n\r\nfunction mulberry32(a) {\r\n    return function() {\r\n      var t = a += 0x6D2B79F5;\r\n      t = Math.imul(t ^ t >>> 15, t | 1);\r\n      t ^= t + Math.imul(t ^ t >>> 7, t | 61);\r\n      return ((t ^ t >>> 14) >>> 0) / 4294967296;\r\n    }\r\n}\r\n\r\nlet seed = xmur3(seedString);\r\nlet rand = mulberry32(seed());\r\n\r\nfunction random(max)\r\n{\r\n    return Math.ceil(rand() * max) - 1;\r\n}\r\n\r\nfunction expandPuzzle(sites, factor)\r\n{\r\n\tfor(let i = 0; i < sites.length; i++)\r\n\t{\r\n\t\tsites[i].x = sites[i].x * factor;\r\n\t\tsites[i].y = sites[i].y * factor;\r\n\t}\r\n\r\n\treturn sites;\r\n}\r\n\r\nexport function initializeDataAI()\r\n{\r\n\tinitializeData('AI');\r\n\tgeneratePuzzleAIButton = document.getElementById('generatePuzzleButtonAI');\r\n\tgeneratePuzzleAIButton.addEventListener('mousedown', generatePuzzleAI);\r\n\tgeneratePuzzleAIButton.remove();\r\n\r\n\tdocument.getElementById('nextButton').addEventListener('mousedown', displaySlidersCard);\r\n\t// colorPalettesDiv = document.getElementById('colorPalettesAI');\r\n\t// colorPalettesDiv.remove();\r\n}\r\n\r\nfunction displaySlidersCard()\r\n{\r\n\tnumberOfSites = document.getElementById('numberOfPiecesInputBox').value;\r\n\r\n\tgroupDistribution.push(document.getElementById('numberOfPiecesInputBox1').value);\r\n\tgroupDistribution.push(document.getElementById('numberOfPiecesInputBox2').value);\r\n\tgroupDistribution.push(document.getElementById('numberOfPiecesInputBox3').value);\r\n\r\n\tgenerateSliders(3);\r\n\t\r\n\tdocument.getElementById('inputContainer').appendChild(generatePuzzleAIButton);\r\n}\r\n\r\nfunction generatePuzzleAI()\r\n{\r\n\tdesiredProportions = [];\r\n\r\n\tfor(let i = 0; i < 3; i++)\r\n\t{\r\n\t\tlet proportion = (sliders[i].value / groupDistribution[i]) / 100;\r\n\r\n\t\tfor(let counter = 0; counter < groupDistribution[i]; counter++)\r\n\t\t\tdesiredProportions.push(proportion);\r\n\t}\r\n\r\n\tdesiredProportions.sort( function(a, b) { return b - a } );\r\n\r\n\tdocument.getElementById('inputContainer').innerHTML = '';\r\n\t// document.getElementById('inputContainer').appendChild(colorPalettesDiv);\r\n\r\n\tlet sites = run();\r\n\tsites = expandPuzzle(sites, 10);\r\n\r\n\tsetSites(sites);\r\n\tsetDisableEditMode(true);\r\n\tclearBoard();\r\n\tgenerateSiteBoundaries();\r\n\tcreatePieces();\r\n}\r\n\r\nfunction generateSliders(numberOfSliders)\r\n{\r\n\tlet inputContainer = document.getElementById('inputContainer');\r\n\tlet defaultValue = 100/numberOfSliders;\r\n\r\n\tinputContainer.innerHTML = '';\r\n\r\n\tfor(let i = 0; i < numberOfSliders; i++)\r\n\t{\r\n\t\tlet slider = document.createElement('input');\r\n\t\tslider.type = 'range';\r\n\t\tslider.min = 1.00;\r\n\t\tslider.max = 100.00 - numberOfSliders + 1;\r\n\t\tslider.value = defaultValue;\r\n\t\tslider.previousValue = defaultValue;\r\n\t\tslider.sliderid = i;\r\n\t\tslider.step = 0.01;\r\n\t\t\r\n\t\tslider.addEventListener('input', function() {\r\n\t\t\tlet difference = this.previousValue - this.value;\r\n\t\t\tlet distributedValue = (difference/( numberOfSliders - 1 )).toFixed(2);\r\n\t\t\tlet leftover = 0;\r\n\r\n\t\t\tfor(let i = 0 ; i < numberOfSliders; i++)\r\n\t\t\t{\r\n\t\t\t\tif(i != this.sliderid)\r\n\t\t\t\t{\r\n\t\t\t\t\tlet tempValue = ( parseFloat(sliders[i].value) + parseFloat(distributedValue) );\r\n\t\t\t\t\tif(tempValue >= 1.00)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(leftover != 0 && ( tempValue + leftover ) >= 1.00)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttempValue += leftover;\r\n\t\t\t\t\t\t\tleftover = 0;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tsliders[i].value = tempValue;\r\n\t\t\t\t\t\tsliders[i].previousValue = tempValue;\r\n\t\t\t\t\t\tlabels[i].innerHTML = parseInt(tempValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tleftover += parseFloat(distributedValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor(let i = 0; leftover != 0 && i < numberOfSliders; i++)\r\n\t\t\t{\r\n\t\t\t\tif(i != this.sliderid)\r\n\t\t\t\t{\r\n\t\t\t\t\tlet tempValue = parseFloat(sliders[i].value) + leftover;\r\n\t\t\t\t\tif(tempValue >= 1.00)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsliders[i].value = tempValue;\r\n\t\t\t\t\t\tsliders[i].previousValue = tempValue;\r\n\t\t\t\t\t\tlabels[i].innerHTML = parseInt(tempValue);\r\n\t\t\t\t\t\tleftover = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.previousValue = this.value;\r\n\t\t\tlabels[this.sliderid].innerHTML = parseInt(this.value);\r\n\t\t});\r\n\r\n\t\tlet headerLabel = document.createElement('label');\r\n\t\theaderLabel.innerHTML = 'Group ' + (i+1);\r\n\r\n\t\tlet valueLabel = document.createElement('label');\r\n\t\tvalueLabel.innerHTML = defaultValue.toFixed(0);\r\n\r\n\t\tlet br = document.createElement('br');\r\n\r\n\t\tsliders.push(slider);\r\n\t\tlabels.push(valueLabel);\r\n\r\n\r\n\t\tinputContainer.appendChild(headerLabel);\r\n\t\tinputContainer.appendChild(slider);\r\n\t\tinputContainer.appendChild(valueLabel);\r\n\t\tinputContainer.appendChild(br);\r\n\t}\r\n}\r\n\r\n///Executes the genetic algorithm and returns the resulting site array \r\nfunction run()\r\n{\r\n\tlet currentGeneration = [], nextGeneration = [];\r\n\tlet parentX, parentY, children;\r\n\tlet x, y;\r\n\ttempWidth = width/10;\r\n\ttempHeight = height/10;\r\n\ttotalSurfaceArea = tempWidth * tempHeight;\r\n\r\n\tnextGeneration = initializeGeneration();\r\n\tfor(let generation = 0; generation < maximumIterations; generation++)\r\n\t{\r\n\t\tcurrentGeneration = nextGeneration;\r\n\t\tnextGeneration = [];\r\n\t\tnextGeneration.push( getFittest(currentGeneration) );\r\n\t\tfor(let i = 0; i < generationSize - 1; i+=2)\r\n\t\t{\r\n\t\t\tparentX = runTournament(currentGeneration);\r\n\t\t\tparentY = runTournament(currentGeneration);\r\n\t\t\tchildren = crossover(parentX, parentY);\r\n\t\t\tmutate(children[0]);\r\n\t\t\tmutate(children[1]);\r\n\t\t\tcalculateAndSetFitness(children[0]);\r\n\t\t\tcalculateAndSetFitness(children[1]);\r\n\t\t\tnextGeneration.push(...children);\r\n\t\t}\r\n\t}\r\n\r\n\tconsole.log(nextGeneration);\r\n\tconsole.log('done!');\r\n\treturn getFittest(nextGeneration).sites;\r\n}\r\n\r\n///Returns the fittest chromosome from generation\r\nfunction getFittest(generation)\r\n{\r\n\tlet fittestChromosome = null;\r\n\tfittestChromosome = generation[0];\r\n\r\n\tfor(let i = 1; i < generationSize; i++)\r\n\t\tif(generation[i].fitness < fittestChromosome.fitness)\r\n\t\t\tfittestChromosome = generation[i];\r\n\r\n\treturn fittestChromosome;\r\n}\r\n\r\n///Randomly selected a site and a movement direction; then proceed to execute movement using a random offset\r\nfunction mutate(chromosome)\r\n{\r\n\t// let siteIndex = random(numberOfSites);\r\n\tlet selectedSite = chromosome.sites[random(numberOfSites)];\r\n\tlet offset = random(5);\r\n\tlet movementDirection = random(4);\r\n\r\n\t///Move site to the right by offset (increment x by offset), or move to the left if at board edge\r\n\tif(movementDirection == 0)\r\n\t{\r\n\t\tif(selectedSite.x + offset < tempWidth)\r\n\t\t\tselectedSite.x = selectedSite.x + offset;\r\n\t\telse\r\n\t\t\tselectedSite.x = selectedSite.x - offset;\r\n\t}\r\n\t///Move site to the left by offset (decrement x by offset), or move to the right if at the board edge\r\n\telse if(movementDirection == 1)\r\n\t{\r\n\t\tif(selectedSite.x - offset > 0)\r\n\t\t\tselectedSite.x = selectedSite.x - offset;\r\n\t\telse\r\n\t\t\tselectedSite.x = selectedSite.x + offset;\r\n\t}\r\n\t///Move site upwards by offset (decrement y by offset), or move downwards if at the board edge\r\n\telse if(movementDirection == 2)\r\n\t{\r\n\t\tif(selectedSite.y - offset > 0)\r\n\t\t\tselectedSite.y = selectedSite.y - offset;\r\n\t\telse\r\n\t\t\tselectedSite.y = selectedSite.y + offset;\r\n\t}\r\n\t///Move site downwards by offset (increment y by offset), or move upwards if at board edge\r\n\telse if(movementDirection == 3)\r\n\t{\r\n\t\tif(selectedSite.y + offset < tempHeight)\r\n\t\t\tselectedSite.y = selectedSite.y + offset;\r\n\t\telse\r\n\t\t\tselectedSite.y = selectedSite.y - offset;\r\n\t}\r\n}\r\n\r\n/**\r\n\tCrossover operation; randomly select a site index and swap the sites located on said index. \r\n\tThis function will create two new children, swap their sites and return an array containing them.\r\n**/\r\nfunction crossover(chromosomeX, chromosomeY)\r\n{\r\n\tlet swapIndex = random(numberOfSites);\r\n\tlet childX = copyObject(chromosomeX);\r\n\tlet childY = copyObject(chromosomeY);\r\n\r\n\tlet tempSite = childX.sites[swapIndex];\r\n\tchildX.sites[swapIndex] = childY.sites[swapIndex];\r\n\tchildY.sites[swapIndex] = tempSite;\r\n\r\n\treturn [childX, childY];\r\n}\r\n\r\n///Tournament selection of parent for next generation - fittest from a random bunch is returned.\r\nfunction runTournament(generation)\r\n{\r\n\tlet chosenChromosome, fittestChromosome = null;\r\n\r\n\tfor(let i = 0; i < tournamentSize; i++)\r\n\t{\r\n\t\tchosenChromosome = generation[random(generationSize)];\r\n\t\tif(fittestChromosome == null || chosenChromosome.fitness < fittestChromosome.fitness)\r\n\t\t\tfittestChromosome = chosenChromosome;\r\n\t}\r\n\r\n\treturn fittestChromosome;\r\n}\r\n\r\n///Create and return the initial generation of chromosomes\r\nfunction initializeGeneration()\r\n{\r\n\tlet currentGeneration = [];\r\n\tfor(let i = 0; i < generationSize; i++)\r\n\t{\r\n\t\tlet newChromosome = copyObject(Chromosome);\r\n\t\tfor(let siteIndex = 0; siteIndex < numberOfSites; siteIndex++)\r\n\t\t{\r\n\t\t\tlet tempSite = copyObject(Site);\r\n\t\t\ttempSite.x = random(tempWidth + 1);\r\n\t\t\ttempSite.y = random(tempHeight + 1);\r\n\t\t\tnewChromosome.sites.push(tempSite);\r\n\t\t}\r\n\r\n\t\tcalculateAndSetFitness(newChromosome);\r\n\t\tcurrentGeneration.push(newChromosome);\r\n\t}\r\n\r\n\treturn currentGeneration;\r\n}\r\n\r\n///Calculate and set the fitness of a chromosome\r\nfunction calculateAndSetFitness(chromosome)\r\n{\r\n\tdetermineAndSetSiteBoundaries(chromosome);\r\n\tsortSites(chromosome);\r\n\tlet fitness = 0, difference;\r\n\r\n\tfor(let i = 0; i < desiredProportions.length; i++)\r\n\t{\r\n\t\tdifference = ( desiredProportions[i] * totalSurfaceArea ) - chromosome.sites[i].surfaceArea;\r\n\t\tif(difference < 0)\r\n\t\t\tdifference *= -1;\r\n\t\tfitness += difference;\r\n\t}\r\n\r\n\tchromosome.fitness = fitness;\r\n}\r\n\r\n///Sort the sites according to surface area from highest to lowest\r\nfunction sortSites(chromosome)\r\n{\r\n\tlet sites = chromosome.sites;\r\n\tsites.sort(function(siteA, siteB) { return \tsiteB.surfaceArea - siteA.surfaceArea });\r\n}\r\n\r\n///Generate the boundaries around the sites\r\nfunction determineAndSetSiteBoundaries(chromosome)\r\n{\r\n\tfor(let i = 0; i < numberOfSites; i++)\r\n\t\tchromosome.sites[i].surfaceArea = 0;\r\n\t\r\n\tfor(let row = 0; row < tempHeight; row++)\r\n\t{\r\n\t\tfor(let col = 0; col < tempWidth; col++)\r\n\t\t{\r\n\t\t\tlet distances = calculateDistancesFromSitesToPoint(col, row, chromosome.sites);\r\n\t\t\tlet equidistantPoints = equidistantPointsPresent(distances);\r\n\r\n\t\t\tchromosome.sites[equidistantPoints[0]].surfaceArea += 1;\r\n\t\t}\r\n\t}\r\n}","import Konva from 'konva';\r\nexport { width, height, setSites, setDisableEditMode, initializeData, calculateDistancesFromSitesToPoint, \r\n\tequidistantPointsPresent, generateSiteBoundaries, createPieces, clearBoard };\r\n\r\nlet apiURL = \"http://localhost:3200/api/puzzles/createPuzzle\";\r\nlet distanceMetric = 'euclidean';\r\nlet token;\r\n\r\nlet contentDiv = null;\r\nlet aiContentDiv = null;\r\nlet canvas;\r\nlet canvasCoords;\r\nlet width =  500;\r\nlet height = 500;\r\nlet stage;\r\nlet layer;\r\nlet square;\r\nlet pointsArray = [];\r\nlet sites = [];\r\nlet siteBoundaries;\r\nlet pieces = [];\r\nlet precision = 0;\r\n\r\nlet colorPalettes = [];\r\n//Default palette\r\nlet selectedPalette;\r\nlet paletteCounter = 0;\r\nlet radioButtons = [];\r\n\r\nlet hoverOverPoint = false;\r\nlet disableEditMode = false;\r\nlet deletePointButtonClicked = false;\r\nlet piecesJSONObject;\r\n\r\nlet editIcon, deleteIcon;\r\n\r\n///Make an array with desired colors - can be hex values or names\r\nlet defaultPalette = ['Plum', 'Tomato', 'Orange', 'Violet', 'Gray', 'MediumSeaGreen', 'LightGray', 'SlateBlue', 'Brown', 'Aquamarine', 'AntiqueWhite', 'Red', 'Green'];\r\n///Add the array to the page using this function with the array as a first and the desired name as a second parameter\r\naddColorPalette(defaultPalette, \"Default\");\r\n\r\nlet shadesOfRedPalette = ['Crimson', 'DarkRed', 'Coral', 'FireBrick', 'IndianRed', 'Maroon', 'OrangeRed', 'PaleVioletRed', 'Red', 'Tomato', 'Brown'];\r\naddColorPalette(shadesOfRedPalette, \"Shades Of Red\");\r\n\r\nlet shadesOfGreenPalette = ['Teal', 'MediumSpringGreen', 'LimeGreen', 'ForestGreen', 'MediumSeaGreen', 'LawnGreen', 'PaleGreen', 'GreenYellow', 'Aquamarine'];\r\naddColorPalette(shadesOfGreenPalette, \"Shades of Green\");\r\n\r\nlet shadesOfBluePalette = ['DarkBlue', 'DeepSkyBlue', 'MediumBlue', 'DodgerBlue', 'MidnightBlue', 'RoyalBlue', 'DarkSlateBlue', 'CornflowerBlue', 'SkyBlue', 'PowderBlue'];\r\naddColorPalette(shadesOfBluePalette, \"Shades of Blue\");\r\n///Add a color palette to the page and needed functionality\r\nfunction addColorPalette(arrayOfColors, paletteName)\r\n{\r\n\tcolorPalettes.push(arrayOfColors);\r\n\t// let radioButton = document.createElement('mat-radio-button');\r\n\t// let radioButton = document.createElement('input');\r\n\t// radioButton.type = 'radio';\r\n\t// radioButton.class = 'radio-button';\r\n\t// radioButton.value = paletteName;\r\n\t// radioButton.innerHTML = paletteName;\r\n\t// radioButton.name = 'colorPalette';\r\n\t// radioButton.paletteid = paletteCounter++;\r\n\t// radioButton.addEventListener('mousedown', function() {\r\n\t// \tselectedPalette = colorPalettes[this.paletteid];\r\n\t// \tchangePuzzleColorPalette(selectedPalette);\r\n\t// });\r\n\r\n\t// radioButtons.push(radioButton);\r\n}\r\n\r\n///Changes the displayed color palette used on the puzzle and re-renders it\r\nfunction changePuzzleColorPalette(colors)\r\n{\r\n\tif(pieces.length > 0)\r\n\t{\r\n\t\tlayer.removeChildren();\r\n\t\tfor(let i = 0; i < pieces.length; i++)\r\n\t\t{\r\n\t\t\tpieces[i].attrs.stroke = colors[i % colors.length];\r\n\t\t\tlayer.add(pieces[i]);\r\n\t\t}\r\n\r\n\t\tlayer.draw();\r\n\t}\r\n}\r\n\r\n///Randomizes the color palette used on the puzzle\r\nfunction randomizePuzzleColorPalette()\r\n{\r\n\tif(pieces.length > 0)\r\n\t{\r\n\t\tlayer.removeChildren();\r\n\t\tfor(let i = 0; i < pieces.length; i++)\r\n\t\t{\r\n\t\t\tpieces[i].attrs.stroke = getRandomRGB();\r\n\t\t\tlayer.add(pieces[i]);\r\n\t\t}\r\n\r\n\t\tlayer.draw();\r\n\t}\r\n}\r\n\r\n///Returns a random RGB value\r\nfunction getRandomRGB()\r\n{\r\n\tlet r = Math.floor(Math.random() * 256);\r\n\tlet g = Math.floor(Math.random() * 256);\r\n\tlet b = Math.floor(Math.random() * 256);\r\n\treturn \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\r\n}\r\n\r\n///Initialize data and set functions for buttons\r\nfunction initializeData(appendedString) \r\n{\r\n\tif(appendedString == undefined)\r\n\t\tappendedString = '';\r\n\r\n\tsites = [];\r\n\tsiteBoundaries = [];\r\n\r\n\tdisableEditMode = false;\r\n\r\n\tselectedPalette = defaultPalette;\r\n\tcanvas = document.getElementById('container'+appendedString);\r\n\tstage = new Konva.Stage({\r\n\t\tcontainer: 'container'+appendedString,\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t});\r\n\r\n\tlayer = new Konva.Layer();\r\n\r\n\tsquare = new Konva.Rect({\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\tstroke: 'black',\r\n\t\tstrokeWidth: 2,\r\n\r\n\t});\r\n\r\n\tlayer.add(square);\r\n\tstage.add(layer);\r\n\r\n\tcanvas.addEventListener('mousedown', function(event){\r\n\t\tif(!disableEditMode && !hoverOverPoint)\r\n\t\t{\r\n\t\t\tcanvasCoords = canvas.getBoundingClientRect();\r\n\t\t\tlet x = event.clientX - canvasCoords.x;\r\n\t\t\tlet y = event.clientY - canvasCoords.y;\r\n\t\t\t\r\n\t\t\tlet point = createPoint(x, y);\r\n\r\n\t\t\tlayer.add(point);\r\n\t\t\tlayer.draw();\r\n\t\t\tconsole.log(\"X: \" + x + \" Y: \" + y);\r\n\t\t}\r\n\t});\r\n\r\n\t// addColorPalettePicker(appendedString);\r\n\r\n\tif(document.getElementById('generatePuzzleButton') != null)\r\n\t\tdocument.getElementById('generatePuzzleButton').addEventListener('mousedown', generatePuzzle);\r\n\r\n\tdocument.getElementById('euclideanButton'+appendedString).addEventListener('mousedown', function(){\r\n\t\tsetDistanceMetric('euclidean');\r\n\t});\r\n\r\n\tdocument.getElementById('manhattanButton'+appendedString).addEventListener('mousedown', function(){\r\n\t\tsetDistanceMetric('manhattan');\r\n\t});\r\n\r\n\tdocument.getElementById('saveButton'+appendedString).addEventListener('mousedown', function() {\r\n\t\tsavePuzzle(appendedString);\r\n\t});\r\n\r\n\tif(document.getElementById('deletePointButton') != null)\r\n\t{\r\n\t\teditIcon = document.getElementById('editPointButtonIcon');\r\n\t\tdeleteIcon = document.getElementById('deletePointButtonIcon');\r\n\t\tif(editIcon != null)\r\n\t\t\teditIcon.remove();\r\n\r\n\t\tdocument.getElementById('deletePointButton').addEventListener('mousedown', function() {\r\n\t\t\tdeletePointButtonClicked = !deletePointButtonClicked;\r\n\t\t\tif(deletePointButtonClicked)\r\n\t\t\t{\r\n\t\t\t\tdisableEditMode = true;\r\n\t\t\t\tthis.innerHTML = '';\r\n\t\t\t\tthis.appendChild(editIcon);\r\n\t\t\t\tthis.innerHTML += 'Edit Mode';\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tdisableEditMode = false;\r\n\t\t\t\tthis.innerHTML = '';\r\n\t\t\t\tthis.appendChild(deleteIcon);\r\n\t\t\t\tthis.innerHTML += 'Delete Mode';\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tdocument.getElementById('randomizeColorsButton'+appendedString).addEventListener('mousedown', randomizePuzzleColorPalette);\r\n\r\n\tlet palettes = document.getElementsByClassName('colorPalettes');\r\n\r\n\tfor(let paletteIndex = 0; paletteIndex < palettes.length; paletteIndex++)\r\n\t{\r\n\t\tpalettes[paletteIndex].addEventListener('mousedown', function(){\r\n\t\t\t// console.log(this.getAttribute('paletteid'));\r\n\t\t\tselectedPalette = colorPalettes[this.getAttribute('paletteid')];\r\n\t\t\tchangePuzzleColorPalette(selectedPalette);\r\n\t\t});\r\n\t}\r\n\r\n\t// document.getElementById('saveAndSubmitButton').addEventListener('mousedown', function() {\r\n\t// \t// let puzzleImage = stage.toDataURL({ pixelRatio: 0.25 });\r\n\t// \t// document.getElementById('testingImg').src = puzzleImage;\r\n\t// \tsavePuzzle(true);\r\n\t// });\r\n}\r\n\r\nfunction addColorPalettePicker(appendedString)\r\n{\r\n\tlet colorPaletteDiv = document.getElementById('colorPalettes'+appendedString);\r\n\tlet label;\r\n\tfor(let i = 0; i < radioButtons.length; i++)\r\n\t{\r\n\t\tlabel = document.createElement('label');\r\n\t\tlabel.innerHTML = radioButtons[i].value;\r\n\t\tcolorPaletteDiv.appendChild(radioButtons[i]);\r\n\t\tcolorPaletteDiv.appendChild(label);\r\n\t}\r\n}\r\n\r\n///Create a post ajax request and send it to the API in order to save the user's created puzzle\r\nfunction savePuzzle(appendedString)\r\n{\r\n\ttoken = document.getElementById('tokenLabel').innerHTML;\r\n\t\r\n\tlet puzzleName = document.getElementById('puzzleNameInputBox'+appendedString).value;\r\n\tlet puzzleDescription = document.getElementById('puzzleDescriptionInputBox'+appendedString).value;\r\n\r\n\tlet puzzleImage = stage.toDataURL({ pixelRatio: 0.25 });\r\n\r\n\tlet jsonData = {\r\n\t\ttoken: token,\r\n\t\tname: puzzleName,\r\n\t\tdescription: puzzleDescription,\r\n\t\tpuzzleObject: piecesJSONObject,\r\n\t\timage: puzzleImage,\r\n\t\tshared: false\r\n\t};\r\n\r\n\t$.ajax({\r\n\t\ttype: 'POST',\r\n\t\turl: apiURL,\r\n\t\theaders: { \r\n\t\t\t'Access-Control-Allow-Origin' : '*' \r\n\t\t},\r\n\t\tcontentType: 'application/json',\r\n\t\tdata: JSON.stringify(jsonData),\r\n\t\tdataType: 'json',\r\n\t\tsuccess: function(data, status) {\r\n\t\t\tconsole.log(data);\r\n\t\t\tconsole.log(status);\r\n\t\t},\r\n\t\terror: function(data, status) {\r\n\t\t\tconsole.log(data);\r\n\t\t\tconsole.log(status);\t\r\n\t\t}\r\n\t});\r\n}\r\n\r\n///Set the selected distance metric for the puzzle\r\nfunction setDistanceMetric(metric)\r\n{\r\n\tdistanceMetric = metric;\r\n}\r\n\r\n///Set disableEditMode to true to prevent user from clicking it any further\r\nfunction setDisableEditMode(bool)\r\n{\r\n\tdisableEditMode = bool;\r\n}\r\n\r\n///Set the sites array\r\nfunction setSites(tempSites)\r\n{\r\n\tsites = tempSites;\r\n}\r\n\r\n///Clear the board\r\nfunction clearBoard()\r\n{\r\n\tpiecesJSONObject = {\r\n\t\t'pieces' : []\r\n\t};\r\n\r\n\tpieces = [];\r\n\tlayer.destroyChildren();\r\n}\r\n\r\n///Create a visual representation of where the user clicks\r\nfunction createPoint(x, y)\r\n{\r\n\tlet point = new Konva.Circle({\r\n\t\tx: x,\r\n\t\ty: y,\r\n\t\tradius: 1,\r\n\t\tstroke: 'black',\r\n\t\tstrokeWidth: 4,\r\n\t\tdraggable: true\r\n\t});\r\n\r\n\tpoint.on('mouseover', function (event){\r\n\t\tdocument.onmousemove = function(event) {\r\n\t\t\tcanvasCoords = canvas.getBoundingClientRect();\r\n\t\t\tpoint.x(event.clientX - canvasCoords.x);\r\n\t\t\tpoint.y(event.clientY - canvasCoords.y);\r\n\t\t};\r\n\r\n\t\thoverOverPoint = true;\r\n\t\tdocument.body.style.cursor = 'pointer';\r\n\t});\r\n\r\n\tpoint.on('mouseout', function(event) {\r\n\t\tdocument.onmousemove = null;\r\n\t\thoverOverPoint = false;\r\n\t\tdocument.body.style.cursor = 'default';\r\n\t});\r\n\r\n\tpoint.on('click', function(event) {\r\n\t\t// console.log('clicked!');\r\n\t\tif(deletePointButtonClicked)\r\n\t\t{\r\n\t\t\tdocument.onmousemove = null;\r\n\t\t\thoverOverPoint = false;\r\n\t\t\tdocument.body.style.cursor = 'default';\r\n\t\t\tpoint.destroy();\r\n\t\t\tlayer.draw();\r\n\t\t}\r\n\t});\r\n\r\n\treturn point;\r\n}\r\n\r\n///Calls the necessary functions to generate puzzle's vertiecs as well as the visual representation \r\nfunction generatePuzzle()\r\n{\r\n\t//Testing data\r\n\t// {\"sites\":[78,108,300,102,100,247,333,281,184,331],\"queries\":[]}\r\n\t// sites = [\r\n\t// {\r\n\t// \tx:78,\r\n\t// \ty:108,\r\n\t// },\r\n\t// {\r\n\t// \tx:300,\r\n\t// \ty:102,\r\n\t// },\r\n\t// {\r\n\t// \tx:100,\r\n\t// \ty:247,\r\n\t// },\r\n\t// {\r\n\t// \tx:333,\r\n\t// \ty:281,\r\n\t// },\r\n\t// {\r\n\t// \tx:184,\r\n\t// \ty:331,\r\n\t// }\r\n\t// ];\r\n\r\n\tpointsArray = layer.getChildren(function(node) {\r\n\t\treturn node.getClassName() === 'Circle';\r\n\t});\r\n\r\n\tfor (let i = pointsArray.length - 1; i >= 0; i--) {\r\n\t\tsites.push({\r\n\t\t\tx: pointsArray[i].attrs.x,\r\n\t\t\ty: pointsArray[i].attrs.y,\r\n\t\t});\r\n\t}\r\n\r\n\tclearBoard();\r\n\r\n\t///This makes sure that the generate button will only generate once\r\n\tdisableEditMode = true;\r\n\r\n\tgenerateSiteBoundaries();\r\n\tcreatePieces();\r\n}\r\n\r\n///Creates the puzzle pieces from the siteBoundaries for each site(position selected by the user) \r\nfunction createPieces()\r\n{\r\n\tfor(let i = 0; i < sites.length; i++)\r\n\t{\r\n\t\tlet trimmedPoints = trimPoints(siteBoundaries[i]);\r\n\t\tlet piece = new Konva.Line({\r\n\t\t\tpoints: trimmedPoints,\r\n\t\t\tstroke: selectedPalette[i % selectedPalette.length],\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tdraggable: true,\r\n\t\t});\r\n\r\n\t\tpiece.on('mouseover', function (){\r\n\t\t\tdocument.body.style.cursor = 'pointer';\r\n\t\t});\r\n\r\n\t\tpiece.on('mouseout', function() {\r\n\t\t\tdocument.body.style.cursor = 'default';\r\n\t\t});\r\n\r\n\t\tpieces.push(piece);\r\n\t\tpiecesJSONObject.pieces.push(trimmedPoints);\r\n\t\tlayer.add(piece);\r\n\t}\r\n\tlayer.draw();\r\n\tpiecesJSONObject = JSON.stringify(piecesJSONObject);\r\n}\r\n\r\n///Shortens the array of vertices for each puzzle piece\r\nfunction trimPoints(pointArray)\r\n{\r\n\tlet trimmedPoints = [];\r\n\tlet lastPointCol = -1;\r\n\tlet firstPointCol = pointArray[0];\r\n\tlet currentRow = pointArray[1];\r\n\tlet crissCross = 1;\r\n\r\n\tfor(let index = 0; index < pointArray.length; index+=2)\r\n\t{\r\n\t\tif(currentRow != pointArray[index+1])\r\n\t\t{\r\n\t\t\tif(crissCross == 1)\r\n\t\t\t{\r\n\t\t\t\ttrimmedPoints.push(firstPointCol, currentRow);\r\n\t\t\t\ttrimmedPoints.push(lastPointCol, currentRow);\r\n\t\t\t\tcrissCross = -1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttrimmedPoints.push(lastPointCol, currentRow);\r\n\t\t\t\ttrimmedPoints.push(firstPointCol, currentRow);\r\n\t\t\t\tcrissCross - 1;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfirstPointCol = pointArray[index];\r\n\t\t\tlastPointCol = pointArray[index];\r\n\t\t\tcurrentRow = pointArray[index+1];\t\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tlastPointCol = pointArray[index];\r\n\t\t}\r\n\t}\r\n\r\n\treturn trimmedPoints;\r\n}\r\n\r\n///Generate the boundaries around the sites\r\nfunction generateSiteBoundaries()\r\n{\r\n\t// console.log(sites);\r\n\tfor(let i = 0; i < sites.length; i++)\r\n\t\tsiteBoundaries[i] = [];\r\n\r\n\tfor(let row = 0; row < height; row++)\r\n\t{\r\n\t\tfor(let col = 0; col < width; col++)\r\n\t\t{\r\n\t\t\tlet distances = calculateDistancesFromSitesToPoint(col, row, sites);\r\n\t\t\tlet equidistantPoints = equidistantPointsPresent(distances);\r\n\r\n\t\t\tsiteBoundaries[equidistantPoints[0]].push(col);\r\n\t\t\tsiteBoundaries[equidistantPoints[0]].push(row);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n///Determines which site is closest to a pixel position\r\nfunction equidistantPointsPresent(distances)\r\n{\r\n\tlet returnArray = [];\r\n\tlet minimumDistance = Math.min(...distances);\r\n\r\n\tif(distanceMetric === 'euclidean')\r\n\t\tminimumDistance = minimumDistance.toFixed(precision) + '';\r\n\r\n\tlet index = 0, counter = 0;\r\n\r\n\twhile(index != -1)\r\n\t{\r\n\t\tindex = distances.indexOf(minimumDistance);\r\n\t\tif(index != -1)\r\n\t\t{\r\n\t\t\treturnArray.push(index+counter);\r\n\t\t\tdistances.splice(index, 1);\r\n\t\t\tcounter++;\r\n\t\t}\r\n\t}\r\n\r\n\treturn returnArray;\r\n}\r\n\r\n///Calculates the distances from each site to pixel in position (xOfPoint, yOfPoint) and returns an array\r\nfunction calculateDistancesFromSitesToPoint(xOfPoint, yOfPoint, sitePoints)\r\n{\r\n\tlet result = [];\r\n\tfor(let i = 0; i < sitePoints.length; i++)\r\n\t\tresult.push(calculateDistance(xOfPoint, yOfPoint, sitePoints[i].x, sitePoints[i].y));\r\n\r\n\treturn result;\r\n}\r\n\r\n///Calculates the distance from point1 to point2 using the selected distance metrix\r\nfunction calculateDistance(point1X, point1Y, point2X, point2Y)\r\n{\r\n\tif(distanceMetric === 'euclidean')\r\n\t\treturn calculateEuclideanDistance(point1X, point1Y, point2X, point2Y);\r\n\telse if(distanceMetric === 'manhattan')\r\n\t\treturn calculateManhattanDistance(point1X, point1Y, point2X, point2Y);\r\n}\r\n\r\n///Calculates and returns the Euclidean distance\r\nfunction calculateEuclideanDistance(point1X, point1Y, point2X, point2Y)\r\n{\r\n\tlet result = Math.pow( Math.pow( point1X - point2X, 2 ) + Math.pow( point1Y - point2Y, 2 ), 0.5 );\r\n\treturn result.toFixed(precision);\r\n}\r\n\r\n///Calculates and returns the Manhattan distance\r\nfunction calculateManhattanDistance(point1X, point1Y, point2X, point2Y)\r\n{\r\n\tlet resultX = point1X - point2X;\r\n\tif(resultX < 0)\r\n\t\tresultX *= -1;\r\n\tlet resultY = point1Y - point2Y;\r\n\tif(resultY < 0)\r\n\t\tresultY *= -1;\r\n\tlet result = resultX + resultY;\r\n\treturn result;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}