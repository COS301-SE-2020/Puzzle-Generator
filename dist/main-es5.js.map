{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/pages/aicreate/aicreate.component.ts","webpack:///src/app/pages/aicreate/aicreate.component.html","webpack:///src/app/pages/create/create.component.ts","webpack:///src/app/pages/create/create.component.html","webpack:///src/app/pages/index/index.component.ts","webpack:///src/app/pages/index/index.component.html","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/profile-puzzles/profile-puzzles.component.ts","webpack:///src/app/pages/profile-puzzles/profile-puzzles.component.html","webpack:///src/app/pages/profile-ratings/profile-ratings.component.ts","webpack:///src/app/pages/profile-ratings/profile-ratings.component.html","webpack:///src/app/pages/profile/profile.component.ts","webpack:///src/app/pages/profile/profile.component.html","webpack:///src/app/pages/ratings/RatingsArr.ts","webpack:///src/app/pages/ratings/puzzleArr.ts","webpack:///src/app/pages/ratings/ratings.component.ts","webpack:///src/app/pages/ratings/ratings.component.html","webpack:///src/app/pages/reset-password/reset-password.component.ts","webpack:///src/app/pages/reset-password/reset-password.component.html","webpack:///src/app/pages/reset-success/reset-success.component.ts","webpack:///src/app/pages/reset-success/reset-success.component.html","webpack:///src/app/pages/signup/signup.component.ts","webpack:///src/app/pages/signup/signup.component.html","webpack:///src/app/rate-dialog/rate-dialog.component.ts","webpack:///src/app/rate-dialog/rate-dialog.component.html","webpack:///src/app/services/api.service.ts","webpack:///src/assets/js/aiCreation.js","webpack:///src/assets/js/manualCreation.js","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","entryComponents","providers","bootstrap","NavbarComponent","router","localStorage","removeItem","navigate","name","getItem","logout","AICreateComponent","token","CreateComponent","IndexComponent","LoginComponent","formBuilder","api","error_messages","type","message","currentUser","formError","verifyUser","email","password","loginUser","subscribe","data","console","log","setItem","setTimeout","alert","error","status","loginForm","group","required","minLength","ProfilePuzzlesComponent","temp","getPuzzlesByUser","userPuzzleList","text","show","puzzle","sharePuzzle","location","reload","stopSharingPuzzle","getUserPuzzles","ProfileRatingsComponent","dialog","userRatingsList","getPuzzleRatingsByUser","ratePID","rateDialogRef","open","afterClosed","result","ratingEntry","createNewPuzzleRating","rateP","checkData","openRateDialog","getUserPuzzleRatings","ProfileComponent","nameTextboxValue","undefined","updateName","currentUserObject","usernameTextboxValue","updateUsername","getUser","updateNameForm","pattern","updateUsernameForm","username","RatingsArr","PuzzleArr","RatingsComponent","cdr","displayedColumns","puzzles","ratings","populatePuz","length","getAllPuzzleRatings","i","ratingObj","rating","puzzleID","push","getPuzzles","getAllPuzzles","searchValue","getSearchedPuzzles","dataObjectSize","Object","populate","puzzleObj","description","creator","created","createdAt","image","showRating","j","total","k","toString","toFixed","datasource","dataAvailable","filterValue","filterPredicate","filter","toLowerCase","includes","trim","applyFilter","ResetPasswordComponent","resetDone","doPasswordsMatch","resetPasswordForm","controls","value","resetPassword","confirmPassword","firstPassword","secondPassword","ResetSuccessComponent","route","snapshot","paramMap","get","SignupComponent","createUser","signUpForm","newUser","createNewUser","RateDialogComponent","dialogRef","form","close","submit","APIService","http","httpOptions","headers","post","put","term","providedIn","Chromosome","sites","fitness","Site","x","y","surfaceArea","generatePuzzleAIButton","tempWidth","tempHeight","totalSurfaceArea","generationSize","tournamentSize","maximumIterations","seedString","sliders","labels","numberOfSites","desiredProportions","groupDistribution","copyObject","obj","JSON","parse","stringify","xmur3","str","h","Math","imul","charCodeAt","mulberry32","a","t","seed","rand","random","max","ceil","expandPuzzle","factor","initializeDataAI","document","getElementById","addEventListener","generatePuzzleAI","remove","displaySlidersCard","generateSliders","appendChild","proportion","counter","sort","b","innerHTML","run","numberOfSliders","inputContainer","defaultValue","slider","createElement","min","previousValue","sliderid","step","difference","distributedValue","leftover","tempValue","parseFloat","parseInt","headerLabel","valueLabel","br","currentGeneration","nextGeneration","parentX","parentY","children","initializeGeneration","generation","getFittest","runTournament","crossover","mutate","calculateAndSetFitness","fittestChromosome","chromosome","selectedSite","offset","movementDirection","chromosomeX","chromosomeY","swapIndex","childX","childY","tempSite","chosenChromosome","newChromosome","siteIndex","determineAndSetSiteBoundaries","sortSites","siteA","siteB","row","col","distances","equidistantPoints","apiURL","distanceMetric","puzzleImage","canvas","canvasCoords","width","height","stage","layer","square","pointsArray","siteBoundaries","precision","colors","hoverOverPoint","generateButtonClicked","piecesJSONObject","initializeData","Stage","container","Layer","Rect","stroke","strokeWidth","add","event","getBoundingClientRect","clientX","clientY","point","createPoint","draw","generatePuzzle","setDistanceMetric","savePuzzle","share","puzzleName","puzzleDescription","toDataURL","pixelRatio","jsonData","puzzleObject","shared","$","ajax","url","contentType","dataType","success","metric","setGenerateButtonClicked","bool","setSites","tempSites","Circle","radius","draggable","on","onmousemove","body","style","cursor","destroy","getChildren","node","getClassName","attrs","destroyChildren","generateSiteBoundaries","createPieces","colorCount","trimmedPoints","trimPoints","piece","Line","points","pieces","pointArray","lastPointCol","firstPointCol","currentRow","crissCross","index","calculateDistancesFromSitesToPoint","equidistantPointsPresent","returnArray","minimumDistance","indexOf","splice","xOfPoint","yOfPoint","sitePoints","calculateDistance","point1X","point1Y","point2X","point2Y","calculateEuclideanDistance","calculateManhattanDistance","pow","resultX","resultY","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAgBA,QAAMC,MAAM,GAAW,CACrB;AAACC,UAAI,EAAE,OAAP;AAAgBC,eAAS,EAAE;AAA3B,KADqB,EAErB;AAACD,UAAI,EAAE,QAAP;AAAiBC,eAAS,EAAE;AAA5B,KAFqB,EAGrB;AAACD,UAAI,EAAE,OAAP;AAAgBC,eAAS,EAAE;AAA3B,KAHqB,EAIrB;AAACD,UAAI,EAAE,SAAP;AAAkBC,eAAS,EAAE;AAA7B,KAJqB,EAKrB;AAACD,UAAI,EAAE,gBAAP;AAAyBC,eAAS,EAAE;AAApC,KALqB,EAMrB;AAACD,UAAI,EAAE,gBAAP;AAAyBC,eAAS,EAAE;AAApC,KANqB,EAOrB;AAACD,UAAI,EAAE,SAAP;AAAkBC,eAAS,EAAE;AAA7B,KAPqB,EAQrB;AAACD,UAAI,EAAE,eAAP;AAAwBC,eAAS,EAAE;AAAnC,KARqB,EASrB;AAACD,UAAI,EAAE,cAAP;AAAuBC,eAAS,EAAE;AAAlC,KATqB,EAUrB;AAACD,UAAI,EAAE,QAAP;AAAiBC,eAAS,EAAE;AAA5B,KAVqB,EAWrB;AAACD,UAAI,EAAE,UAAP;AAAmBC,eAAS,EAAE;AAA9B,KAXqB,EAanB;AACF;AAAED,UAAI,EAAE,EAAR;AAAYE,gBAAU,EAAE,QAAxB;AAAkCC,eAAS,EAAE;AAA7C,KAdqB,EAerB;AAAEH,UAAI,EAAE,IAAR;AAAcC,eAAS,EAAE;AAAzB,KAfqB,CAAvB;;QAsBaG,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBN,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBK,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBN,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACtC7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaU,Y,GAGX,wBAAc;AAAA;;AAFd,WAAAC,KAAA,GAAQ,oBAAR;AAGC,K;;;uBAJUD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACRzB;;;;;;;;;sEDQaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;AERzsD,CASA;AAqBA;;;QAsDaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBApBJ,CACP,uEADO,EAEP,kEAFO,EAGP,oEAHO,EAIP,4FAJO,EAKP,qEALO,EAMP,wEANO,EAOP,0EAPO,EAQP,qEARO,EASP,qEATO,EAUP,4FAVO,EAWP,2EAXO,EAYP,uEAZO,EAaP,sEAbO,EAcP,2DAdO,EAeP,uEAfO,EAeS,qEAfT,EAgBP,qEAhBO,EAgBQ,gFAhBR,EAgB4B,yEAhB5B,EAgB6C,8EAhB7C,EAgBgE,uEAhBhE,EAgBgF,mEAhBhF,EAiBP,wEAAmBP,OAAnB,EAjBO,CAoBI;;;;0HAGFO,S,EAAS;AAAA,uBAtClB,2DAsCkB,EArClB,4EAqCkB,EApClB,+EAoCkB,EAnClB,4EAmCkB,EAlClB,kFAkCkB,EAjClB,kFAiCkB,EAhClB,yEAgCkB,EA/BlB,sGA+BkB,EA9BlB,mGA8BkB,EA7BlB,+EA6BkB,EA5BlB,uFA4BkB,EA3BlB,yGA2BkB,EA1BlB,yGA0BkB,EAzBlB,qFAyBkB;AAzBD,kBAGjB,uEAHiB,EAIjB,kEAJiB,EAKjB,oEALiB,EAMjB,4FANiB,EAOjB,qEAPiB,EAQjB,wEARiB,EASjB,0EATiB,EAUjB,qEAViB,EAWjB,qEAXiB,EAYjB,4FAZiB,EAajB,2EAbiB,EAcjB,uEAdiB,EAejB,sEAfiB,EAgBjB,2DAhBiB,EAiBjB,uEAjBiB,EAiBD,qEAjBC,EAkBjB,qEAlBiB,EAkBF,gFAlBE,EAkBkB,yEAlBlB,EAkBmC,8EAlBnC,EAkBsD,uEAlBtD,EAkBsE,mEAlBtE,EAkByF,kEAlBzF;AAyBC,O;AAPwF,K;;;;;sEAOjGA,S,EAAS;cAxCrB,sDAwCqB;eAxCZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,4EAFY,EAGZ,+EAHY,EAIZ,4EAJY,EAKZ,kFALY,EAMZ,kFANY,EAOZ,yEAPY,EAQZ,sGARY,EASZ,mGATY,EAUZ,+EAVY,EAWZ,uFAXY,EAYZ,yGAZY,EAaZ,yGAbY,EAcZ,qFAdY,CADN;AAiBRP,iBAAO,EAAE,CACP,uEADO,EAEP,kEAFO,EAGP,oEAHO,EAIP,4FAJO,EAKP,qEALO,EAMP,wEANO,EAOP,0EAPO,EAQP,qEARO,EASP,qEATO,EAUP,4FAVO,EAWP,2EAXO,EAYP,uEAZO,EAaP,sEAbO,EAcP,2DAdO,EAeP,uEAfO,EAeS,qEAfT,EAgBP,qEAhBO,EAgBQ,gFAhBR,EAgB4B,yEAhB5B,EAgB6C,8EAhB7C,EAgBgE,uEAhBhE,EAgBgF,mEAhBhF,EAiBP,wEAAmBD,OAAnB,EAjBO,CAjBD;AAoCRS,yBAAe,EAAE,CAAC,uFAAD,CApCT;AAqCRC,mBAAS,EAAE,EArCH;AAsCRC,mBAAS,EAAE,CAAC,2DAAD;AAtCH,S;AAwCY,Q;;;;;;;;;;;;;;;;;;ACpFtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACUe;;AACE;;AAAyE;;AAAM;;AAAI;;AACnF;;AAA2E;;AAAE;;AAAI;;AACnF;;;;;;AAIA;;AACE;;AAA0E;;AAAU;;AAAI;;AACxF;;AAAiF;;AAAU;;AAAI;;AAC/F;;AAAiF;;AAAU;;AAC7F;;;;QDZFC,e;AAIX,+BAAoBC,MAApB,EAAoC;AAAA;;AAAhB,aAAAA,MAAA,GAAAA,MAAA;AAAmB;;;;iCAEjC;AACJC,sBAAY,CAACC,UAAb,CAAwB,OAAxB;AACA,eAAKF,MAAL,CAAYG,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;;;mCAEO;AACN,eAAKC,IAAL,GAAYH,YAAY,CAACI,OAAb,CAAqB,MAArB,CAAZ;AACD;;;;;;;uBAbUN,e,EAAe,uH;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,4lC;AAAA;AAAA;ACT5B;;AACA;;AACE;;AACF;;AACE;;AACE;;AACI;;AACI;;AAAqB;;AAA0C;;AAAI;;AAAI;;AACvE;;AACE;;AAA2G;;AAAM;;AAAyB;;AACzI;;AAIH;;AACA;;AACE;;AAA2G;;AAAO;;AAAyB;;AAC1I;;AAKH;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AAAe;AAAA,mBAAS,IAAAO,MAAA,EAAT;AAAiB,WAAjB;;AAAmB;;AAAM;;AAC5C;;AACF;;AACF;;;;AAJQ;;AAAA;;;;;;;;;sEDjBKP,e,EAAe;cAL3B,uDAK2B;eALjB;AACTR,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;AET5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQac,iB;AAKX,mCAAc;AAAA;AAAG;;;;mCAET;AACP;AACC,eAAKC,KAAL,GAAaP,YAAY,CAACI,OAAb,CAAqB,OAArB,CAAb;AACD;;;;;;;uBAVUE,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,a;AAAA,knC;AAAA;AAAA;ACR9B;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAAgB;;AAAoB;;AACtC;;AACA;;AACE;;AACE;;AAAO;;AAAgC;;AAAQ;;AAC/C;;AAA+E;;AAC/E;;AAAO;;AAAyB;;AAAQ;;AACxC;;AAAgF;;AAChF;;AAAO;;AAAyB;;AAAQ;;AACxC;;AAAgF;;AAChF;;AAAO;;AAAyB;;AAAQ;;AACxC;;AAAgF;;AAChF;;AAAO;;AAAkB;;AAAQ;;AACjC;;AACE;;AAAsG;;AAAU;;AAChH;;AAAsG;;AAAU;;AAClH;;AACA;;AAAuD;;AAAI;;AAC3D;;AAAkF;;AAAe;;AAAS;;AAC5G;;AACF;;AACH;;AAEA;;AACE;;AACE;;AAAgB;;AAAe;;AACjC;;AACD;;AACE;;AAEF;;AACF;;AACA;;AACE;;AACE;;AAAgB;;AAAc;;AAChC;;AACA;;AACG;;AACC;;AAAa;;AAAM;;AAAQ;;AAAI;;AAA6D;;AAC5F;;AAAa;;AAAmB;;AAAQ;;AAAI;;AAA2E;;AACvH;;AAAqC;;AAAS;;AAAQ;;AACtD;;AAAuD;;AAAI;;AAC/D;;AACF;;AACA;;AACF;;;;AAL6C;;AAAA;;;;;;;;;sEDtChCA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACThB,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;AER9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASagB,e;AAIX,iCAAc;AAAA;AAAG;;;;mCAET;AACN;AACA,eAAKD,KAAL,GAAaP,YAAY,CAACI,OAAb,CAAqB,OAArB,CAAb;AACD;;;;;;;uBATUI,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,otB;AAAA;AAAA;ACT5B;;AACA;;AACC;;AAA+C;;AAAI;;AACpD;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAO;;AAAkB;;AAC3B;;AACA;;AACE;;AACE;;AAAsG;;AAAU;;AAChH;;AAAsG;;AAAU;;AAClH;;AACF;;AACH;;AAEA;;AACC;;AACE;;AAAO;;AAA+C;;AACxD;;AACA;;AACE;;AAEF;;AACA;;AACE;;AAAiE;;AAAe;;AAClF;;AACF;;AAEA;;AACE;;AACE;;AAAgB;;AAAc;;AAChC;;AACA;;AACG;;AACC;;AAAa;;AAAM;;AAAQ;;AAAI;;AAA6D;;AAC5F;;AAAa;;AAAmB;;AAAQ;;AAAI;;AAA2E;;AACvH;;AAAqC;;AAAS;;AAAQ;;AACtD;;AAAuD;;AAAI;;AAC/D;;AACF;;AACA;;AACF;;;;AAL6C;;AAAA;;;;;;;;;sED9BhCA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTlB,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AET5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaiB,c;AAEX,gCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,c;AAAc,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,qnB;AAAA;AAAA;ACP3B;;AAEI;;AACE;;AACE;;AAAiB;;AAA8C;;AAAO;;AAAI;;AAC1E;;AAAiB;;AAA6C;;AAAK;;AAAI;;AACzE;;AACF;;AACJ;;AAEA;;AACA;;AACQ;;AAAuB;;AAAQ;;AAAsC;;AAAS;;AAC9E;;AAAI;;AAAkE;;AAC1E;;AACI;;AACI;;AACI;;AACA;;AACA;;AACI;;AAA0B;;AAAiB;;AAC3C;;AAAwB;;AAA4F;;AACxH;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACA;;AACA;;AACI;;AAA0B;;AAAkB;;AAC5C;;AAAwB;;AAA6F;;AACzH;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACA;;AACA;;AACI;;AAA0B;;AAAe;;AACzC;;AAAwB;;AAA0F;;AACtH;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;;sEDzCaA,c,EAAc;cAL1B,uDAK0B;eALhB;AACTnB,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;AEP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACegC;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAFR;;AACI;;AAGJ;;;;;;;;AAHqC;;AAAA;;;;;;AAcjC;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAFR;;AACI;;AAGJ;;;;;;;;AAHqC;;AAAA;;;;QDjBpDkB,c;AAKX,8BAAoBC,WAApB,EAAsDC,GAAtD,EAA+Eb,MAA/E,EAA+F;AAAA;;AAA3E,aAAAY,WAAA,GAAAA,WAAA;AAAkC,aAAAC,GAAA,GAAAA,GAAA;AAAyB,aAAAb,MAAA,GAAAA,MAAA,CAAgB,CA2C/F;;AACA,aAAAc,cAAA,GAAiB;AACf,mBAAS,CACP;AAAEC,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WADO,EAEP;AAAED,gBAAI,EAAE,OAAR;AAAiBC,mBAAO,EAAE;AAA1B,WAFO,CADM;AAKf,sBAAY,CACV;AAAED,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WADU,EAEV;AAAED,gBAAI,EAAE,WAAR;AAAqBC,mBAAO,EAAE;AAA9B,WAFU;AALG,SAAjB;AA5CiG,O,CACjG;;;;;kCACUC,W,EAAiB;AAAA;;AACzB,eAAKC,SAAL,GAAiB,EAAjB;;AACA,cAAGD,WAAW,KAAK,IAAnB,EAAwB;AACtB,iBAAKE,UAAL,GAAkB;AAChB,0BAAWF,WAAW,CAACG,KADP;AAEhB,0BAAWH,WAAW,CAACI;AAFP,aAAlB;AAKA,iBAAKR,GAAL,CAASS,SAAT,CAAmB,KAAKH,UAAxB,EAAoCI,SAApC,CACE,UAAAC,IAAI,EAAI;AAAEC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;AACRvB,0BAAY,CAACC,UAAb,CAAwB,MAAxB;AACAD,0BAAY,CAAC0B,OAAb,CAAqB,MAArB,EAA6BH,IAAI,CAAC,MAAD,CAAjC;AACAvB,0BAAY,CAACC,UAAb,CAAwB,OAAxB;AACAD,0BAAY,CAAC0B,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAAC,OAAD,CAAlC,EAJM,CAMN;;AACAvB,0BAAY,CAACC,UAAb,CAAwB,IAAxB;AACAD,0BAAY,CAAC0B,OAAb,CAAqB,IAArB,EAA2BH,IAAI,CAAC,IAAD,CAA/B;AACA,mBAAI,CAACN,SAAL,GAAiB,EAAjB;;AACF,mBAAI,CAAClB,MAAL,CAAYG,QAAZ,CAAqB,CAAC,UAAD,CAArB,EAVQ,CAYR;AACA;AACA;;;AAEAyB,wBAAU,CAAC,YAAI;AACb3B,4BAAY,CAACC,UAAb,CAAwB,OAAxB;;AACA,qBAAI,CAACF,MAAL,CAAYG,QAAZ,CAAqB,CAAC,OAAD,CAArB;;AACA0B,qBAAK,CAAC,uCAAD,CAAL;AACD,eAJS,EAIR,OAJQ,CAAV;AAKD,aAtBD,EAuBE,UAAAC,KAAK,EAAI;AACPL,qBAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCI,KAAK,CAACA,KAAtC;;AACA,kBAAGA,KAAK,CAACC,MAAN,IAAgB,GAAnB,EAAuB;AACrB,qBAAI,CAACb,SAAL,GAAiBY,KAAK,CAACA,KAAvB;AACD;AACF,aA5BH;AA6BD;AAEF;;;mCAcU;AACT,eAAKE,SAAL,GAAiB,KAAKpB,WAAL,CAAiBqB,KAAjB,CAAuB;AACtCb,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWc,QAAZ,EAAsB,0DAAWd,KAAjC,CAAL,CAD+B;AAEtCC,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWa,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,CAAL;AAF4B,WAAvB,CAAjB;AAKD;;;;;;;uBAlEUxB,c,EAAc,2H,EAAA,wI,EAAA,uH;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,qwB;AAAA;AAAA;ACZ3B;;AACI;;AACI;;AAA0B;;AACtB;;AACI;;AAAI;;AAAK;;AACb;;AACA;;AACI;;AAA8B;AAAA,mBAAY,IAAAW,SAAA,qBAAZ;AAAsC,WAAtC;;AAC1B;;AACA;;AACI;;AAAW;;AAAgB;;AAC3B;;AACJ;;AACI;;AACI;;AAKJ;;AACJ;;AAEA;;AACA;;AACI;;AAAW;;AAAmB;;AAC9B;;AACJ;;AACI;;AACI;;AAKA;;AAAqB;;AAAa;;AACtC;;AACJ;;AACA;;AAA4F;;AAAK;;AACjG;;AAA+D;;AAAM;;AACzE;;AACJ;;AACA;;AACI;;AAA4C;;AAAe;;AAC/D;;AACJ;;AACJ;;AACJ;;AACC;;;;AAvCqB;;AAAA;;AAOoB;;AAAA;;AAcA;;AAAA;;AAKO;;AAAA;;AAGW;;AAAA;;;;;;;;;sEDxB/CX,c,EAAc;cAN1B,uDAM0B;eANhB;AACTpB,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAMgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACWc;;AAAuD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AAAK;;;;;;;;AACvF;;AAAsD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAY;;;;;;AAPvG;;AACE;;AACA;;AACE;;AAAgB;;AAAQ;;AAAe;;AAAS;;AAEhD;;AACE;;AACA;;AACF;;AACJ;;;;;;AAP6B;;AAAA;;AACD;;AAAA;;AAGd;;AAAA;;AACA;;AAAA;;;;;;AAVtB;;AACI;;AAAuB;;AAAU;;AACjC;;AACI;;AAUJ;;AACJ;;;;;;AAXkC;;AAAA;;;;;;AAchC;;AACE;;AAAmB;;AAA8C;;AACnE;;;;;;AAEA;;;;QDZW2C,uB;AAaX,uCAAoBvB,GAApB,EAA6Cb,MAA7C,EAA6D;AAAA;;AAAzC,aAAAa,GAAA,GAAAA,GAAA;AAAyB,aAAAb,MAAA,GAAAA,MAAA;AAH7C,aAAAqC,IAAA,GAAgB,KAAhB;AAGgE;;;;yCAElD;AAAA;;AACZ,eAAKxB,GAAL,CAASyB,gBAAT,CAA0B,KAAKrB,WAA/B,EAA4CM,SAA5C,CAAuD,UAAAC,IAAI,EAAI;AAC7D,kBAAI,CAACe,cAAL,GAAsBf,IAAtB;;AACA,gBAAIA,IAAI,CAAC,CAAD,CAAJ,IAAS,IAAb,EACA;AACE,oBAAI,CAACgB,IAAL,GAAY,IAAZ;AACD;;AACD,kBAAI,CAACC,IAAL,GAAY,KAAZ;AACD,WAPD;AAQD;;;8BAEKjB,I,EAAS;AACb,eAAKkB,MAAL,GAAc;AACZ,wBAAYlB;AADA,WAAd;;AAGA,cAAG,KAAKX,GAAL,CAAS8B,WAAT,CAAqB,KAAKD,MAA1B,EAAkCnB,SAAlC,EAAH,EAAiD;AAC7CM,iBAAK,CAAC,eAAD,CAAL;AACH;;AACDe,kBAAQ,CAACC,MAAT;AACD;;;kCAESrB,I,EAAS;AACjB,eAAKkB,MAAL,GAAc;AACZ,wBAAYlB;AADA,WAAd;;AAGA,cAAG,KAAKX,GAAL,CAASiC,iBAAT,CAA2B,KAAKJ,MAAhC,EAAwCnB,SAAxC,EAAH,EAAuD;AACnDM,iBAAK,CAAC,qBAAD,CAAL;AACH;;AACDe,kBAAQ,CAACC,MAAT;AACD;;;mCAEO;AAEN,cAAG,CAAC5C,YAAY,CAACI,OAAb,CAAqB,OAArB,CAAJ,EAAkC;AAChC,iBAAKL,MAAL,CAAYG,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACA0B,iBAAK,CAAC,uBAAD,CAAL;AACD;;AAED,eAAKZ,WAAL,GAAmB;AACjB,qBAAShB,YAAY,CAACI,OAAb,CAAqB,OAArB;AADQ,WAAnB;AAGA,eAAKoC,IAAL,GAAY,IAAZ;AACA,eAAKD,IAAL,GAAY,KAAZ;AAEA,eAAKO,cAAL;AACD;;;;;;;uBA5DUX,uB,EAAuB,wI,EAAA,uH;AAAA,K;;;YAAvBA,uB;AAAuB,0C;AAAA,c;AAAA,a;AAAA,wjB;AAAA;AAAA;ACXpC;;AACA;;AACA;;AAeA;;AAEE;;AAGF;;AACE;;AACF;;;;AAtB6B;;AAAA;;AAiBtB;;AAAA;;AAIQ;;AAAA;;;;;;;;;sEDZFA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACT7C,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEXpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACKQ;;AACE;;AACA;;AACE;;AAAgB;;AAAQ;;AAAqB;;AAAS;;AACtD;;AAAmB;;AAA2B;;AAC9C;;AACI;;AAAgC;;AAAK;;AACrC;;AAAgC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwC;;AAAa;;AACzF;;AACJ;;;;;;AAP6B;;AAAA;;AACD;;AAAA;;AACL;;AAAA;;;;;;AAP/B;;AACI;;AAAuB;;AAAU;;AACjC;;AACI;;AAUJ;;AACJ;;;;;;AAXkC;;AAAA;;;;;;AAclC;;AACI;;AAAI;;AAA2C;;AACnD;;;;;;AAEA;;;;QDVauD,uB;AAYX,uCAAoBnC,GAApB,EAA6Cb,MAA7C,EAAqEiD,MAArE,EAAwF;AAAA;;AAApE,aAAApC,GAAA,GAAAA,GAAA;AAAyB,aAAAb,MAAA,GAAAA,MAAA;AAAwB,aAAAiD,MAAA,GAAAA,MAAA;AAAsB;;;;+CAEvE;AAAA;;AAClB,eAAKC,eAAL,GAAuB,IAAvB;AACA,eAAKrC,GAAL,CAASsC,sBAAT,CAAgC,KAAKlC,WAArC,EAAkDM,SAAlD,CAA6D,UAAAC,IAAI,EAAI;AACnE,kBAAI,CAAC0B,eAAL,GAAuB1B,IAAvB;AACA,kBAAI,CAACiB,IAAL,GAAY,KAAZ;AACA,kBAAI,CAACD,IAAL,GAAY,IAAZ;AACD,WAJD;AAMD;;;kCAEShB,I,EAAS;AACjB,eAAK4B,OAAL,GAAe5B,IAAf,CADiB,CAEjB;AACA;AACA;AACD;;;yCAEa;AAAA;;AACZ,eAAK6B,aAAL,GAAqB,KAAKJ,MAAL,CAAYK,IAAZ,CAAiB,sFAAjB,CAArB;AAEA,eAAKD,aAAL,CAAmBE,WAAnB,GAAiChC,SAAjC,CAA4C,UAAAiC,MAAM,EAAI;AACpD,gBAAIA,MAAM,IAAI,EAAd,EAAiB;AAEf,oBAAI,CAACC,WAAL,GAAmB;AACnB;AACE,4BAAW,MAAI,CAACL,OAFC;AAGjB,0BAASI,MAHQ;AAIjB,yBAASvD,YAAY,CAACI,OAAb,CAAqB,OAArB;AAJQ,eAAnB;AAOAoB,qBAAO,CAACC,GAAR,CAAY,MAAI,CAAC+B,WAAjB;;AAEA,kBAAG,MAAI,CAAC5C,GAAL,CAAS6C,qBAAT,CAA+B,MAAI,CAACD,WAApC,EAAiDlC,SAAjD,EAAH,EACA;AACEM,qBAAK,CAAC,cAAD,CAAL;AACD;;AAEDe,sBAAQ,CAACC,MAAT;AACD;AAEF,WApBD;AAqBD;;;qCAEYc,K,EAAU;AACrB,eAAKC,SAAL,CAAeD,KAAf;AACA,eAAKE,cAAL;AACD;;;mCAEO;AAEN,cAAG,CAAC5D,YAAY,CAACI,OAAb,CAAqB,OAArB,CAAJ,EAAkC;AAChC,iBAAKL,MAAL,CAAYG,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACA0B,iBAAK,CAAC,uBAAD,CAAL;AACD;;AAED,eAAKZ,WAAL,GAAmB;AACjB,qBAAShB,YAAY,CAACI,OAAb,CAAqB,OAArB;AADQ,WAAnB;AAIA,eAAKoC,IAAL,GAAY,IAAZ;AACA,eAAKD,IAAL,GAAY,KAAZ;AAEA,eAAKsB,oBAAL;AACD;;;;;;;uBA7EUd,uB,EAAuB,wI,EAAA,uH,EAAA,mI;AAAA,K;;;YAAvBA,uB;AAAuB,0C;AAAA,c;AAAA,a;AAAA,6iB;AAAA;AAAA;ACbpC;;AACA;;AACA;;AAeA;;AAEA;;AAGA;;AACA;;AACA;;;;AAtB6B;;AAAA;;AAiBV;;AAAA;;AAIN;;AAAA;;;;;;;;;sEDVAA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACTzD,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEbpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC2BwB;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAFR;;AACI;;AAGJ;;;;;;;;AAHqC;;AAAA;;;;;;AAcjC;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAFR;;AACI;;AAGJ;;;;;;;;AAHqC;;AAAA;;;;;;;;AArBjD;;AACI;;AAAmC;AAAA;;AAAA;;AAAA;AAAA;;AAC/B;;AACI;;AAA2E;AAAA;;AAAA;;AAAA;AAAA;;AAA3E;;AACJ;;AACA;;AACI;;AAKJ;;AACA;;AAAyF;;AAAI;;AACjG;;AAEA;;AAAuC;AAAA;;AAAA;;AAAA;AAAA;;AACnC;;AACI;;AAAmF;AAAA;;AAAA;;AAAA;AAAA;;AAAnF;;AACJ;;AACA;;AACI;;AAKJ;;AACA;;AAA4F;;AAAI;;AACpG;;AACJ;;;;;;AA3BU;;AAAA;;AAE0C;;AAAA;;AAG1B;;AAAA;;AAMsB;;AAAA;;AAGtC;;AAAA;;AAE8C;;AAAA;;AAG9B;;AAAA;;AAMsB;;AAAA;;;;QDpC3CsE,gB;AASX,gCAAoBlD,GAApB,EAA6CD,WAA7C,EAA+EZ,MAA/E,EAA+F;AAAA;;AAA3E,aAAAa,GAAA,GAAAA,GAAA;AAAyB,aAAAD,WAAA,GAAAA,WAAA;AAAkC,aAAAZ,MAAA,GAAAA,MAAA;AAkC/E,aAAAc,cAAA,GAAiB;AACf,sBAAY,CACV;AAAEC,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WADU,EAEV;AAAED,gBAAI,EAAE,OAAR;AAAiBC,mBAAO,EAAE;AAA1B,WAFU,CADG;AAKf,kBAAQ,CACN;AAAED,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WADM,EAEN;AAAED,gBAAI,EAAE,SAAR;AAAmBC,mBAAO,EAAE;AAA5B,WAFM;AALO,SAAjB;AAlCkG;;;;qCAExF;AAAA;;AACR,eAAKC,WAAL,GAAmB,IAAnB;;AACE,cAAG,KAAK+C,gBAAL,IAAyBC,SAA5B,EAAsC;AACtC,iBAAKhD,WAAL,GAAmB;AACjB,uBAAShB,YAAY,CAACI,OAAb,CAAqB,OAArB,CADQ;AAEjB,sBAAQ,KAAK2D;AAFI,aAAnB;AAIA/D,wBAAY,CAACC,UAAb,CAAwB,MAAxB;AACAD,wBAAY,CAAC0B,OAAb,CAAqB,MAArB,EAA6B,KAAKV,WAAL,CAAiB,MAAjB,CAA7B;AACA,iBAAKJ,GAAL,CAASqD,UAAT,CAAoB,KAAKjD,WAAzB,EAAsCM,SAAtC,CAAiD,UAAAC,IAAI,EAAI;AACvD,oBAAI,CAAC2C,iBAAL,CAAuB,MAAvB,IAAiC3C,IAAI,CAAC,MAAD,CAArC;AACD,aAFD;AAGAK,iBAAK,CAAC,cAAD,CAAL;AACD,WAXC,MAYE;AAAEJ,mBAAO,CAACC,GAAR,CAAY,mBAAZ;AAAkC;;AACxCkB,kBAAQ,CAACC,MAAT;AACD;;;yCAEa;AAAA;;AACZ,eAAK5B,WAAL,GAAmB,IAAnB;;AACA,cAAG,KAAKmD,oBAAL,IAA6BH,SAAhC,EAA0C;AAC1C,iBAAKhD,WAAL,GAAmB;AACjB,uBAAShB,YAAY,CAACI,OAAb,CAAqB,OAArB,CADQ;AAEjB,0BAAY,KAAK+D;AAFA,aAAnB;AAIA,iBAAKvD,GAAL,CAASwD,cAAT,CAAwB,KAAKpD,WAA7B,EAA0CM,SAA1C,CAAqD,UAAAC,IAAI,EAAI;AAC3D,oBAAI,CAAC2C,iBAAL,CAAuB,UAAvB,IAAqC3C,IAAI,CAAC,UAAD,CAAzC;AACD,aAFD;AAGD,WARC,MASE;AAACC,mBAAO,CAACC,GAAR,CAAY,mBAAZ;AAAiC;AACrC;;;mCAaO;AAAA;;AAEN,cAAG,CAACzB,YAAY,CAACI,OAAb,CAAqB,OAArB,CAAJ,EAAkC;AAChC,iBAAKL,MAAL,CAAYG,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACA0B,iBAAK,CAAC,uBAAD,CAAL;AACD;;AAED,eAAKZ,WAAL,GAAmB;AACjB,qBAAShB,YAAY,CAACI,OAAb,CAAqB,OAArB;AADQ,WAAnB;AAIA,eAAKQ,GAAL,CAASyD,OAAT,CAAiB,KAAKrD,WAAtB,EAAmCM,SAAnC,CAA8C,UAAAC,IAAI,EAAI;AACpD,kBAAI,CAAC2C,iBAAL,GAAyB3C,IAAzB;AAEA,kBAAI,CAAC+C,cAAL,GAAsB,MAAI,CAAC3D,WAAL,CAAiBqB,KAAjB,CAAuB;AAC3C7B,kBAAI,EAAE,CAACoB,IAAI,CAAC,MAAD,CAAL,EAAe,CAAC,0DAAWU,QAAZ,EAAsB,0DAAWsC,OAAX,CAAmB,YAAnB,CAAtB,CAAf;AADqC,aAAvB,CAAtB;AAIA,kBAAI,CAACC,kBAAL,GAA0B,MAAI,CAAC7D,WAAL,CAAiBqB,KAAjB,CAAuB;AAC/CyC,sBAAQ,EAAE,CAAClD,IAAI,CAAC,UAAD,CAAL,EAAmB,CAAC,0DAAWU,QAAZ,EAAsB,0DAAWd,KAAjC,CAAnB;AADqC,aAAvB,CAA1B;AAGD,WAVD;AAWD;;;;;;;uBA5EU2C,gB,EAAgB,wI,EAAA,2H,EAAA,uH;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,e;AAAA,a;AAAA,6hB;AAAA;AAAA;ACV7B;;AAIA;;AACI;;AACA;;AACI;;AACI;;AAAI;;AAAO;;AACf;;AACA;;AACA;;AAAK;;AAAL;;AACA;;AACJ;;AAEA;;AACI;;AACI;;AAAI;;AAAY;;AACpB;;AACA;;AACA;;AA6BA;;AACJ;;AA7CA;;AADJ;;;;AAgBa;;AAAA;;;;;;;;;sEDVAA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTxE,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEV7B;AAAA;;;AAAA;AAAA;AAAA;;QAAakF,U;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,S;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACQE;;;;;;;;AAoBY;;AAA0D;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAkC;;AAAI;;;;;;AAftG;;AACE;;AAEA;;AACE;;AACE;;AACC;;AAAyC;;AAAQ;;AAAW;;AAAU;;AAAkB;;AACvF;;AAAyC;;AAAQ;;AAAW;;AAAU;;AAAkB;;AACxF;;AAAyC;;AAAQ;;AAAY;;AAAU;;AAAsB;;AAC/F;;AACF;;AACA;;AAAgB;;AAAQ;;AAAe;;AAAS;;AAChD;;AAAmB;;AAA2B;;AAC9C;;AACE;;AAAgC;;AAAK;;AACrC;;AACF;;AACJ;;;;;;AAd6B;;AAAA;;AAGgD;;AAAA;;AACC;;AAAA;;AACC;;AAAA;;AAGnD;;AAAA;;AACL;;AAAA;;AAGT;;AAAA;;;;;;AAjBtB;;AACI;;AACI;;AAkBJ;;AACJ;;;;;;AAnBmC;;AAAA;;;;QDKtBC,gB;AAmBX,gCAAoBhE,GAApB,EAA6CiE,GAA7C,EAA6E7B,MAA7E,EAAwGjD,MAAxG,EAAwH;AAAA;;AAApG,aAAAa,GAAA,GAAAA,GAAA;AAAyB,aAAAiE,GAAA,GAAAA,GAAA;AAAgC,aAAA7B,MAAA,GAAAA,MAAA;AAA2B,aAAAjD,MAAA,GAAAA,MAAA;AAjBxG,aAAA+E,gBAAA,GAA6B,CAAC,IAAD,EAAM,MAAN,EAAa,aAAb,EAA2B,SAA3B,EAAqC,QAArC,EAA8C,SAA9C,EAAwD,YAAxD,EAAqE,OAArE,CAA7B;AAEA,aAAAC,OAAA,GAA4B,EAA5B;AAEA,aAAAC,OAAA,GAA6B,EAA7B;AAcC;;;;iCAEQC,W,EAAgB;AAAA;;AAEvB,eAAKD,OAAL,CAAaE,MAAb,GAAsB,CAAtB;AACA,eAAKtE,GAAL,CAASuE,mBAAT,GAA+B7D,SAA/B,CACE,UAAAC,IAAI,EAAG;AACL,iBAAI,IAAI6D,CAAC,GAAC,CAAV,EAAa7D,IAAI,CAAC6D,CAAD,CAAJ,IAAU,IAAvB,EAA6BA,CAAC,EAA9B,EAAiC;AAC/B,kBAAIC,SAAS,GAAG,IAAI,sDAAJ,EAAhB;AACAA,uBAAS,CAAC1G,EAAV,GAAe4C,IAAI,CAAC6D,CAAD,CAAJ,CAAQzG,EAAvB;AACA0G,uBAAS,CAACC,MAAV,GAAmB/D,IAAI,CAAC6D,CAAD,CAAJ,CAAQE,MAA3B;AACAD,uBAAS,CAACE,QAAV,GAAqBhE,IAAI,CAAC6D,CAAD,CAAJ,CAAQG,QAA7B;;AACA,oBAAI,CAACP,OAAL,CAAaQ,IAAb,CAAkBH,SAAlB;AACD;AACF,WATH,EAUE,UAAAxD,KAAK,EAAI;AACPL,mBAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCI,KAAK,CAACA,KAAtC;AACD,WAZH;;AAeA,cAAIoD,WAAW,IAAI,IAAnB,EACA;AACE,iBAAKQ,UAAL,CAAgBR,WAAhB;AACD,WAHD,MAKA;AACE,iBAAKrE,GAAL,CAAS8E,aAAT,GAAyBpE,SAAzB,CACE,UAAAC,IAAI,EAAI;AACN,oBAAI,CAACkE,UAAL,CAAgBlE,IAAhB;AACH,aAHD,EAIE,UAAAM,KAAK,EAAI;AACPL,qBAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCI,KAAK,CAACA,KAAtC;AACD,aANH;AAOD;AAEF;;;oCAEW8D,W,EAAgB;AAAA;;AAC1B,cAAGA,WAAW,IAAI3B,SAAlB,EAA4B;AAC1B,iBAAKpD,GAAL,CAASgF,kBAAT,CAA4BD,WAA5B,EAAyCrE,SAAzC,CAAoD,UAAAC,IAAI,EAAI;AAC1D,kBAAIsE,cAAc,GAAGC,MAAM,CAACtH,IAAP,CAAY+C,IAAZ,EAAkB2D,MAAvC;;AACA,kBAAGW,cAAc,IAAI,CAArB,EACA;AACEjE,qBAAK,CAAC,gCAAD,CAAL;AACAJ,uBAAO,CAACC,GAAR,CAAY,gCAAZ;AACD,eAJD,MAKI;AACF;AACAD,uBAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,sBAAI,CAACwE,QAAL,CAAcxE,IAAd;AACD;AACF,aAZD;AAaD;AACF;;;mCAEUA,I,EAAS;AAClB,eAAKwD,OAAL,CAAaG,MAAb,GAAsB,CAAtB;;AACA,eAAI,IAAIE,CAAC,GAAC,CAAV,EAAa7D,IAAI,CAAC6D,CAAD,CAAJ,IAAS,IAAtB,EAA4BA,CAAC,EAA7B,EACA;AACE,gBAAIY,SAAS,GAAG,IAAI,oDAAJ,EAAhB;AACAA,qBAAS,CAACrH,EAAV,GAAe4C,IAAI,CAAC6D,CAAD,CAAJ,CAAQzG,EAAvB;AACAqH,qBAAS,CAAC7F,IAAV,GAAiBoB,IAAI,CAAC6D,CAAD,CAAJ,CAAQjF,IAAzB;AACA6F,qBAAS,CAACC,WAAV,GAAwB1E,IAAI,CAAC6D,CAAD,CAAJ,CAAQa,WAAhC;AACAD,qBAAS,CAACE,OAAV,GAAoB3E,IAAI,CAAC6D,CAAD,CAAJ,CAAQc,OAA5B;AACAF,qBAAS,CAACG,OAAV,GAAoB5E,IAAI,CAAC6D,CAAD,CAAJ,CAAQgB,SAA5B;AACAJ,qBAAS,CAACK,KAAV,GAAkB9E,IAAI,CAAC6D,CAAD,CAAJ,CAAQiB,KAA1B;;AACA,gBAAIL,SAAS,CAACE,OAAV,IAAoB,KAAKlF,WAAL,CAAiB,MAAjB,CAAxB,EACA;AACEgF,uBAAS,CAACM,UAAV,GAAuB,KAAvB;AACD,aAHD,MAKA;AACEN,uBAAS,CAACM,UAAV,GAAuB,IAAvB;AACD;;AAED,gBAAIC,CAAC,GAAG,CAAR;AACA,gBAAIC,KAAK,GAAG,CAAZ;;AAEA,iBAAK,IAAIC,CAAC,GAAC,CAAX,EAAc,KAAKzB,OAAL,CAAayB,CAAb,KAAiB,IAA/B,EAAqCA,CAAC,EAAtC,EAAyC;AACvC,kBAAI,KAAKzB,OAAL,CAAayB,CAAb,EAAgBlB,QAAhB,IAA4BhE,IAAI,CAAC6D,CAAD,CAAJ,CAAQzG,EAAxC,EACA;AACE;AACA6C,uBAAO,CAACC,GAAR,CAAY,KAAKuD,OAAL,CAAayB,CAAb,CAAZ;AACAD,qBAAK,GAAGA,KAAK,GAAG,KAAKxB,OAAL,CAAayB,CAAb,EAAgBnB,MAAhC;AACAiB,iBAAC,GAAGA,CAAC,GAAC,CAAN;AACD;AACF;;AAED,gBAAIA,CAAC,IAAI,CAAT,EAAW;AACTP,uBAAS,CAACV,MAAV,GAAoB,CAAD,EAAIoB,QAAJ,EAAnB;AACD,aAFD,MAGI;AACFV,uBAAS,CAACV,MAAV,GAAmB,CAACkB,KAAK,GAACD,CAAP,EAAUI,OAAV,CAAkB,CAAlB,CAAnB;AACD;;AACD,iBAAK5B,OAAL,CAAaS,IAAb,CAAkBQ,SAAlB;AACD;;AAED,eAAKY,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,KAAK7B,OAA5B,CAAlB;AAEA,eAAK8B,aAAL,GAAqB,IAArB;AACA,eAAKrE,IAAL,GAAW,KAAX;AAED;;;oCAEWsE,W,EAAqB;AAC/B,eAAKF,UAAL,CAAgBG,eAAhB,GAAkC,UAASxF,IAAT,EAAeyF,MAAf,EAA6B;AAC7D,mBAAOzF,IAAI,CAACpB,IAAL,CAAU8G,WAAV,GAAwBC,QAAxB,CAAiCF,MAAjC,CAAP;AACD,WAFD;;AAGA,eAAKJ,UAAL,CAAgBI,MAAhB,GAAyBF,WAAW,CAACK,IAAZ,GAAmBF,WAAnB,EAAzB;AACD;;;kCAES1F,I,EAAS;AACjB,eAAK4B,OAAL,GAAe5B,IAAf,CADiB,CAEjB;AACA;AACA;AACD;;;yCAEa;AAAA;;AACZ,eAAK6B,aAAL,GAAqB,KAAKJ,MAAL,CAAYK,IAAZ,CAAiB,sFAAjB,CAArB;AAEA,eAAKD,aAAL,CAAmBE,WAAnB,GAAiChC,SAAjC,CAA4C,UAAAiC,MAAM,EAAI;AACpD;AACA;AACA;AAEA,gBAAIA,MAAM,IAAI,EAAd,EAAiB;AAEf,qBAAI,CAACC,WAAL,GAAmB;AACnB;AACE,4BAAW,OAAI,CAACL,OAFC;AAGjB,0BAASI,MAHQ;AAIjB,yBAASvD,YAAY,CAACI,OAAb,CAAqB,OAArB;AAJQ,eAAnB;AAOAoB,qBAAO,CAACC,GAAR,CAAY,OAAI,CAAC+B,WAAjB;;AAEA,kBAAG,OAAI,CAAC5C,GAAL,CAAS6C,qBAAT,CAA+B,OAAI,CAACD,WAApC,EAAiDlC,SAAjD,EAAH,EACA;AACEM,qBAAK,CAAC,cAAD,CAAL;AACD;;AAEDe,sBAAQ,CAACC,MAAT;AACD;AAEF,WAxBD;AAyBD;;;qCAEYc,K,EAAU;AACrB,eAAKC,SAAL,CAAeD,KAAf;AACA,eAAKE,cAAL;AACD;;;iCAEK;AACJ,eAAKmC,QAAL,CAAc,IAAd;AACD;;;mCAEO;AAAA;;AACN,eAAKvD,IAAL,GAAU,IAAV;AACA,eAAKqE,aAAL,GAAqB,KAArB;;AACA,cAAG,CAAC7G,YAAY,CAACI,OAAb,CAAqB,OAArB,CAAJ,EAAkC;AAChC,iBAAKL,MAAL,CAAYG,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACA0B,iBAAK,CAAC,uBAAD,CAAL;AACD;;AAED,eAAKZ,WAAL,GAAmB;AACjB,qBAAShB,YAAY,CAACI,OAAb,CAAqB,OAArB;AADQ,WAAnB;AAIA,eAAKQ,GAAL,CAASyD,OAAT,CAAiB,KAAKrD,WAAtB,EAAmCM,SAAnC,CAA8C,UAAAC,IAAI,EAAI;AACpDC,mBAAO,CAACC,GAAR,CAAYF,IAAI,CAAC,MAAD,CAAhB;AACA,mBAAI,CAACP,WAAL,GAAmB;AACjB,uBAAShB,YAAY,CAACI,OAAb,CAAqB,OAArB,CADQ;AAEjB,sBAAQmB,IAAI,CAAC,MAAD;AAFK,aAAnB;AAID,WAND;AAQA,eAAKwE,QAAL,CAAc,IAAd;AAED;;;;;;;uBAvMUnB,gB,EAAgB,wI,EAAA,gI,EAAA,mI,EAAA,uH;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,e;AAAA,a;AAAA,6sB;AAAA;AAAA;AClB7B;;AACA;;AACA;;AACI;;AAAW;;AAAM;;AACjB;;AAAgB;AAAA,mBAAS,IAAAwC,WAAA,qBAAT;AAAyC,WAAzC;;AAAhB;;AACJ;;AACA;;AAAiC;AAAA,mBAAS,IAAAxE,MAAA,EAAT;AAAiB,WAAjB;;AAAmB;;AAAqB;;AACzE;;AACE;;AACF;;AAEA;;AAsBA;;;;AAzBe;;AAAA;;AAGc;;AAAA;;;;;;;;;sEDOhBgC,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTtF,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACegC;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAFR;;AACI;;AAGJ;;;;;;;;AAHqC;;AAAA;;;;;;AAcjC;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAFR;;AACI;;AAGJ;;;;;;;;AAHqC;;AAAA;;;;;;AAc7B;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAFR;;AACI;;AAGJ;;;;;;;;AAHqC;;AAAA;;;;QDhCxD6H,sB;AAMX,sCAAoB1G,WAApB,EAAsDC,GAAtD,EAA+Eb,MAA/E,EAA6F;AAAA;;AAAzE,aAAAY,WAAA,GAAAA,WAAA;AAAkC,aAAAC,GAAA,GAAAA,GAAA;AAAyB,aAAAb,MAAA,GAAAA,MAAA,CAAc,CA+B7F;;AACA,aAAAc,cAAA,GAAiB;AACf,mBAAS,CACP;AAAEC,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WADO,EAEP;AAAED,gBAAI,EAAE,OAAR;AAAiBC,mBAAO,EAAE;AAA1B,WAFO,CADM;AAKf,sBAAY,CACV;AAAED,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WADU,EAEV;AAAED,gBAAI,EAAE,WAAR;AAAqBC,mBAAO,EAAE;AAA9B,WAFU,CALG;AASf,6BAAmB,CACjB;AAAED,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WADiB,EAEjB;AAAED,gBAAI,EAAE,WAAR;AAAqBC,mBAAO,EAAE;AAA9B,WAFiB;AATJ,SAAjB;AAhCkG,O,CAElG;;;;;sCACcC,W,EAAiB;AAAA;;AAC7B,eAAKsG,SAAL,GAAiB,EAAjB;AACA,eAAKrG,SAAL,GAAiB,EAAjB;;AACA,cAAG,KAAKsG,gBAAL,CAAsB,KAAKC,iBAAL,CAAuBC,QAAvB,CAAgC,UAAhC,EAA4CC,KAAlE,EAAyE,KAAKF,iBAAL,CAAuBC,QAAvB,CAAgC,iBAAhC,EAAmDC,KAA5H,KAAsI,IAAzI,EAA8I;AAC5I,iBAAKxG,UAAL,GAAkB;AAChB,0BAAYF,WAAW,CAACG,KADR;AAEhB,0BAAYH,WAAW,CAACI;AAFR,aAAlB;;AAIA,gBAAG,KAAKF,UAAL,IAAmB,IAAtB,EAA2B;AACzB,mBAAKN,GAAL,CAAS+G,aAAT,CAAuB,KAAKzG,UAA5B,EAAwCI,SAAxC,CACE,YAAM,CAAE,CADV,EAEE,UAAAO,KAAK,EAAI;AACP,oBAAGA,KAAK,CAACC,MAAN,IAAgB,GAAnB,EAAuB;AACrB,yBAAI,CAACb,SAAL,GAAiBY,KAAK,CAACA,KAAvB;AACD,iBAFD,MAIA;AACE,yBAAI,CAAC9B,MAAL,CAAYG,QAAZ,CAAqB,CAAC,eAAD,EAAkB;AAAEa,2BAAO,EAAE;AAAX,mBAAlB,CAArB;AACD;AACF,eAVH;AAWD;AACF,WAlBD,MAoBA;AACE,iBAAKE,SAAL,GAAiB,wBAAjB;AACD;AACF;;;mCAkBU;AAET,eAAKuG,iBAAL,GAAyB,KAAK7G,WAAL,CAAiBqB,KAAjB,CAAuB;AAC9Cb,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWc,QAAZ,EAAsB,0DAAWd,KAAjC,CAAL,CADuC;AAE9CC,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWa,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,CAAL,CAFoC;AAG9C0F,2BAAe,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW3F,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,CAAL;AAH6B,WAAvB,CAAzB;AAKD,S,CAED;;;;yCACiB2F,a,EAAuBC,c,EAAwB;AAC9D,cAAID,aAAa,KAAKC,cAAtB,EAAsC;AAClC,mBAAO,KAAP;AACH,WAFD,MAEO;AACL,mBAAO,IAAP;AACD;AACJ;;;;;;;uBArEYT,sB,EAAsB,2H,EAAA,wI,EAAA,uH;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA,e;AAAA,a;AAAA,4xB;AAAA;AAAA;ACXnC;;AACI;;AACI;;AACE;;AACI;;AAAI;;AAAc;;AACtB;;AACE;;AACI;;AAAsC;AAAA,mBAAY,IAAAM,aAAA,6BAAZ;AAAkD,WAAlD;;AAClC;;AACA;;AACI;;AAAW;;AAAgB;;AAC3B;;AACJ;;AACI;;AACI;;AAKJ;;AACJ;;AAEA;;AACA;;AACI;;AAAW;;AAAmB;;AAC9B;;AACJ;;AACI;;AACI;;AAKJ;;AACJ;;AAEA;;AACI;;AACI;;AAAW;;AAAgB;;AAC3B;;AACJ;;AACI;;AACI;;AAKA;;AAAqB;;AAAa;;AACtC;;AACR;;AAEA;;AAAoG;;AAAM;;AAC1G;;AAA+D;;AAAM;;AACzE;;AACJ;;AACJ;;AACJ;;AACJ;;;;AAlDsB;;AAAA;;AAOoB;;AAAA;;AAcA;;AAAA;;AAcI;;AAAA;;AAKO;;AAAA;;AAIO;;AAAA;;;;;;;;;sEDxC/CN,sB,EAAsB;cALlC,uDAKkC;eALxB;AACT/H,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEXnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASauI,qB;AAEX,qCAAoBC,KAApB,EAAmDjI,MAAnD,EAAiE;AAAA;;AAA7C,aAAAiI,KAAA,GAAAA,KAAA;AAA+B,aAAAjI,MAAA,GAAAA,MAAA;AAAmB;;;;mCAE3D;AAET,cAAIgB,OAAO,GAAG,KAAKiH,KAAL,CAAWC,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,SAAjC,CAAd;AACD;;;;;;;uBAPUJ,qB,EAAqB,+H,EAAA,uH;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,e;AAAA,a;AAAA,uQ;AAAA;AAAA;ACTlC;;AACI;;AACI;;AACI;;AACI;;AAAkC;;AAA2B;;AACjE;;AACA;;AACQ;;AAAG;;AAAY;;AACf;;AAA+D;;AAAK;;AAC5E;;AACJ;;AACJ;;AACJ;;;;;;;;;sEDHaA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTzI,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;AETlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACegC;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAFR;;AACI;;AAGJ;;;;;;;;AAHqC;;AAAA;;;;;;AAcjC;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAFR;;AACI;;AAGJ;;;;;;;;AAHqC;;AAAA;;;;;;AAcjC;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAFR;;AACI;;AAGJ;;;;;;;;AAHqC;;AAAA;;;;;;AAajC;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAFR;;AACI;;AAGJ;;;;;;;;AAHqC;;AAAA;;;;QD7CpD4I,e;AAKX,+BAAoBzH,WAApB,EAAsDC,GAAtD,EAA+Eb,MAA/E,EAA+F;AAAA;;AAA3E,aAAAY,WAAA,GAAAA,WAAA;AAAkC,aAAAC,GAAA,GAAAA,GAAA;AAAyB,aAAAb,MAAA,GAAAA,MAAA,CAAgB,CA8B/F;;AACA,aAAAc,cAAA,GAAiB;AACf,kBAAQ,CACN;AAAEC,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WADM,EAEN;AAAED,gBAAI,EAAE,SAAR;AAAmBC,mBAAO,EAAE;AAA5B,WAFM,CADO;AAKf,mBAAS,CACP;AAAED,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WADO,EAEP;AAAED,gBAAI,EAAE,OAAR;AAAiBC,mBAAO,EAAE;AAA1B,WAFO,CALM;AASf,sBAAY,CACV;AAAED,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WADU,EAEV;AAAED,gBAAI,EAAE,WAAR;AAAqBC,mBAAO,EAAE;AAA9B,WAFU,CATG;AAaf,6BAAmB,CACjB;AAAED,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WADiB,EAEjB;AAAED,gBAAI,EAAE,WAAR;AAAqBC,mBAAO,EAAE;AAA9B,WAFiB;AAbJ,SAAjB;AA/BiG,O,CAEjG;;;;;sCACcsH,U,EAAe;AAAA;;AAC3B,eAAKpH,SAAL,GAAiB,EAAjB;;AACA,cAAG,KAAKsG,gBAAL,CAAsB,KAAKe,UAAL,CAAgBb,QAAhB,CAAyB,UAAzB,EAAqCC,KAA3D,EAAkE,KAAKY,UAAL,CAAgBb,QAAhB,CAAyB,iBAAzB,EAA4CC,KAA9G,KAAwH,IAA3H,EAAgI;AAC9H,iBAAKa,OAAL,GAAe;AACb,sBAAQF,UAAU,CAAClI,IADN;AAEb,0BAAYkI,UAAU,CAAClH,KAFV;AAGb,0BAAYkH,UAAU,CAACjH;AAHV,aAAf;;AAKA,gBAAG,KAAKmH,OAAL,IAAgB,IAAnB,EAAwB;AACtB,mBAAK3H,GAAL,CAASyH,UAAT,CAAoB,KAAKE,OAAzB,EAAkCjH,SAAlC,CACE,UAAAC,IAAI,EAAI;AAACC,uBAAO,CAACC,GAAR,CAAYF,IAAZ;;AACL,uBAAI,CAACxB,MAAL,CAAYG,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD,eAHL,EAIE,UAAA2B,KAAK,EAAI;AACPL,uBAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCI,KAAK,CAACA,KAAtC;;AACA,oBAAGA,KAAK,CAACC,MAAN,IAAgB,GAAnB,EAAuB;AACrB,yBAAI,CAACb,SAAL,GAAiBY,KAAK,CAACA,KAAvB;AACD;AACF,eATH;AAUD;AACF,WAlBD,MAoBA;AACE,iBAAKZ,SAAL,GAAiB,wBAAjB;AACD;AACF;;;mCAsBU;AACT,eAAKqH,UAAL,GAAkB,KAAK3H,WAAL,CAAiBqB,KAAjB,CAAuB;AACvC7B,gBAAI,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW8B,QAAZ,EAAsB,0DAAWsC,OAAX,CAAmB,YAAnB,CAAtB,CAAL,CADiC;AAEvCpD,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWc,QAAZ,EAAsB,0DAAWd,KAAjC,CAAL,CAFgC;AAGvCC,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWa,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,CAAL,CAH6B;AAIvC0F,2BAAe,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW3F,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,CAAL;AAJsB,WAAvB,CAAlB;AAMD,S,CAED;;;;yCACiB2F,a,EAAuBC,c,EAAwB;AAC1D,cAAID,aAAa,KAAKC,cAAtB,EAAsC;AACpC;AACE,mBAAO,KAAP;AACH,WAHD,MAGO;AACL;AACA,mBAAO,IAAP;AACD;AACJ;;;;;;;uBAzEQM,e,EAAe,2H,EAAA,iI,EAAA,uH;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,q4B;AAAA;AAAA;ACX5B;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAO;;AACf;;AACA;;AACI;;AAA+B;AAAA,mBAAY,IAAAI,aAAA,sBAAZ;AAA2C,WAA3C;;AAC3B;;AACA;;AACI;;AAAW;;AAAoB;;AAC/B;;AACJ;;AACI;;AACI;;AAKJ;;AACJ;;AAEA;;AACA;;AACI;;AAAW;;AAAgB;;AAC3B;;AACJ;;AACI;;AACI;;AAKJ;;AACJ;;AAEA;;AACA;;AACI;;AAAW;;AAAmB;;AAC9B;;AACJ;;AACI;;AACI;;AAKJ;;AACJ;;AACA;;AACA;;AACI;;AAAW;;AAAgB;;AAC3B;;AACJ;;AACI;;AACI;;AAKA;;AAAqB;;AAAa;;AACtC;;AACJ;;AACA;;AAA4F;;AAAO;;AAEnG;;AAAqE;;AAAM;;AAC/E;;AACJ;;AACJ;;AACJ;;AACJ;;;;AA/DsB;;AAAA;;AAOoB;;AAAA;;AAcA;;AAAA;;AAcA;;AAAA;;AAaA;;AAAA;;AAKO;;AAAA;;AAGW;;AAAA;;;;;;;;;sEDpD/CJ,e,EAAe;cAL3B,uDAK2B;eALjB;AACT9I,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEX5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACQY;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAFR;;AACI;;AAGJ;;;;;;;;AAHqC;;AAAA;;;;QDChCiJ,mB;AAIX,mCAAoB9H,WAApB,EACU+H,SADV,EACwD;AAAA;;AADpC,aAAA/H,WAAA,GAAAA,WAAA;AACV,aAAA+H,SAAA,GAAAA,SAAA;AAER,aAAA7H,cAAA,GAAiB;AACf,oBAAU,CACR;AAAEC,gBAAI,EAAE,SAAR;AAAmBC,mBAAO,EAAE;AAA5B,WADQ;AADK,SAAjB;AAFyD;;;;mCAQnD;AACN,eAAK4H,IAAL,GAAY,KAAKhI,WAAL,CAAiBqB,KAAjB,CAAuB;AACjCsD,kBAAM,EAAE,CAAC,EAAD,EAAK,0DAAWf,OAAX,CAAmB,OAAnB,CAAL;AADyB,WAAvB,CAAZ;AAGD;;;+BAEMoE,I,EAAI;AACT,eAAKD,SAAL,CAAeE,KAAf,WAAwBD,IAAI,CAACrD,MAA7B;AACD;;;;;;;uBArBUmD,mB,EAAmB,2H,EAAA,sI;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,a;AAAA,8Z;AAAA;AAAA;ACThC;;AAAyB;AAAA,mBAAY,IAAAI,MAAA,gBAAZ;AAA8B,WAA9B;;AACvB;;AAAqB;;AAAsB;;AAC3C;;AACE;;AACE;;AACF;;AACA;;AACI;;AAKJ;;AAEF;;AACA;;AACE;;AAA0D;;AAAM;;AAChE;;AAAkD;;AAAM;;AAC1D;;AACF;;;;AAnBM;;AAOgB;;AAAA;;AASe;;AAAA;;;;;;;;;sEDPxBJ,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTnJ,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEThC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWasJ,U;AAEX,0BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;AAEzC;;;AAGA;;;;;mCACWR,O,EAAa;AACtB,cAAMS,WAAW,GAAG;AAAEC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAE,8BAAgB;AAAlB,aAAhB;AAAX,WAApB;AACA,iBAAO,KAAKF,IAAL,CAAUG,IAAV,CAAe,8DAAf,EAA8EX,OAA9E,EAAuFS,WAAvF,CAAP;AACD;;;kCAEShI,W,EAAiB;AACzB,cAAMgI,WAAW,GAAG;AAAEC,mBAAO,EAAE,IAAI,gEAAJ,CAAiB;AAAE,8BAAgB;AAAlB,aAAjB;AAAX,WAApB;AACA,iBAAO,KAAKF,IAAL,CAAUG,IAAV,CAAe,yDAAf,EAA0ElI,WAA1E,EAAuFgI,WAAvF,CAAP;AACD;;;sCAEahI,W,EAAiB;AAC7B,cAAMgI,WAAW,GAAG;AAAEC,mBAAO,EAAE,IAAI,gEAAJ,CAAiB;AAAE,8BAAgB;AAAlB,aAAjB;AAAX,WAApB;AACA,iBAAO,KAAKF,IAAL,CAAUI,GAAV,CAAc,iEAAd,EAAiFnI,WAAjF,EAA8FgI,WAA9F,CAAP;AACD;;;gCAEOzI,K,EAAU;AAChB,cAAMyI,WAAW,GAAG;AAAEC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAE,8BAAgB;AAAlB,aAAhB;AAAX,WAApB;AACA,iBAAO,KAAKF,IAAL,CAAUG,IAAV,CAAe,2DAAf,EAA2E3I,KAA3E,EAAkFyI,WAAlF,CAAP;AACD;;;mCAEUhI,W,EAAiB;AAC1B,cAAMgI,WAAW,GAAG;AAAEC,mBAAO,EAAE,IAAI,gEAAJ,CAAiB;AAAE,8BAAgB;AAAlB,aAAjB;AAAX,WAApB;AACA,iBAAO,KAAKF,IAAL,CAAUI,GAAV,CAAc,8DAAd,EAA8EnI,WAA9E,EAA2FgI,WAA3F,CAAP;AACD;;;uCAEchI,W,EAAiB;AAC9B,cAAMgI,WAAW,GAAG;AAAEC,mBAAO,EAAE,IAAI,gEAAJ,CAAiB;AAAE,8BAAgB;AAAlB,aAAjB;AAAX,WAApB;AACA,iBAAO,KAAKF,IAAL,CAAUI,GAAV,CAAc,kEAAd,EAAkFnI,WAAlF,EAA+FgI,WAA/F,CAAP;AACD;;;yCAEgBzI,K,EAAU;AACzB,cAAMyI,WAAW,GAAG;AAAEC,mBAAO,EAAE,IAAI,gEAAJ,CAAiB;AAAE,8BAAgB;AAAlB,aAAjB;AAAX,WAApB;AACA,iBAAO,KAAKF,IAAL,CAAUG,IAAV,CAAsB,oEAAtB,EAA4F3I,KAA5F,EAAmGyI,WAAnG,CAAP;AACD;;;+CAEsBzI,K,EAAU;AAC/B,cAAMyI,WAAW,GAAG;AAAEC,mBAAO,EAAE,IAAI,gEAAJ,CAAiB;AAAE,8BAAgB;AAAlB,aAAjB;AAAX,WAApB;AACA,iBAAO,KAAKF,IAAL,CAAUG,IAAV,CAAsB,0EAAtB,EAAkG3I,KAAlG,EAAyGyI,WAAzG,CAAP;AACD;AAED;;;;AAKF;;;;;;wCAGa;AACX,iBAAO,KAAKD,IAAL,CAAUZ,GAAV,CAAc,mEAAd,CAAP;AACD;;;yCAEgB5C,Q,EAAgB;AAC/B,iBAAO,KAAKwD,IAAL,CAAUZ,GAAV,CAAc,0EAA0E5C,QAAxF,CAAP;AACD;;;wCAEe9C,M,EAAc;AAC5B,cAAMuG,WAAW,GAAG;AAAEC,mBAAO,EAAE,IAAI,gEAAJ,CAAiB;AAAE,8BAAgB;AAAlB,aAAjB;AAAX,WAApB;AACA,iBAAO,KAAKF,IAAL,CAAUG,IAAV,CAAe,kEAAf,EAAmFzG,MAAnF,EAA2FuG,WAA3F,CAAP;AACD;;;8CAEqB1D,M,EAAoB;AACxC,cAAM0D,WAAW,GAAG;AAAEC,mBAAO,EAAE,IAAI,gEAAJ,CAAiB;AAAE,8BAAgB;AAAlB,aAAjB;AAAX,WAApB;AACA,iBAAO,KAAKF,IAAL,CAAUG,IAAV,CAAe,wEAAf,EAAyF5D,MAAzF,EAAiG0D,WAAjG,CAAP;AACD;;;8CAEkB;AACjB,iBAAO,KAAKD,IAAL,CAAUZ,GAAV,CAAc,yEAAd,CAAP;AACD;;;2CAEkBiB,I,EAAS;AAC1B,iBAAO,KAAKL,IAAL,CAAUZ,GAAV,CAAc,4EAA4EiB,IAA1F,CAAP;AACD;;;oCAEW3G,M,EAAW;AACrB,cAAMuG,WAAW,GAAG;AAAEC,mBAAO,EAAE,IAAI,gEAAJ,CAAiB;AAAE,8BAAgB;AAAlB,aAAjB;AAAX,WAApB;AACA,iBAAO,KAAKF,IAAL,CAAUI,GAAV,CAAc,iEAAd,EAAiF1G,MAAjF,EAAyFuG,WAAzF,CAAP;AACD;;;0CAEiBvG,M,EAAW;AAC3B,cAAMuG,WAAW,GAAG;AAAEC,mBAAO,EAAE,IAAI,gEAAJ,CAAiB;AAAE,8BAAgB;AAAlB,aAAjB;AAAX,WAApB;AACA,iBAAO,KAAKF,IAAL,CAAUI,GAAV,CAAc,uEAAd,EAAuF1G,MAAvF,EAA+FuG,WAA/F,CAAP;AACD;;;;;;;uBA1FYF,U,EAAU,uH;AAAA,K;;;aAAVA,U;AAAU,eAAVA,UAAU,K;AAAA,kBAFT;;;;;sEAEDA,U,EAAU;cAHtB,wDAGsB;eAHX;AACVO,oBAAU,EAAE;AADF,S;AAGW,Q;;;;;;;;;;;;;;;;;;;;;;ACXvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,yC,CAGA;;;AACA,QAAIC,UAAU,GAAG;AAChBC,WAAK,EAAE,EADS;AAEhBC,aAAO,EAAE,CAAC;AAFM,KAAjB,C,CAKA;;AACA,QAAIC,IAAI,GAAG;AACVC,OAAC,EAAE,CADO;AAEVC,OAAC,EAAE,CAFO;AAGVC,iBAAW,EAAE;AAHH,KAAX;AAMA,QAAIC,sBAAJ;AACA,QAAIC,SAAJ,EAAeC,UAAf;AACA,QAAIC,gBAAJ;AAEA,QAAIC,cAAc,GAAG,KAAK,CAA1B;AACA,QAAIC,cAAc,GAAG,CAArB;AACA,QAAIC,iBAAiB,GAAG,GAAxB;AACA,QAAIC,UAAU,GAAG,QAAjB;AAEA,QAAIC,OAAO,GAAG,EAAd;AACA,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,aAAa,GAAG,CAApB;AACA,QAAIC,kBAAkB,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,CAAzB;AACA,QAAIC,iBAAiB,GAAG,EAAxB;;AAEA,aAASC,UAAT,CAAoBC,GAApB,EACA;AACI,aAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,GAAf,CAAX,CAAP;AACH;;AAED,aAASI,KAAT,CAAeC,GAAf,EAAoB;AAChB,WAAI,IAAI5F,CAAC,GAAG,CAAR,EAAW6F,CAAC,GAAG,aAAaD,GAAG,CAAC9F,MAApC,EAA4CE,CAAC,GAAG4F,GAAG,CAAC9F,MAApD,EAA4DE,CAAC,EAA7D;AACI6F,SAAC,GAAGC,IAAI,CAACC,IAAL,CAAUF,CAAC,GAAGD,GAAG,CAACI,UAAJ,CAAehG,CAAf,CAAd,EAAiC,UAAjC,CAAJ,EACA6F,CAAC,GAAGA,CAAC,IAAI,EAAL,GAAUA,CAAC,KAAK,EADpB;AADJ;;AAGA,aAAO,YAAW;AACdA,SAAC,GAAGC,IAAI,CAACC,IAAL,CAAUF,CAAC,GAAGA,CAAC,KAAK,EAApB,EAAwB,UAAxB,CAAJ;AACAA,SAAC,GAAGC,IAAI,CAACC,IAAL,CAAUF,CAAC,GAAGA,CAAC,KAAK,EAApB,EAAwB,UAAxB,CAAJ;AACA,eAAO,CAACA,CAAC,IAAIA,CAAC,KAAK,EAAZ,MAAoB,CAA3B;AACH,OAJD;AAKH;;AAED,aAASI,UAAT,CAAoBC,CAApB,EAAuB;AACnB,aAAO,YAAW;AAChB,YAAIC,CAAC,GAAGD,CAAC,IAAI,UAAb;AACAC,SAAC,GAAGL,IAAI,CAACC,IAAL,CAAUI,CAAC,GAAGA,CAAC,KAAK,EAApB,EAAwBA,CAAC,GAAG,CAA5B,CAAJ;AACAA,SAAC,IAAIA,CAAC,GAAGL,IAAI,CAACC,IAAL,CAAUI,CAAC,GAAGA,CAAC,KAAK,CAApB,EAAuBA,CAAC,GAAG,EAA3B,CAAT;AACA,eAAO,CAAC,CAACA,CAAC,GAAGA,CAAC,KAAK,EAAX,MAAmB,CAApB,IAAyB,UAAhC;AACD,OALD;AAMH;;AAED,QAAIC,IAAI,GAAGT,KAAK,CAACX,UAAD,CAAhB;AACA,QAAIqB,IAAI,GAAGJ,UAAU,CAACG,IAAI,EAAL,CAArB;;AAEA,aAASE,MAAT,CAAgBC,GAAhB,EACA;AACI,aAAOT,IAAI,CAACU,IAAL,CAAUH,IAAI,KAAKE,GAAnB,IAA0B,CAAjC;AACH;;AAED,aAASE,YAAT,CAAsBtC,KAAtB,EAA6BuC,MAA7B,EACA;AACC,WAAI,IAAI1G,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGmE,KAAK,CAACrE,MAAzB,EAAiCE,CAAC,EAAlC,EACA;AACCmE,aAAK,CAACnE,CAAD,CAAL,CAASsE,CAAT,GAAaH,KAAK,CAACnE,CAAD,CAAL,CAASsE,CAAT,GAAaoC,MAA1B;AACAvC,aAAK,CAACnE,CAAD,CAAL,CAASuE,CAAT,GAAaJ,KAAK,CAACnE,CAAD,CAAL,CAASuE,CAAT,GAAamC,MAA1B;AACA;;AAED,aAAOvC,KAAP;AACA;;AAEM,aAASwC,gBAAT,GACP;AACC;AACAlC,4BAAsB,GAAGmC,QAAQ,CAACC,cAAT,CAAwB,wBAAxB,CAAzB;AACApC,4BAAsB,CAACqC,gBAAvB,CAAwC,WAAxC,EAAqDC,gBAArD;AACAtC,4BAAsB,CAACuC,MAAvB;AAEAJ,cAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,gBAAtC,CAAuD,WAAvD,EAAoEG,kBAApE;AACA;;AAED,aAASA,kBAAT,GACA;AACC9B,mBAAa,GAAGyB,QAAQ,CAACC,cAAT,CAAwB,wBAAxB,EAAkDvE,KAAlE;AAEA+C,uBAAiB,CAACjF,IAAlB,CAAuBwG,QAAQ,CAACC,cAAT,CAAwB,yBAAxB,EAAmDvE,KAA1E;AACA+C,uBAAiB,CAACjF,IAAlB,CAAuBwG,QAAQ,CAACC,cAAT,CAAwB,yBAAxB,EAAmDvE,KAA1E;AACA+C,uBAAiB,CAACjF,IAAlB,CAAuBwG,QAAQ,CAACC,cAAT,CAAwB,yBAAxB,EAAmDvE,KAA1E;AAEA4E,qBAAe,CAAC,CAAD,CAAf;AAEAN,cAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CM,WAA1C,CAAsD1C,sBAAtD;AACA;;AAED,aAASsC,gBAAT,GACA;AACC3B,wBAAkB,GAAG,EAArB;;AAEA,WAAI,IAAIpF,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EACA;AACC,YAAIoH,UAAU,GAAInC,OAAO,CAACjF,CAAD,CAAP,CAAWsC,KAAX,GAAmB+C,iBAAiB,CAACrF,CAAD,CAArC,GAA4C,GAA7D;;AAEA,aAAI,IAAIqH,OAAO,GAAG,CAAlB,EAAqBA,OAAO,GAAGhC,iBAAiB,CAACrF,CAAD,CAAhD,EAAqDqH,OAAO,EAA5D;AACCjC,4BAAkB,CAAChF,IAAnB,CAAwBgH,UAAxB;AADD;AAEA;;AAEDhC,wBAAkB,CAACkC,IAAnB,CAAyB,UAASpB,CAAT,EAAYqB,CAAZ,EAAe;AAAE,eAAOA,CAAC,GAAGrB,CAAX;AAAc,OAAxD;AAEAU,cAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CW,SAA1C,GAAsD,EAAtD;AAEA,UAAIrD,KAAK,GAAGsD,GAAG,EAAf;AACAtD,WAAK,GAAGsC,YAAY,CAACtC,KAAD,EAAQ,EAAR,CAApB;AAEA,uFAASA,KAAT;AACA,uGAAyB,IAAzB;AACA;AACA;AACA;;AAED,aAAS+C,eAAT,CAAyBQ,eAAzB,EACA;AACC,UAAIC,cAAc,GAAGf,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAArB;AACA,UAAIe,YAAY,GAAG,MAAIF,eAAvB;AAEAC,oBAAc,CAACH,SAAf,GAA2B,EAA3B;;AAEA,WAAI,IAAIxH,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG0H,eAAnB,EAAoC1H,CAAC,EAArC,EACA;AACC,YAAI6H,MAAM,GAAGjB,QAAQ,CAACkB,aAAT,CAAuB,OAAvB,CAAb;AACAD,cAAM,CAACnM,IAAP,GAAc,OAAd;AACAmM,cAAM,CAACE,GAAP,GAAa,IAAb;AACAF,cAAM,CAACtB,GAAP,GAAa,SAASmB,eAAT,GAA2B,CAAxC;AACAG,cAAM,CAACvF,KAAP,GAAesF,YAAf;AACAC,cAAM,CAACG,aAAP,GAAuBJ,YAAvB;AACAC,cAAM,CAACI,QAAP,GAAkBjI,CAAlB;AACA6H,cAAM,CAACK,IAAP,GAAc,IAAd;AAEAL,cAAM,CAACf,gBAAP,CAAwB,OAAxB,EAAiC,YAAW;AAC3C,cAAIqB,UAAU,GAAG,KAAKH,aAAL,GAAqB,KAAK1F,KAA3C;AACA,cAAI8F,gBAAgB,GAAG,CAACD,UAAU,IAAGT,eAAe,GAAG,CAArB,CAAX,EAAqCnG,OAArC,CAA6C,CAA7C,CAAvB;AACA,cAAI8G,QAAQ,GAAG,CAAf;;AAEA,eAAI,IAAIrI,EAAC,GAAG,CAAZ,EAAgBA,EAAC,GAAG0H,eAApB,EAAqC1H,EAAC,EAAtC,EACA;AACC,gBAAGA,EAAC,IAAI,KAAKiI,QAAb,EACA;AACC,kBAAIK,SAAS,GAAKC,UAAU,CAACtD,OAAO,CAACjF,EAAD,CAAP,CAAWsC,KAAZ,CAAV,GAA+BiG,UAAU,CAACH,gBAAD,CAA3D;;AACA,kBAAGE,SAAS,IAAI,IAAhB,EACA;AACC,oBAAGD,QAAQ,IAAI,CAAZ,IAAmBC,SAAS,GAAGD,QAAd,IAA4B,IAAhD,EACA;AACCC,2BAAS,IAAID,QAAb;AACAA,0BAAQ,GAAG,CAAX;AACA;;AAEDpD,uBAAO,CAACjF,EAAD,CAAP,CAAWsC,KAAX,GAAmBgG,SAAnB;AACArD,uBAAO,CAACjF,EAAD,CAAP,CAAWgI,aAAX,GAA2BM,SAA3B;AACApD,sBAAM,CAAClF,EAAD,CAAN,CAAUwH,SAAV,GAAsBgB,QAAQ,CAACF,SAAD,CAA9B;AACA,eAXD,MAaA;AACCD,wBAAQ,IAAIE,UAAU,CAACH,gBAAD,CAAtB;AACA;AACD;AACD;;AAED,eAAI,IAAIpI,GAAC,GAAG,CAAZ,EAAeqI,QAAQ,IAAI,CAAZ,IAAiBrI,GAAC,GAAG0H,eAApC,EAAqD1H,GAAC,EAAtD,EACA;AACC,gBAAGA,GAAC,IAAI,KAAKiI,QAAb,EACA;AACC,kBAAIK,UAAS,GAAGC,UAAU,CAACtD,OAAO,CAACjF,GAAD,CAAP,CAAWsC,KAAZ,CAAV,GAA+B+F,QAA/C;;AACA,kBAAGC,UAAS,IAAI,IAAhB,EACA;AACCrD,uBAAO,CAACjF,GAAD,CAAP,CAAWsC,KAAX,GAAmBgG,UAAnB;AACArD,uBAAO,CAACjF,GAAD,CAAP,CAAWgI,aAAX,GAA2BM,UAA3B;AACApD,sBAAM,CAAClF,GAAD,CAAN,CAAUwH,SAAV,GAAsBgB,QAAQ,CAACF,UAAD,CAA9B;AACAD,wBAAQ,GAAG,CAAX;AACA;AACD;AACD;;AAED,eAAKL,aAAL,GAAqB,KAAK1F,KAA1B;AACA4C,gBAAM,CAAC,KAAK+C,QAAN,CAAN,CAAsBT,SAAtB,GAAkCgB,QAAQ,CAAC,KAAKlG,KAAN,CAA1C;AACA,SA9CD;AAgDA,YAAImG,WAAW,GAAG7B,QAAQ,CAACkB,aAAT,CAAuB,OAAvB,CAAlB;AACAW,mBAAW,CAACjB,SAAZ,GAAwB,YAAYxH,CAAC,GAAC,CAAd,CAAxB;AAEA,YAAI0I,UAAU,GAAG9B,QAAQ,CAACkB,aAAT,CAAuB,OAAvB,CAAjB;AACAY,kBAAU,CAAClB,SAAX,GAAuBI,YAAY,CAACrG,OAAb,CAAqB,CAArB,CAAvB;AAEA,YAAIoH,EAAE,GAAG/B,QAAQ,CAACkB,aAAT,CAAuB,IAAvB,CAAT;AAEA7C,eAAO,CAAC7E,IAAR,CAAayH,MAAb;AACA3C,cAAM,CAAC9E,IAAP,CAAYsI,UAAZ;AAGAf,sBAAc,CAACR,WAAf,CAA2BsB,WAA3B;AACAd,sBAAc,CAACR,WAAf,CAA2BU,MAA3B;AACAF,sBAAc,CAACR,WAAf,CAA2BuB,UAA3B;AACAf,sBAAc,CAACR,WAAf,CAA2BwB,EAA3B;AACA;AACD,K,CAED;;;AACA,aAASlB,GAAT,GACA;AACC,UAAImB,iBAAiB,GAAG,EAAxB;AAAA,UAA4BC,cAAc,GAAG,EAA7C;AACA,UAAIC,OAAJ,EAAaC,OAAb,EAAsBC,QAAtB;AACA,UAAI1E,CAAJ,EAAOC,CAAP;AACAG,eAAS,GAAG,wEAAM,EAAlB;AACAC,gBAAU,GAAG,yEAAO,EAApB;AACAC,sBAAgB,GAAGF,SAAS,GAAGC,UAA/B;AAEAkE,oBAAc,GAAGI,oBAAoB,EAArC;;AACA,WAAI,IAAIC,UAAU,GAAG,CAArB,EAAwBA,UAAU,GAAGnE,iBAArC,EAAwDmE,UAAU,EAAlE,EACA;AACCN,yBAAiB,GAAGC,cAApB;AACAA,sBAAc,GAAG,EAAjB;AACAA,sBAAc,CAACzI,IAAf,CAAqB+I,UAAU,CAACP,iBAAD,CAA/B;;AACA,aAAI,IAAI5I,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG6E,cAAc,GAAG,CAApC,EAAuC7E,CAAC,IAAE,CAA1C,EACA;AAAA;;AACC8I,iBAAO,GAAGM,aAAa,CAACR,iBAAD,CAAvB;AACAG,iBAAO,GAAGK,aAAa,CAACR,iBAAD,CAAvB;AACAI,kBAAQ,GAAGK,SAAS,CAACP,OAAD,EAAUC,OAAV,CAApB;AACAO,gBAAM,CAACN,QAAQ,CAAC,CAAD,CAAT,CAAN;AACAM,gBAAM,CAACN,QAAQ,CAAC,CAAD,CAAT,CAAN;AACAO,gCAAsB,CAACP,QAAQ,CAAC,CAAD,CAAT,CAAtB;AACAO,gCAAsB,CAACP,QAAQ,CAAC,CAAD,CAAT,CAAtB;;AACA,6BAAAH,cAAc,EAACzI,IAAf,2CAAuB4I,QAAvB;AACA;AACD;;AAED5M,aAAO,CAACC,GAAR,CAAYwM,cAAZ;AACAzM,aAAO,CAACC,GAAR,CAAY,OAAZ;AACA,aAAO8M,UAAU,CAACN,cAAD,CAAV,CAA2B1E,KAAlC;AACA,K,CAED;;;AACA,aAASgF,UAAT,CAAoBD,UAApB,EACA;AACC,UAAIM,iBAAiB,GAAG,IAAxB;AACAA,uBAAiB,GAAGN,UAAU,CAAC,CAAD,CAA9B;;AAEA,WAAI,IAAIlJ,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG6E,cAAnB,EAAmC7E,CAAC,EAApC;AACC,YAAGkJ,UAAU,CAAClJ,CAAD,CAAV,CAAcoE,OAAd,GAAwBoF,iBAAiB,CAACpF,OAA7C,EACCoF,iBAAiB,GAAGN,UAAU,CAAClJ,CAAD,CAA9B;AAFF;;AAIA,aAAOwJ,iBAAP;AACA,K,CAED;;;AACA,aAASF,MAAT,CAAgBG,UAAhB,EACA;AACC;AACA,UAAIC,YAAY,GAAGD,UAAU,CAACtF,KAAX,CAAiBmC,MAAM,CAACnB,aAAD,CAAvB,CAAnB;AACA,UAAIwE,MAAM,GAAGrD,MAAM,CAAC,CAAD,CAAnB;AACA,UAAIsD,iBAAiB,GAAGtD,MAAM,CAAC,CAAD,CAA9B,CAJD,CAMC;;AACA,UAAGsD,iBAAiB,IAAI,CAAxB,EACA;AACC,YAAGF,YAAY,CAACpF,CAAb,GAAiBqF,MAAjB,GAA0BjF,SAA7B,EACCgF,YAAY,CAACpF,CAAb,GAAiBoF,YAAY,CAACpF,CAAb,GAAiBqF,MAAlC,CADD,KAGCD,YAAY,CAACpF,CAAb,GAAiBoF,YAAY,CAACpF,CAAb,GAAiBqF,MAAlC;AACD,OAND,CAOA;AAPA,WAQK,IAAGC,iBAAiB,IAAI,CAAxB,EACL;AACC,cAAGF,YAAY,CAACpF,CAAb,GAAiBqF,MAAjB,GAA0B,CAA7B,EACCD,YAAY,CAACpF,CAAb,GAAiBoF,YAAY,CAACpF,CAAb,GAAiBqF,MAAlC,CADD,KAGCD,YAAY,CAACpF,CAAb,GAAiBoF,YAAY,CAACpF,CAAb,GAAiBqF,MAAlC;AACD,SANI,CAOL;AAPK,aAQA,IAAGC,iBAAiB,IAAI,CAAxB,EACL;AACC,gBAAGF,YAAY,CAACnF,CAAb,GAAiBoF,MAAjB,GAA0B,CAA7B,EACCD,YAAY,CAACnF,CAAb,GAAiBmF,YAAY,CAACnF,CAAb,GAAiBoF,MAAlC,CADD,KAGCD,YAAY,CAACnF,CAAb,GAAiBmF,YAAY,CAACnF,CAAb,GAAiBoF,MAAlC;AACD,WANI,CAOL;AAPK,eAQA,IAAGC,iBAAiB,IAAI,CAAxB,EACL;AACC,kBAAGF,YAAY,CAACnF,CAAb,GAAiBoF,MAAjB,GAA0BhF,UAA7B,EACC+E,YAAY,CAACnF,CAAb,GAAiBmF,YAAY,CAACnF,CAAb,GAAiBoF,MAAlC,CADD,KAGCD,YAAY,CAACnF,CAAb,GAAiBmF,YAAY,CAACnF,CAAb,GAAiBoF,MAAlC;AACD;AACD;AAED;;;;;;AAIA,aAASN,SAAT,CAAmBQ,WAAnB,EAAgCC,WAAhC,EACA;AACC,UAAIC,SAAS,GAAGzD,MAAM,CAACnB,aAAD,CAAtB;AACA,UAAI6E,MAAM,GAAG1E,UAAU,CAACuE,WAAD,CAAvB;AACA,UAAII,MAAM,GAAG3E,UAAU,CAACwE,WAAD,CAAvB;AAEA,UAAII,QAAQ,GAAGF,MAAM,CAAC7F,KAAP,CAAa4F,SAAb,CAAf;AACAC,YAAM,CAAC7F,KAAP,CAAa4F,SAAb,IAA0BE,MAAM,CAAC9F,KAAP,CAAa4F,SAAb,CAA1B;AACAE,YAAM,CAAC9F,KAAP,CAAa4F,SAAb,IAA0BG,QAA1B;AAEA,aAAO,CAACF,MAAD,EAASC,MAAT,CAAP;AACA,K,CAED;;;AACA,aAASb,aAAT,CAAuBF,UAAvB,EACA;AACC,UAAIiB,gBAAJ;AAAA,UAAsBX,iBAAiB,GAAG,IAA1C;;AAEA,WAAI,IAAIxJ,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG8E,cAAnB,EAAmC9E,CAAC,EAApC,EACA;AACCmK,wBAAgB,GAAGjB,UAAU,CAAC5C,MAAM,CAACzB,cAAD,CAAP,CAA7B;AACA,YAAG2E,iBAAiB,IAAI,IAArB,IAA6BW,gBAAgB,CAAC/F,OAAjB,GAA2BoF,iBAAiB,CAACpF,OAA7E,EACCoF,iBAAiB,GAAGW,gBAApB;AACD;;AAED,aAAOX,iBAAP;AACA,K,CAED;;;AACA,aAASP,oBAAT,GACA;AACC,UAAIL,iBAAiB,GAAG,EAAxB;;AACA,WAAI,IAAI5I,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG6E,cAAnB,EAAmC7E,CAAC,EAApC,EACA;AACC,YAAIoK,aAAa,GAAG9E,UAAU,CAACpB,UAAD,CAA9B;;AACA,aAAI,IAAImG,SAAS,GAAG,CAApB,EAAuBA,SAAS,GAAGlF,aAAnC,EAAkDkF,SAAS,EAA3D,EACA;AACC,cAAIH,QAAQ,GAAG5E,UAAU,CAACjB,IAAD,CAAzB;AACA6F,kBAAQ,CAAC5F,CAAT,GAAagC,MAAM,CAAC5B,SAAS,GAAG,CAAb,CAAnB;AACAwF,kBAAQ,CAAC3F,CAAT,GAAa+B,MAAM,CAAC3B,UAAU,GAAG,CAAd,CAAnB;AACAyF,uBAAa,CAACjG,KAAd,CAAoB/D,IAApB,CAAyB8J,QAAzB;AACA;;AAEDX,8BAAsB,CAACa,aAAD,CAAtB;AACAxB,yBAAiB,CAACxI,IAAlB,CAAuBgK,aAAvB;AACA;;AAED,aAAOxB,iBAAP;AACA,K,CAED;;;AACA,aAASW,sBAAT,CAAgCE,UAAhC,EACA;AACCa,mCAA6B,CAACb,UAAD,CAA7B;AACAc,eAAS,CAACd,UAAD,CAAT;AACA,UAAIrF,OAAO,GAAG,CAAd;AAAA,UAAiB+D,UAAjB;;AAEA,WAAI,IAAInI,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGoF,kBAAkB,CAACtF,MAAtC,EAA8CE,CAAC,EAA/C,EACA;AACCmI,kBAAU,GAAK/C,kBAAkB,CAACpF,CAAD,CAAlB,GAAwB4E,gBAA1B,GAA+C6E,UAAU,CAACtF,KAAX,CAAiBnE,CAAjB,EAAoBwE,WAAhF;AACA,YAAG2D,UAAU,GAAG,CAAhB,EACCA,UAAU,IAAI,CAAC,CAAf;AACD/D,eAAO,IAAI+D,UAAX;AACA;;AAEDsB,gBAAU,CAACrF,OAAX,GAAqBA,OAArB;AACA,K,CAED;;;AACA,aAASmG,SAAT,CAAmBd,UAAnB,EACA;AACC,UAAItF,KAAK,GAAGsF,UAAU,CAACtF,KAAvB;AACAA,WAAK,CAACmD,IAAN,CAAW,UAASkD,KAAT,EAAgBC,KAAhB,EAAuB;AAAE,eAAQA,KAAK,CAACjG,WAAN,GAAoBgG,KAAK,CAAChG,WAAlC;AAA+C,OAAnF;AACA,K,CAED;;;AACA,aAAS8F,6BAAT,CAAuCb,UAAvC,EACA;AACC,WAAI,IAAIzJ,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGmF,aAAnB,EAAkCnF,CAAC,EAAnC;AACCyJ,kBAAU,CAACtF,KAAX,CAAiBnE,CAAjB,EAAoBwE,WAApB,GAAkC,CAAlC;AADD;;AAGA,WAAI,IAAIkG,GAAG,GAAG,CAAd,EAAiBA,GAAG,GAAG/F,UAAvB,EAAmC+F,GAAG,EAAtC,EACA;AACC,aAAI,IAAIC,GAAG,GAAG,CAAd,EAAiBA,GAAG,GAAGjG,SAAvB,EAAkCiG,GAAG,EAArC,EACA;AACC,cAAIC,SAAS,GAAG,2GAAmCD,GAAnC,EAAwCD,GAAxC,EAA6CjB,UAAU,CAACtF,KAAxD,CAAhB;AACA,cAAI0G,iBAAiB,GAAG,iGAAyBD,SAAzB,CAAxB;AAEAnB,oBAAU,CAACtF,KAAX,CAAiB0G,iBAAiB,CAAC,CAAD,CAAlC,EAAuCrG,WAAvC,IAAsD,CAAtD;AACA;AACD;;;;;;;;;;;;;;;;;;ACvYF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAIA,QAAIsG,MAAM,GAAG,gDAAb;AACA,QAAIC,cAAc,GAAG,WAArB;AAEA,QAAIC,WAAJ;AACA,QAAIC,MAAJ;AACA,QAAIC,YAAJ;AACA,QAAIC,KAAK,GAAI,GAAb;AACA,QAAIC,MAAM,GAAG,GAAb;AACA,QAAIC,KAAJ;AACA,QAAIC,KAAJ;AACA,QAAIC,MAAJ;AACA,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIrH,KAAK,GAAG,EAAZ;AACA,QAAIsH,cAAc,GAAG,EAArB;AACA,QAAIC,SAAS,GAAG,CAAhB;AACA,QAAIC,MAAM,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,EAA6B,QAA7B,EAAuC,MAAvC,EAA+C,gBAA/C,EAAiE,WAAjE,EAA8E,WAA9E,EAA2F,OAA3F,EAAoG,YAApG,EACZ,cADY,EACI,KADJ,EACW,OADX,CAAb;AAEA,QAAIC,cAAc,GAAG,KAArB;AACA,QAAIC,qBAAqB,GAAG,KAA5B,C,CACA;;AACA,QAAIC,gBAAgB,GAAG;AACtB,gBAAW;AADW,KAAvB,C,CAKA;;AAEA,aAASC,cAAT,GACA;AACCd,YAAM,GAAGrE,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAT;AACAwE,WAAK,GAAG,IAAI,6CAAMW,KAAV,CAAgB;AACvBC,iBAAS,EAAE,WADY;AAEvBd,aAAK,EAAEA,KAFgB;AAGvBC,cAAM,EAAEA;AAHe,OAAhB,CAAR;AAMAE,WAAK,GAAG,IAAI,6CAAMY,KAAV,EAAR;AAEAX,YAAM,GAAG,IAAI,6CAAMY,IAAV,CAAe;AACvB7H,SAAC,EAAE,CADoB;AAEvBC,SAAC,EAAE,CAFoB;AAGvB4G,aAAK,EAAEA,KAHgB;AAIvBC,cAAM,EAAEA,MAJe;AAKvBgB,cAAM,EAAE,OALe;AAMvBC,mBAAW,EAAE;AANU,OAAf,CAAT;AAUAf,WAAK,CAACgB,GAAN,CAAUf,MAAV;AACAF,WAAK,CAACiB,GAAN,CAAUhB,KAAV;AAEAL,YAAM,CAACnE,gBAAP,CAAwB,WAAxB,EAAqC,UAASyF,KAAT,EAAe;AACnD,YAAG,CAACV,qBAAD,IAA0B,CAACD,cAA9B,EACA;AACCV,sBAAY,GAAGD,MAAM,CAACuB,qBAAP,EAAf;AACA,cAAIlI,CAAC,GAAGiI,KAAK,CAACE,OAAN,GAAgBvB,YAAY,CAAC5G,CAArC;AACA,cAAIC,CAAC,GAAGgI,KAAK,CAACG,OAAN,GAAgBxB,YAAY,CAAC3G,CAArC;AAEA,cAAIoI,KAAK,GAAGC,WAAW,CAACtI,CAAD,EAAIC,CAAJ,CAAvB;AAEA+G,eAAK,CAACgB,GAAN,CAAUK,KAAV;AACArB,eAAK,CAACuB,IAAN;AACAzQ,iBAAO,CAACC,GAAR,CAAY,QAAQiI,CAAR,GAAY,MAAZ,GAAqBC,CAAjC;AACA;AACD,OAbD;AAeA,UAAGqC,QAAQ,CAACC,cAAT,CAAwB,sBAAxB,KAAmD,IAAtD,EACCD,QAAQ,CAACC,cAAT,CAAwB,sBAAxB,EAAgDC,gBAAhD,CAAiE,WAAjE,EAA8EgG,cAA9E;AAEDlG,cAAQ,CAACC,cAAT,CAAwB,iBAAxB,EAA2CC,gBAA3C,CAA4D,WAA5D,EAAyE,YAAU;AAClFiG,yBAAiB,CAAC,WAAD,CAAjB;AACA,OAFD;AAIAnG,cAAQ,CAACC,cAAT,CAAwB,iBAAxB,EAA2CC,gBAA3C,CAA4D,WAA5D,EAAyE,YAAU;AAClFiG,yBAAiB,CAAC,WAAD,CAAjB;AACA,OAFD,EA7CD,CAiDC;;AAEAnG,cAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,gBAAtC,CAAuD,WAAvD,EAAoE,YAAW;AAC9EkG,kBAAU,CAAC,KAAD,CAAV;AACA,OAFD,EAnDD,CAuDC;AACA;AACA;AACA;AACA;AACA,K,CAED;;;AACA,aAASA,UAAT,CAAoBC,KAApB,EACA;AACC,UAAIC,UAAU,GAAGtG,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,EAA8CvE,KAA/D;AACA,UAAI6K,iBAAiB,GAAGvG,QAAQ,CAACC,cAAT,CAAwB,2BAAxB,EAAqDvE,KAA7E;AAEA,UAAI0I,WAAW,GAAGK,KAAK,CAAC+B,SAAN,CAAgB;AAAEC,kBAAU,EAAE;AAAd,OAAhB,CAAlB;AAEA,UAAIlS,KAAK,GAAGyL,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCW,SAAlD;AAEA,UAAI8F,QAAQ,GAAG;AACdnS,aAAK,EAAEA,KADO;AAEdJ,YAAI,EAAEmS,UAFQ;AAGdrM,mBAAW,EAAEsM,iBAHC;AAIdI,oBAAY,EAAEzB,gBAJA;AAKd7K,aAAK,EAAE+J,WALO;AAMdwC,cAAM,EAAEP;AANM,OAAf;AASAQ,OAAC,CAACC,IAAF,CAAO;AACNhS,YAAI,EAAE,MADA;AAENiS,WAAG,EAAE7C,MAFC;AAGNjH,eAAO,EAAE;AACR,yCAAgC;AADxB,SAHH;AAMN+J,mBAAW,EAAE,kBANP;AAONzR,YAAI,EAAEqJ,IAAI,CAACE,SAAL,CAAe4H,QAAf,CAPA;AAQNO,gBAAQ,EAAE,MARJ;AASNC,eAAO,EAAE,iBAAS3R,IAAT,EAAeO,MAAf,EAAuB;AAC/BN,iBAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,iBAAO,CAACC,GAAR,CAAYK,MAAZ;AACA,SAZK;AAaND,aAAK,EAAE,eAASN,IAAT,EAAeO,MAAf,EAAuB;AAC7BN,iBAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,iBAAO,CAACC,GAAR,CAAYK,MAAZ;AACA;AAhBK,OAAP;AAkBA,K,CAED;;;AACA,aAASqQ,iBAAT,CAA2BgB,MAA3B,EACA;AACChD,oBAAc,GAAGgD,MAAjB;AACA,K,CAED;;;AACA,aAASC,wBAAT,CAAkCC,IAAlC,EACA;AACCpC,2BAAqB,GAAGoC,IAAxB;AACA,K,CAED;;;AACA,aAASC,QAAT,CAAkBC,SAAlB,EACA;AACChK,WAAK,GAAGgK,SAAR;AACA,K,CAED;;;AACA,aAASvB,WAAT,CAAqBtI,CAArB,EAAwBC,CAAxB,EACA;AACC,UAAIoI,KAAK,GAAG,IAAI,6CAAMyB,MAAV,CAAiB;AAC5B9J,SAAC,EAAEA,CADyB;AAE5BC,SAAC,EAAEA,CAFyB;AAG5B8J,cAAM,EAAE,CAHoB;AAI5BjC,cAAM,EAAE,OAJoB;AAK5BC,mBAAW,EAAE,CALe;AAM5BiC,iBAAS,EAAE;AANiB,OAAjB,CAAZ;AASA3B,WAAK,CAAC4B,EAAN,CAAS,WAAT,EAAsB,UAAUhC,KAAV,EAAgB;AACrC3F,gBAAQ,CAAC4H,WAAT,GAAuB,UAASjC,KAAT,EAAgB;AACtCrB,sBAAY,GAAGD,MAAM,CAACuB,qBAAP,EAAf;AACAG,eAAK,CAACrI,CAAN,CAAQiI,KAAK,CAACE,OAAN,GAAgBvB,YAAY,CAAC5G,CAArC;AACAqI,eAAK,CAACpI,CAAN,CAAQgI,KAAK,CAACG,OAAN,GAAgBxB,YAAY,CAAC3G,CAArC;AACA,SAJD;;AAMAqH,sBAAc,GAAG,IAAjB;AACAhF,gBAAQ,CAAC6H,IAAT,CAAcC,KAAd,CAAoBC,MAApB,GAA6B,SAA7B;AACA,OATD;AAWAhC,WAAK,CAAC4B,EAAN,CAAS,UAAT,EAAqB,UAAShC,KAAT,EAAgB;AACpC3F,gBAAQ,CAAC4H,WAAT,GAAuB,IAAvB;AACA5C,sBAAc,GAAG,KAAjB;AACAhF,gBAAQ,CAAC6H,IAAT,CAAcC,KAAd,CAAoBC,MAApB,GAA6B,SAA7B;AACA,OAJD;AAMAhC,WAAK,CAAC4B,EAAN,CAAS,UAAT,EAAqB,UAAShC,KAAT,EAAgB;AACpCnQ,eAAO,CAACC,GAAR,CAAY,iBAAZ,EADoC,CAEpC;;AACAuK,gBAAQ,CAAC4H,WAAT,GAAuB,IAAvB;AACA5C,sBAAc,GAAG,KAAjB;AACAhF,gBAAQ,CAAC6H,IAAT,CAAcC,KAAd,CAAoBC,MAApB,GAA6B,SAA7B;AACAhC,aAAK,CAACiC,OAAN;AACAtD,aAAK,CAACuB,IAAN;AACA,OARD;AAUA,aAAOF,KAAP;AACA,K,CAED;;;AACA,aAASG,cAAT,GACA;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAtB,iBAAW,GAAGF,KAAK,CAACuD,WAAN,CAAkB,UAASC,IAAT,EAAe;AAC9C,eAAOA,IAAI,CAACC,YAAL,OAAwB,QAA/B;AACA,OAFa,CAAd;;AAIA,WAAK,IAAI/O,CAAC,GAAGwL,WAAW,CAAC1L,MAAZ,GAAqB,CAAlC,EAAqCE,CAAC,IAAI,CAA1C,EAA6CA,CAAC,EAA9C,EAAkD;AACjDmE,aAAK,CAAC/D,IAAN,CAAW;AACVkE,WAAC,EAAEkH,WAAW,CAACxL,CAAD,CAAX,CAAegP,KAAf,CAAqB1K,CADd;AAEVC,WAAC,EAAEiH,WAAW,CAACxL,CAAD,CAAX,CAAegP,KAAf,CAAqBzK;AAFd,SAAX;AAIA;;AAED+G,WAAK,CAAC2D,eAAN,GArCD,CAuCC;;AACApD,2BAAqB,GAAG,IAAxB;AAEAqD,4BAAsB;AACtBC,kBAAY;AACZ,K,CAED;;;AACA,aAASA,YAAT,GACA;AACC,UAAIC,UAAU,GAAGzD,MAAM,CAAC7L,MAAxB;;AACA,WAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGmE,KAAK,CAACrE,MAAzB,EAAiCE,CAAC,EAAlC,EACA;AACC,YAAIqP,aAAa,GAAGC,UAAU,CAAC7D,cAAc,CAACzL,CAAD,CAAf,CAA9B;AACA,YAAIuP,KAAK,GAAG,IAAI,6CAAMC,IAAV,CAAe;AAC1BC,gBAAM,EAAEJ,aADkB;AAE1BjD,gBAAM,EAAET,MAAM,CAAC3L,CAAC,GAAGoP,UAAL,CAFY;AAG1B/C,qBAAW,EAAE,CAHa;AAI1BiC,mBAAS,EAAE;AAJe,SAAf,CAAZ;AAOAiB,aAAK,CAAChB,EAAN,CAAS,WAAT,EAAsB,YAAW;AAChC3H,kBAAQ,CAAC6H,IAAT,CAAcC,KAAd,CAAoBC,MAApB,GAA6B,SAA7B;AACA,SAFD;AAIAY,aAAK,CAAChB,EAAN,CAAS,UAAT,EAAqB,YAAW;AAC/B3H,kBAAQ,CAAC6H,IAAT,CAAcC,KAAd,CAAoBC,MAApB,GAA6B,SAA7B;AACA,SAFD;AAIA7C,wBAAgB,CAAC4D,MAAjB,CAAwBtP,IAAxB,CAA6BiP,aAA7B;AACA/D,aAAK,CAACgB,GAAN,CAAUiD,KAAV;AACA;;AACDjE,WAAK,CAACuB,IAAN;AACAf,sBAAgB,GAAGtG,IAAI,CAACE,SAAL,CAAeoG,gBAAf,CAAnB;AACA,K,CAED;;;AACA,aAASwD,UAAT,CAAoBK,UAApB,EACA;AACC,UAAIN,aAAa,GAAG,EAApB;AACA,UAAIO,YAAY,GAAG,CAAC,CAApB;AACA,UAAIC,aAAa,GAAGF,UAAU,CAAC,CAAD,CAA9B;AACA,UAAIG,UAAU,GAAGH,UAAU,CAAC,CAAD,CAA3B;AACA,UAAII,UAAU,GAAG,CAAjB;;AAEA,WAAI,IAAIC,KAAK,GAAG,CAAhB,EAAmBA,KAAK,GAAGL,UAAU,CAAC7P,MAAtC,EAA8CkQ,KAAK,IAAE,CAArD,EACA;AACC,YAAGF,UAAU,IAAIH,UAAU,CAACK,KAAK,GAAC,CAAP,CAA3B,EACA;AACC,cAAGD,UAAU,IAAI,CAAjB,EACA;AACCV,yBAAa,CAACjP,IAAd,CAAmByP,aAAnB,EAAkCC,UAAlC;AACAT,yBAAa,CAACjP,IAAd,CAAmBwP,YAAnB,EAAiCE,UAAjC;AACAC,sBAAU,GAAG,CAAC,CAAd;AACA,WALD,MAOA;AACCV,yBAAa,CAACjP,IAAd,CAAmBwP,YAAnB,EAAiCE,UAAjC;AACAT,yBAAa,CAACjP,IAAd,CAAmByP,aAAnB,EAAkCC,UAAlC;AACAC,sBAAU,GAAG,CAAb;AACA;;AAEDF,uBAAa,GAAGF,UAAU,CAACK,KAAD,CAA1B;AACAJ,sBAAY,GAAGD,UAAU,CAACK,KAAD,CAAzB;AACAF,oBAAU,GAAGH,UAAU,CAACK,KAAK,GAAC,CAAP,CAAvB;AACA,SAlBD,MAoBA;AACCJ,sBAAY,GAAGD,UAAU,CAACK,KAAD,CAAzB;AACA;AACD;;AAED,aAAOX,aAAP;AACA,K,CAED;;;AACA,aAASH,sBAAT,GACA;AACC,WAAI,IAAIlP,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGmE,KAAK,CAACrE,MAAzB,EAAiCE,CAAC,EAAlC;AACCyL,sBAAc,CAACzL,CAAD,CAAd,GAAoB,EAApB;AADD;;AAGA,WAAI,IAAI0K,GAAG,GAAG,CAAd,EAAiBA,GAAG,GAAGU,MAAvB,EAA+BV,GAAG,EAAlC,EACA;AACC,aAAI,IAAIC,GAAG,GAAG,CAAd,EAAiBA,GAAG,GAAGQ,KAAvB,EAA8BR,GAAG,EAAjC,EACA;AACC,cAAIC,SAAS,GAAGqF,kCAAkC,CAACtF,GAAD,EAAMD,GAAN,EAAWvG,KAAX,CAAlD;AACA,cAAI0G,iBAAiB,GAAGqF,wBAAwB,CAACtF,SAAD,CAAhD;AAEAa,wBAAc,CAACZ,iBAAiB,CAAC,CAAD,CAAlB,CAAd,CAAqCzK,IAArC,CAA0CuK,GAA1C;AACAc,wBAAc,CAACZ,iBAAiB,CAAC,CAAD,CAAlB,CAAd,CAAqCzK,IAArC,CAA0CsK,GAA1C;AACA;AACD;AACD,K,CAED;;;AACA,aAASwF,wBAAT,CAAkCtF,SAAlC,EACA;AACC,UAAIuF,WAAW,GAAG,EAAlB;AACA,UAAIC,eAAe,GAAGtK,IAAI,CAACiC,GAAL,OAAAjC,IAAI,qBAAQ8E,SAAR,EAA1B;AAEA,UAAGG,cAAc,KAAK,WAAtB,EACCqF,eAAe,GAAGA,eAAe,CAAC7O,OAAhB,CAAwBmK,SAAxB,IAAqC,EAAvD;AAED,UAAIsE,KAAK,GAAG,CAAZ;AAAA,UAAe3I,OAAO,GAAG,CAAzB;;AAEA,aAAM2I,KAAK,IAAI,CAAC,CAAhB,EACA;AACCA,aAAK,GAAGpF,SAAS,CAACyF,OAAV,CAAkBD,eAAlB,CAAR;;AACA,YAAGJ,KAAK,IAAI,CAAC,CAAb,EACA;AACCG,qBAAW,CAAC/P,IAAZ,CAAiB4P,KAAK,GAAC3I,OAAvB;AACAuD,mBAAS,CAAC0F,MAAV,CAAiBN,KAAjB,EAAwB,CAAxB;AACA3I,iBAAO;AACP;AACD;;AAED,aAAO8I,WAAP;AACA,K,CAED;;;AACA,aAASF,kCAAT,CAA4CM,QAA5C,EAAsDC,QAAtD,EAAgEC,UAAhE,EACA;AACC,UAAItS,MAAM,GAAG,EAAb;;AACA,WAAI,IAAI6B,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGyQ,UAAU,CAAC3Q,MAA9B,EAAsCE,CAAC,EAAvC;AACC7B,cAAM,CAACiC,IAAP,CAAYsQ,iBAAiB,CAACH,QAAD,EAAWC,QAAX,EAAqBC,UAAU,CAACzQ,CAAD,CAAV,CAAcsE,CAAnC,EAAsCmM,UAAU,CAACzQ,CAAD,CAAV,CAAcuE,CAApD,CAA7B;AADD;;AAGA,aAAOpG,MAAP;AACA,K,CAED;;;AACA,aAASuS,iBAAT,CAA2BC,OAA3B,EAAoCC,OAApC,EAA6CC,OAA7C,EAAsDC,OAAtD,EACA;AACC,UAAG/F,cAAc,KAAK,WAAtB,EACC,OAAOgG,0BAA0B,CAACJ,OAAD,EAAUC,OAAV,EAAmBC,OAAnB,EAA4BC,OAA5B,CAAjC,CADD,KAEK,IAAG/F,cAAc,KAAK,WAAtB,EACJ,OAAOiG,0BAA0B,CAACL,OAAD,EAAUC,OAAV,EAAmBC,OAAnB,EAA4BC,OAA5B,CAAjC;AACD,K,CAED;;;AACA,aAASC,0BAAT,CAAoCJ,OAApC,EAA6CC,OAA7C,EAAsDC,OAAtD,EAA+DC,OAA/D,EACA;AACC,UAAI3S,MAAM,GAAG2H,IAAI,CAACmL,GAAL,CAAUnL,IAAI,CAACmL,GAAL,CAAUN,OAAO,GAAGE,OAApB,EAA6B,CAA7B,IAAmC/K,IAAI,CAACmL,GAAL,CAAUL,OAAO,GAAGE,OAApB,EAA6B,CAA7B,CAA7C,EAA+E,GAA/E,CAAb;AACA,aAAO3S,MAAM,CAACoD,OAAP,CAAemK,SAAf,CAAP;AACA,K,CAED;;;AACA,aAASsF,0BAAT,CAAoCL,OAApC,EAA6CC,OAA7C,EAAsDC,OAAtD,EAA+DC,OAA/D,EACA;AACC,UAAII,OAAO,GAAGP,OAAO,GAAGE,OAAxB;AACA,UAAGK,OAAO,GAAG,CAAb,EACCA,OAAO,IAAI,CAAC,CAAZ;AACD,UAAIC,OAAO,GAAGP,OAAO,GAAGE,OAAxB;AACA,UAAGK,OAAO,GAAG,CAAb,EACCA,OAAO,IAAI,CAAC,CAAZ;AACD,UAAIhT,MAAM,GAAG+S,OAAO,GAAGC,OAAvB;AACA,aAAOhT,MAAP;AACA;;;;;;;;;;;;;;;;;ACtYD;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMiT,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAInV,OAAO,CAACK,KAAR,CAAc8U,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SignupComponent } from './pages/signup/signup.component';\r\nimport { IndexComponent } from './pages/index/index.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { ProfileComponent } from './pages/profile/profile.component';\r\nimport { ProfilePuzzlesComponent } from './pages/profile-puzzles/profile-puzzles.component'\r\nimport { ProfileRatingsComponent } from './pages/profile-ratings/profile-ratings.component'\r\nimport { RatingsComponent } from './pages/ratings/ratings.component';\r\nimport { ResetPasswordComponent } from './pages/reset-password/reset-password.component';\r\nimport { ResetSuccessComponent } from './pages/reset-success/reset-success.component';\r\nimport { CreateComponent } from './pages/create/create.component';\r\nimport { AICreateComponent } from './pages/aicreate/aicreate.component';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: 'index', component: IndexComponent},\r\n  {path: 'signup', component: SignupComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'profile', component: ProfileComponent},\r\n  {path: 'profilePuzzles', component: ProfilePuzzlesComponent},\r\n  {path: 'profileRatings', component: ProfileRatingsComponent},\r\n  {path: 'ratings', component: RatingsComponent},\r\n  {path: 'resetPassword', component: ResetPasswordComponent},\r\n  {path: 'resetSuccess', component: ResetSuccessComponent},\r\n  {path: 'create', component: CreateComponent},\r\n  {path: 'aicreate', component: AICreateComponent},\r\n\r\n    // otherwise redirect to home\r\n  { path: '', redirectTo: '/index', pathMatch: 'full' },\r\n  { path: '**', component: IndexComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'prometheus-puzzles';\r\n  \r\n  constructor() {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n//\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport { MatToolbarModule} from '@angular/material/toolbar';\r\nimport { MatTableModule} from '@angular/material/table';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatGridListModule } from '@angular/material/grid-list'\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\n\r\n\r\n//pages\r\nimport { IndexComponent } from './pages/index/index.component';\r\nimport { SignupComponent } from './pages/signup/signup.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { ProfileComponent } from './pages/profile/profile.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { RatingsComponent } from './pages/ratings/ratings.component';\r\nimport { ResetPasswordComponent } from './pages/reset-password/reset-password.component';\r\nimport { ResetSuccessComponent } from './pages/reset-success/reset-success.component';\r\nimport { CreateComponent } from './pages/create/create.component';\r\nimport { RateDialogComponent } from './rate-dialog/rate-dialog.component';\r\nimport { ProfilePuzzlesComponent } from './pages/profile-puzzles/profile-puzzles.component';\r\nimport { ProfileRatingsComponent } from './pages/profile-ratings/profile-ratings.component';\r\nimport { AICreateComponent } from './pages/aicreate/aicreate.component';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    IndexComponent,\r\n    SignupComponent,\r\n    LoginComponent,\r\n    ProfileComponent,\r\n    RatingsComponent,\r\n    NavbarComponent,\r\n    ResetPasswordComponent,\r\n    ResetSuccessComponent,\r\n    CreateComponent,\r\n    RateDialogComponent,\r\n    ProfilePuzzlesComponent,\r\n    ProfileRatingsComponent,\r\n    AICreateComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NgxPaginationModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FlexLayoutModule,\r\n    MatButtonModule,\r\n    MatDividerModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatProgressSpinnerModule,\r\n    MatToolbarModule,\r\n    MatTableModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    MatInputModule, MatListModule,\r\n    MatCardModule, MatFormFieldModule, MatDialogModule, MatGridListModule, MatRadioModule, ReactiveFormsModule,\r\n    MDBBootstrapModule.forRoot(),\r\n  ],\r\n  entryComponents: [RateDialogComponent],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit} from '@angular/core';\r\n//import { getName } from '.././pages/login/login.component';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  name:string;\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  logout(){\r\n    localStorage.removeItem('token');\r\n    this.router.navigate(['/index']);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.name = localStorage.getItem('name');\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n<div class=\"logo\">\r\n  <img class=\"navimg\" src=\"assets/images/logo_nav.png\">\r\n</div>\r\n  <mdb-navbar id=\"navCustom\" SideClass=\"navbar\">\r\n    <div>\r\n        <ul class=\"nav navbar-nav mr-auto\" routerLinkActive=\"active\">\r\n            <li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"/ratings\">View</a></li>\r\n            <li class=\"nav-item dropdown\" dropdown>\r\n              <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\" mdbWavesEffect>Create<div class=\"caret\"></div></a>\r\n               <div *dropdownMenu class=\"dropdown-menu dropdown dropdown-primary\" role=\"menu\">\r\n                 <a class=\"dropdown-item waves-light\" routerLink=\"/create\" mdbWavesEffect>Manual</a><br>\r\n                 <a class=\"dropdown-item waves-light\" routerLink=\"/aicreate\" mdbWavesEffect>AI</a><br>\r\n               </div>\r\n            </li>\r\n            <li class=\"nav-item dropdown\" dropdown>\r\n              <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\" mdbWavesEffect>Profile<div class=\"caret\"></div></a>\r\n               <div *dropdownMenu class=\"dropdown-menu dropdown dropdown-primary\" role=\"menu\">\r\n                 <a class=\"dropdown-item waves-light\" routerLink=\"/profile\" mdbWavesEffect>My Details</a><br>\r\n                 <a class=\"dropdown-item waves-light\" routerLink=\"/profileRatings\" mdbWavesEffect>My Ratings</a><br>\r\n                 <a class=\"dropdown-item waves-light\" routerLink=\"/profilePuzzles\" mdbWavesEffect>My Puzzles</a>\r\n               </div>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <span class=\"navbar-text\">\r\n        Hello, {{name}}\r\n        <a id=\"logout\" (click)=\"logout()\">Logout</a>\r\n    </span>\r\n  </mdb-navbar>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { initializeDataAI } from 'src/assets/js/aiCreation.js';\r\n\r\n@Component({\r\n  selector: 'app-aicreate',\r\n  templateUrl: './aicreate.component.html',\r\n  styleUrls: ['./aicreate.component.css']\r\n})\r\nexport class AICreateComponent implements OnInit {\r\n\r\n  \r\n  token: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  \tinitializeDataAI();\r\n    this.token = localStorage.getItem('token');\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n\r\n<div class=\"container-fluid\">\r\n  <div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutGap=\"1\">\r\n    <mat-card class=\"\">\r\n      <mat-card-header>\r\n        <mat-card-title>Algorithm Parameters</mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div id=\"inputContainer\">\r\n          <label>Number of puzzle pieces(20 max):</label><br>\r\n          <input type=\"text\" name=\"numberOfPieces\" id=\"numberOfPiecesInputBox\" value=\"3\"><br>\r\n          <label>Number of Group 1 pieces:</label><br>\r\n          <input type=\"text\" name=\"numberOfPieces\" id=\"numberOfPiecesInputBox1\" value=\"1\"><br>\r\n          <label>Number of Group 2 pieces:</label><br>\r\n          <input type=\"text\" name=\"numberOfPieces\" id=\"numberOfPiecesInputBox2\" value=\"1\"><br>\r\n          <label>Number of Group 3 pieces:</label><br>\r\n          <input type=\"text\" name=\"numberOfPieces\" id=\"numberOfPiecesInputBox3\" value=\"1\"><br>\r\n          <label>Select Puzzle Type</label><br>\r\n          <mat-radio-group class=\"radio-group\">\r\n            <mat-radio-button class=\"radio-button\" value=\"euclidean\" name=\"distanceMetric\" id=\"euclideanButton\" > Euclidian </mat-radio-button>\r\n            <mat-radio-button class=\"radio-button\" value=\"manhattan\" name=\"distanceMetric\" id=\"manhattanButton\" > Manhattan </mat-radio-button>\r\n          </mat-radio-group>\r\n          <button mat-raised-button class=\"btns\" id=\"nextButton\">Next</button>\r\n          <button mat-raised-button class=\"btns\" ng-hide='true' id=\"generatePuzzleAIButton\">Generate Puzzle</button><br>\r\n        </div>\r\n      </mat-card-content>\r\n   </mat-card>\r\n\r\n   <mat-card class=\"\">\r\n     <mat-card-header>\r\n       <mat-card-title>Create a puzzle</mat-card-title>\r\n     </mat-card-header>\r\n    <mat-card-content>\r\n      <div id=\"container\">\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n  <mat-card class=\"\">\r\n    <mat-card-header>\r\n      <mat-card-title>Saving Options</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n       <br >\r\n        <label id=\"\">Name: </label><br><input type=\"text\" name=\"puzzleName\" id=\"puzzleNameInputBox\"><br>\r\n        <label id=\"\">Short Description: </label><br><input type=\"text\" name=\"puzzleDescription\" id=\"puzzleDescriptionInputBox\"><br>\r\n        <label hidden=\"true\" id=\"tokenLabel\">{{token}}</label><br>\r\n        <button mat-raised-button class=\"btns\" id=\"saveButton\">Save</button>\r\n    </mat-card-content>\r\n  </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { initializeData } from 'src/assets/js/manualCreation.js';\r\nimport Konva from 'konva';\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.css']\r\n})\r\nexport class CreateComponent implements OnInit {\r\n\r\n  token: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    initializeData();\r\n    this.token = localStorage.getItem('token');\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n<div>\r\n <a id=\"help\" src=\"../../../assets/gifHelp.mp4\">Help</a>\r\n</div>\r\n<div class=\"container-fluid\">\r\n  <div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutGap=\"1\">\r\n    <mat-card class=\"\">\r\n      <mat-card-header>\r\n        <label>Select Puzzle Type</label>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <mat-radio-group class=\"radio-group\">\r\n          <mat-radio-button class=\"radio-button\" value=\"euclidean\" name=\"distanceMetric\" id=\"euclideanButton\" > Euclidian </mat-radio-button>\r\n          <mat-radio-button class=\"radio-button\" value=\"manhattan\" name=\"distanceMetric\" id=\"manhattanButton\" > Manhattan </mat-radio-button>\r\n        </mat-radio-group>\r\n      </mat-card-content>\r\n   </mat-card>\r\n\r\n   <mat-card class=\"\">\r\n    <mat-card-header>\r\n      <label>Create puzzle by selecting points on the canvas</label>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div id=\"container\">\r\n      </div>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-raised-button class=\"btns\" id=\"generatePuzzleButton\">Generate Puzzle</button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"\">\r\n    <mat-card-header>\r\n      <mat-card-title>Saving Options</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n       <br >\r\n        <label id=\"\">Name: </label><br><input type=\"text\" name=\"puzzleName\" id=\"puzzleNameInputBox\"><br>\r\n        <label id=\"\">Short Description: </label><br><input type=\"text\" name=\"puzzleDescription\" id=\"puzzleDescriptionInputBox\"><br>\r\n        <label hidden=\"true\" id=\"tokenLabel\">{{token}}</label><br>\r\n        <button mat-raised-button class=\"btns\" id=\"saveButton\">Save</button>\r\n    </mat-card-content>\r\n  </mat-card>\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- <label id=\"label\">What puzzle type would you like to generate?</label>\r\n    <mat-radio-group class=\"radio-group\">\r\n      <mat-radio-button class=\"radio-button\" value=\"euclidean\" name=\"distanceMetric\" id=\"euclideanButton\" > Euclidian </mat-radio-button>\r\n      <mat-radio-button class=\"radio-button\" value=\"manhattan\" name=\"distanceMetric\" id=\"manhattanButton\" > Manhattan </mat-radio-button>\r\n    </mat-radio-group>\r\n    <br> -->\r\n    <!-- <label id=\"label\">Create puzzle by selecting points on the canvas</label>\r\n\r\n    <br>\r\n    <div id=\"container\">\r\n    </div>\r\n    <br> -->\r\n\r\n    <!-- <button mat-raised-button class=\"btns\" id=\"generatePuzzleButton\">Generate Puzzle</button> <br >\r\n      <label id=\"label\">Name: </label><input type=\"text\" name=\"puzzleName\" id=\"puzzleNameInputBox\"><br>\r\n      <label id=\"label\">Short Description: </label><input type=\"text\" name=\"puzzleDescription\" id=\"puzzleDescriptionInputBox\"><br>\r\n      <label hidden=\"true\" id=\"tokenLabel\">{{token}}</label>\r\n\r\n\r\n    <button mat-raised-button class=\"btns\" id=\"saveButton\">Save</button> -->\r\n    <!-- <button mat-raised-button class=\"btns\" id=\"saveAndSubmitButton\">Save and Submit</button> -->\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.css']\r\n})\r\nexport class IndexComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<header id=\"indexNav\">\r\n <!--   <div class=\"bar\"><a href=\"index.html\">Prometheus' Puzzles</a></div>   -->\r\n    <nav class=\"links\">\r\n      <ul>\r\n        <li id=\"btnLink\"><a href=\"/signup\" mat-button class=\"indexBtn\">Sign Up</a></li>\r\n        <li id=\"btnLink\"><a href=\"/login\" mat-button class=\"indexBtn\">Login</a></li>\r\n      </ul>\r\n    </nav>\r\n</header>\r\n\r\n<img src=\"assets/images/websmal1.jpg\">\r\n<div class=\"container\" id=\"second\">\r\n        <h1 class=\"main-title\"><strong>C R E A T E .  S H A R E .  R A T E . </strong></h1>\r\n        <h2>Have fun creating 3D puzzles that can be shared, rated and printed</h2>\r\n    <div class=\"flex-container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\" >\r\n        <div class=\"one\">\r\n            <div class=\"content\">\r\n                <div class=\"content-overlay\"></div>\r\n                <img class=\"content-image\" src=\"assets/images/puzzles/6.png\">\r\n                <div class=\"content-details fadeIn-bottom\">\r\n                    <h3 class=\"content-title\">Geometric Puzzles</h3>\r\n                    <p class=\"content-text\">This is a short description of a geometric equationed arithmetic puzzle. Magnified by bliss.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"one\">\r\n            <div class=\"content\">\r\n                <div class=\"content-overlay\"></div>\r\n                <img class=\"content-image\" src=\"assets/images/puzzles/2.png\">\r\n                <div class=\"content-details fadeIn-bottom\">\r\n                    <h3 class=\"content-title\">Arithmetic Puzzles</h3>\r\n                    <p class=\"content-text\">This is a short description of a arithmetic equationed arithmetic puzzle. Magnified by razor.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"one\">\r\n            <div class=\"content\">\r\n                <div class=\"content-overlay\"></div>\r\n                <img class=\"content-image\" src=\"assets/images/puzzles/6.png\">\r\n                <div class=\"content-details fadeIn-bottom\">\r\n                    <h3 class=\"content-title\">Polygon Puzzles</h3>\r\n                    <p class=\"content-text\">This is a short description of a polygon equationed arithmetic puzzle. Magnified by shoes.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <!--\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"indexNavBtns\">\r\n        <mat-card fxFlex=\"90\" fxLayoutAlign=\"space-evenly center\">\r\n            <a routerLink=\"/login\" mat-raised-button class=\"btn\">Login\r\n            <a routerLink=\"/signup\" mat-raised-button class=\"btn\">Sign Up\r\n      </mat-card>\r\n    </div> -->\r\n\r\n\r\n    <!--\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"indexNavBtns\">\r\n        <mat-card fxFlex=\"90\" fxLayoutAlign=\"space-evenly center\">\r\n            <a routerLink=\"/login\" mat-raised-button class=\"btn\">Login\r\n            <a routerLink=\"/signup\" mat-raised-button class=\"btn\">Sign Up\r\n      </mat-card>\r\n    </div>\r\n     -->\r\n\r\n    <!-- <div class=\"content\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"descText\">\r\n            <mat-card fxFlex=\"90\">\r\n                    <p>Puzzles have been a hobby of many people over the centuries, coming in various\r\n                    forms which have various ways of solving. Puzzles have played a role in people’s\r\n                    problem solving skills. Puzzle generators have allowed for more puzzles to be\r\n                    created, using various techniques to create interesting and challenging puzzles.\r\n                    The system requested by the client involves the creation of 3-Dimensional puzzles (manually and from the use of AI), testing of puzzles, sharing and rating of\r\n                    puzzles by other users, as well as the ability of downloading 3D printable files.\r\n                    Team Prometheus, has come up with a way to develop the system according to\r\n                    the client’s specifications.</p>\r\n          </mat-card>\r\n        </div> -->\r\n\r\n\r\n\r\n        <!-- <div class=\"container\">\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <div class=\"flex-container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\" >\r\n            <div class=\"overlay\"></div>\r\n            <mat-card  class=\"child-1\">\r\n                <mat-card-header>\r\n                    <mat-card-title>Puzzle One</mat-card-title>\r\n                    <mat-card-subtitle class=\"one\">Created by {{puzzle.creator}}</mat-card-subtitle>\r\n                    <mat-card-subtitle class=\"one\">Rating: </mat-card-subtitle>\r\n                    <mat-card-subtitle class=\"one\">Date: </mat-card-subtitle>\r\n                    <mat-card-subtitle class=\"one\">Created by X</mat-card-subtitle>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                    <img class=\"indexImg\" src=\"assets/images/imgC.jpg\">\r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                    <button mat-button class=\"btns\">SOLVE</button>\r\n                    <button mat-button class=\"btns\">RATE</button>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n\r\n            <mat-card  class=\"child-2\">\r\n                <mat-card-header>\r\n                    <mat-card-title>Puzzle One</mat-card-title>\r\n                    <mat-card-subtitle class=\"one\">Created by X</mat-card-subtitle>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                    <img class=\"indexImg\"  src=\"assets/images/imgB.jpg\">\r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                    <button mat-button class=\"btns\">SOLVE</button>\r\n                    <button mat-button class=\"btns\">RATE</button>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n            <mat-card class=\"child-3\">\r\n                <mat-card-header>\r\n                    <mat-card-title>Puzzle One</mat-card-title>\r\n                    <mat-card-subtitle class=\"one\">Created by X</mat-card-subtitle>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                    <img class=\"indexImg\"  src=\"assets/images/imgC.jpg\">\r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                    <button mat-button class=\"btns\">SOLVE</button>\r\n                    <button mat-button class=\"btns\">RATE</button>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n        </div>\r\n\r\n\r\n                <a routerLink=\"/login\" mat-raised-button class=\"btn\">Login\r\n                <a routerLink=\"/signup\" mat-raised-button class=\"btn\">Sign Up\r\n\r\n\r\n    </div> -->\r\n\r\n    <!--\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"indexNavBtns\">\r\n        <mat-card fxFlex=\"90\" fxLayoutAlign=\"space-evenly center\">\r\n            <a routerLink=\"/login\" mat-raised-button class=\"btn\">Login\r\n            <a routerLink=\"/signup\" mat-raised-button class=\"btn\">Sign Up\r\n      </mat-card>\r\n    </div> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { User } from 'src/app/models/User';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  verifyUser: any;\r\n  formError: string;\r\n\r\n  constructor(private formBuilder: FormBuilder, private api: APIService, private router: Router) {}\r\n  //method for logging in user and getting the token associated with the said user\r\n  loginUser(currentUser: User){\r\n    this.formError = '';\r\n    if(currentUser !== null){\r\n      this.verifyUser = {\r\n        \"username\":currentUser.email,\r\n        \"password\":currentUser.password\r\n      }\r\n\r\n      this.api.loginUser(this.verifyUser).subscribe(\r\n        data => { console.log(data);\r\n          localStorage.removeItem('name');\r\n          localStorage.setItem('name', data['name']);\r\n          localStorage.removeItem('token');\r\n          localStorage.setItem('token', data['token']);\r\n\r\n          // update api to get id as well\r\n          localStorage.removeItem('id');\r\n          localStorage.setItem('id', data['id']);\r\n          this.formError = \"\";\r\n        this.router.navigate(['/ratings']);\r\n\r\n        //var timeoutHandle = window.setTimeout(...);\r\n        //window.clearTimeout(timeoutHandle);\r\n        //timeoutHandle = window.setTimeout(...);\r\n\r\n        setTimeout(()=>{\r\n          localStorage.removeItem('token');\r\n          this.router.navigate(['login']);\r\n          alert(\"You have been logged out after 1 hour\");\r\n        },3600000);\r\n      },\r\n        error => {//if status code other than in the 200 range returned, show error\r\n          console.log('Error from API: ', error.error);\r\n          if(error.status >= 401){\r\n            this.formError = error.error;\r\n          }\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n  //error messages used during login/register validation\r\n  error_messages = {\r\n    'email': [\r\n      { type: 'required', message: 'Email is required.' },\r\n      { type: 'email', message: 'Invalid email format.' }\r\n    ],\r\n    'password': [\r\n      { type: 'required', message: 'Password is required.' },\r\n      { type: 'minlength', message: 'Password must have at least 6 characters.' }\r\n    ]\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]]\r\n\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"flex-container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center none\">\r\n        <mat-card class=\"regForm\"><img src=\"assets/images/label.png\"> \r\n            <mat-card-header>              \r\n                <h3>Login</h3> \r\n            </mat-card-header>\r\n            <mat-card-content class=\"regFormContent\">\r\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser(loginForm.value)\">\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your email</mat-label>\r\n                        <input class=\"input\" matInput placeholder=\"john@doe.com\" formControlName=\"email\" required>\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.email\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"loginForm.get('email').hasError(error.type) && (loginForm.get('email').dirty || loginForm.get('email').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your password</mat-label>\r\n                        <input class=\"input\" matInput required formControlName=\"password\" type=\"password\">\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.password\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"loginForm.get('password').hasError(error.type) && (loginForm.get('password').dirty || loginForm.get('password').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                            <span id=\"passError\">{{formError}}</span>\r\n                        </div>\r\n                    </div>\r\n                    <button mat-raised-button type=\"submit\" [disabled]=\"!loginForm.valid\" class=\"btns\" id=\"one\">Login</button>\r\n                    <a routerLink=\"/index\" mat-raised-button class=\"btns\" id=\"two\">Cancel</a>\r\n                </form>\r\n            </mat-card-content>\r\n            <mat-card-actions>\r\n                <a routerLink=\"/resetPassword\" class=\"link\">Forgot Password</a>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n *","import { Component, OnInit } from '@angular/core';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { Puzzle } from 'src/app/models/Puzzle';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-profile-puzzles',\r\n  templateUrl: './profile-puzzles.component.html',\r\n  styleUrls: ['./profile-puzzles.component.css']\r\n})\r\nexport class ProfilePuzzlesComponent implements OnInit {\r\n\r\n  currentUser: any;\r\n  //user  puzzle variables\r\n  //puzzleList: Observable <Puzzle[]> ;\r\n  userPuzzleList: any;\r\n  puzzle: any;\r\n  show: boolean;\r\n  text: boolean;\r\n  imageList: any;\r\n  temp: boolean = false;\r\n  tee: any;\r\n\r\n  constructor(private api: APIService, private router: Router) { }\r\n\r\n  getUserPuzzles(){\r\n    this.api.getPuzzlesByUser(this.currentUser).subscribe( data => {\r\n      this.userPuzzleList = data;\r\n      if (data[0]==null)\r\n      {\r\n        this.text = true;\r\n      }\r\n      this.show = false;\r\n    });\r\n  }\r\n\r\n  share(data: any){\r\n    this.puzzle = {\r\n      \"puzzleID\": data\r\n    }\r\n    if(this.api.sharePuzzle(this.puzzle).subscribe()){\r\n        alert(\"Puzzle shared\");\r\n    }\r\n    location.reload();\r\n  }\r\n\r\n  stopShare(data: any){\r\n    this.puzzle = {\r\n      \"puzzleID\": data\r\n    }\r\n    if(this.api.stopSharingPuzzle(this.puzzle).subscribe()){\r\n        alert(\"Stop sharing puzzle\");\r\n    }\r\n    location.reload();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if(!localStorage.getItem('token')){\r\n      this.router.navigate(['/index']);\r\n      alert(\"You are not logged in\");\r\n    }\r\n\r\n    this.currentUser = {\r\n      \"token\": localStorage.getItem('token')\r\n    }\r\n    this.show = true;\r\n    this.text = false;\r\n\r\n    this.getUserPuzzles();\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"container\">\r\n<div class=\"container-fluid\" *ngIf=\"currentUser\" >\r\n    <h1 class=\"main-title\">My Puzzles</h1>\r\n    <div class=\"flex-container\" fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\">\r\n        <mat-card class=\"content\" *ngFor=\"let puzzle of userPuzzleList\">\r\n          <div class=\"content-overlay\"></div>\r\n          <img class=\"content-image\" src=\"{{puzzle.image}}\">\r\n            <mat-card-title><strong>{{puzzle.name}}</strong></mat-card-title>\r\n            <!-- <mat-card-subtitle>Description: {{puzzle.description}}</mat-card-subtitle> -->\r\n            <mat-card-actions class=\"puzzleActions\">\r\n              <button *ngIf=\"!puzzle.shared\" mat-button class=\"btns\" (click)=\"share(puzzle.id)\">SHARE</button>\r\n              <button *ngIf=\"puzzle.shared\" mat-button class=\"btns\" (click)=\"stopShare(puzzle.id)\">STOP SHARING</button>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n</div>\r\n\r\n  <div *ngIf=\"text\">\r\n    <h2 id=\"NoneText\" >You have not created any puzzles at the moment</h2>\r\n  </div>\r\n<div class=\"spinner\">\r\n  <mat-spinner *ngIf=\"show\" id=\"spinner\"></mat-spinner>\r\n</div> \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Puzzle } from 'src/app/models/Puzzle';\r\nimport { Observable } from 'rxjs';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { RateDialogComponent } from '../../rate-dialog/rate-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-profile-ratings',\r\n  templateUrl: './profile-ratings.component.html',\r\n  styleUrls: ['./profile-ratings.component.css']\r\n})\r\nexport class ProfileRatingsComponent implements OnInit {\r\n\r\n  currentUser: any;\r\n  //user puzzle ratings variables\r\n  //ratingList: Observable <any[]> ;\r\n  userRatingsList: any;\r\n  text: boolean;\r\n  ratePID: number;\r\n  ratingEntry: any;\r\n  rateDialogRef: MatDialogRef<RateDialogComponent>;\r\n  show: boolean;\r\n\r\n  constructor(private api: APIService, private router: Router, private dialog: MatDialog) { }\r\n\r\n  getUserPuzzleRatings(){\r\n    this.userRatingsList = null;\r\n    this.api.getPuzzleRatingsByUser(this.currentUser).subscribe( data => {\r\n      this.userRatingsList = data;\r\n      this.show = false;\r\n      this.text = true;\r\n    });\r\n\r\n  }\r\n\r\n  checkData(data: any){\r\n    this.ratePID = data;\r\n    //this.rateUID = localStorage.getItem('token');\r\n    //this.rateUID = localStorage.getItem('id');\r\n    //console.log(localStorage.getItem('id'));\r\n  }\r\n\r\n  openRateDialog(){\r\n    this.rateDialogRef = this.dialog.open(RateDialogComponent);\r\n\r\n    this.rateDialogRef.afterClosed().subscribe( result => {\r\n      if (result != \"\"){\r\n\r\n        this.ratingEntry = {\r\n        //\"id\":this.rateUID,\r\n          \"puzzleID\":this.ratePID,\r\n          \"rating\":result,\r\n          \"token\": localStorage.getItem('token')\r\n        }\r\n\r\n        console.log(this.ratingEntry);\r\n\r\n        if(this.api.createNewPuzzleRating(this.ratingEntry).subscribe())\r\n        {\r\n          alert(\"Rating added\");\r\n        }\r\n\r\n        location.reload();\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  openAndCheck(rateP: any){\r\n    this.checkData(rateP);\r\n    this.openRateDialog();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if(!localStorage.getItem('token')){\r\n      this.router.navigate(['/index']);\r\n      alert(\"You are not logged in\");\r\n    }\r\n\r\n    this.currentUser = {\r\n      \"token\": localStorage.getItem('token')\r\n    }\r\n\r\n    this.show = true;\r\n    this.text = false;\r\n\r\n    this.getUserPuzzleRatings();\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"container\">\r\n<div class=\"container-fluid\" *ngIf=\"currentUser\" >\r\n    <h1 class=\"main-title\">My Ratings</h1>\r\n    <div class=\"flex-container\" fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\">\r\n        <mat-card class=\"content\" *ngFor=\"let rating of userRatingsList\">\r\n          <div class=\"content-overlay\"></div>\r\n          <img class=\"content-image\" src=\"{{rating.image}}\">\r\n            <mat-card-title><strong>{{rating.puzzleName}}</strong></mat-card-title>\r\n            <mat-card-subtitle>Rating: {{rating.rating}}/5</mat-card-subtitle>\r\n            <mat-card-actions class=\"puzzleActions\">\r\n                <button mat-button class=\"btns\">SOLVE</button>\r\n                <button mat-button class=\"btns\" (click)=\"openAndCheck(rating.puzzleID)\">UPDATE RATING</button>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n</div>\r\n\r\n<div id=\"NoneText\" *ngIf=\"text\">\r\n    <h2>You have not made any ratings at the moment</h2>\r\n</div>\r\n<div class=\"spinner\">\r\n<mat-spinner *ngIf=\"show\" id=\"spinner\"></mat-spinner>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  nameTextboxValue: string;\r\n  usernameTextboxValue: string;\r\n  currentUserObject:any;\r\n  token: any;\r\n  currentUser: any;\r\n  updateNameForm: FormGroup;\r\n  updateUsernameForm: FormGroup;\r\n\r\n  constructor(private api: APIService, private formBuilder: FormBuilder, private router: Router) { }\r\n\r\n  updateName(){\r\n    this.currentUser = null;\r\n      if(this.nameTextboxValue != undefined){\r\n      this.currentUser = {\r\n        \"token\": localStorage.getItem('token'),\r\n        \"name\": this.nameTextboxValue\r\n      }\r\n      localStorage.removeItem('name');\r\n      localStorage.setItem('name', this.currentUser['name']);\r\n      this.api.updateName(this.currentUser).subscribe( data => {\r\n        this.currentUserObject['name'] = data['name'];\r\n      });\r\n      alert(\"Name updated\");\r\n    }\r\n    else{ console.log(\"No value provided\");}\r\n    location.reload();\r\n  }\r\n\r\n  updateUsername(){\r\n    this.currentUser = null;\r\n    if(this.usernameTextboxValue != undefined){\r\n    this.currentUser = {\r\n      \"token\": localStorage.getItem('token'),\r\n      \"username\": this.usernameTextboxValue\r\n    }\r\n    this.api.updateUsername(this.currentUser).subscribe( data => {\r\n      this.currentUserObject['username'] = data['username'];\r\n    })\r\n  }\r\n  else{console.log(\"No value provided\")}\r\n  }\r\n\r\n  error_messages = {\r\n    'username': [\r\n      { type: 'required', message: 'Email is required.' },\r\n      { type: 'email', message: 'Invalid email format.' }\r\n    ],\r\n    'name': [\r\n      { type: 'required', message: 'Full name is required.' },\r\n      { type: 'pattern', message: 'Name can only consist of letters' }\r\n    ]\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if(!localStorage.getItem('token')){\r\n      this.router.navigate(['/index']);\r\n      alert(\"You are not logged in\");\r\n    }\r\n\r\n    this.currentUser = {\r\n      \"token\": localStorage.getItem('token')\r\n    }\r\n\r\n    this.api.getUser(this.currentUser).subscribe( data => {\r\n      this.currentUserObject = data;\r\n\r\n      this.updateNameForm = this.formBuilder.group({\r\n        name: [data['name'], [Validators.required, Validators.pattern('[a-zA-Z ]*')]]\r\n      });\r\n\r\n      this.updateUsernameForm = this.formBuilder.group({\r\n        username: [data['username'], [Validators.required, Validators.email]]\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n<!--app-navbar-profile></app-navbar-profile-->\r\n\r\n\r\n<div class=\"container-fluid\" >\r\n    <div fxLayout=\"row\">\r\n    <mat-card class=\"profileImageCard\">\r\n        <mat-card-header>\r\n            <h1>Profile</h1>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n        <div><img src=\"assets/images/profile.jpg\" id=\"profileImage\"></div>\r\n        </mat-card-content>\r\n    </mat-card>\r\n\r\n    <mat-card class=\"profileText\">\r\n        <mat-card-header>\r\n            <h1>Edit Details</h1>\r\n        </mat-card-header>\r\n        <mat-card-content class=\"move\">\r\n        <div *ngIf=\"currentUserObject\">\r\n            <form [formGroup]=\"updateNameForm\" (ngSubmit)=\"updateName()\">\r\n                <mat-form-field appearance=\"standard\">\r\n                    <input matInput formControlName=\"name\"  value=\"{{currentUserObject.name}}\" (input)=\"nameTextboxValue=$event.target.value\">\r\n                </mat-form-field>\r\n                <div>\r\n                    <ng-container *ngFor=\"let error of error_messages.name\">\r\n                        <mat-error class=\"error-message\" *ngIf=\"updateNameForm.get('name').hasError(error.type) && (updateNameForm.get('name').dirty || updateNameForm.get('name').touched)\">\r\n                            {{ error.message }}\r\n                        </mat-error>\r\n                    </ng-container>\r\n                </div>\r\n                <button mat-raised-button type=\"submit\" [disabled]=\"!updateNameForm.valid\" class=\"btns\" >Save</button>\r\n            </form>\r\n\r\n            <form [formGroup]=\"updateUsernameForm\" (ngSubmit)=\"updateUsername()\">\r\n                <mat-form-field appearance=\"standard\">\r\n                    <input matInput formControlName=\"username\"  value=\"{{currentUserObject.username}}\" (input)=\"usernameTextboxValue=$event.target.value\">\r\n                </mat-form-field>\r\n                <div>\r\n                    <ng-container *ngFor=\"let error of error_messages.username\">\r\n                        <mat-error class=\"error-message\" *ngIf=\"updateUsernameForm.get('username').hasError(error.type) && (updateUsernameForm.get('username').dirty || updateUsernameForm.get('username').touched)\">\r\n                            {{ error.message }}\r\n                        </mat-error>\r\n                    </ng-container>\r\n                </div>\r\n                <button mat-raised-button type=\"submit\" [disabled]=\"!updateUsernameForm.valid\" class=\"btns\">Save</button>\r\n            </form>\r\n        </div>\r\n        </mat-card-content>\r\n    </mat-card>\r\n","export class RatingsArr{\r\n  id: number;\r\n  rating: number;\r\n  puzzleID: number;\r\n}\r\n","export class PuzzleArr{\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  creator: string;\r\n  rating: string;\r\n  created: any;\r\n  showRating: boolean;\r\n  image: any;\r\n}\r\n","import { Component, OnInit, ChangeDetectorRef, ViewEncapsulation } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { User } from 'src/app/models/User';\r\nimport { Router } from '@angular/router';\r\nimport { PuzzleArr } from './puzzleArr';\r\nimport { RatingsArr } from './RatingsArr';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { RateDialogComponent } from '../../rate-dialog/rate-dialog.component';\r\nimport { PuzzleRating } from 'src/app/models/PuzzleRating';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-ratings',\r\n  templateUrl: './ratings.component.html',\r\n  styleUrls: ['./ratings.component.css']\r\n})\r\nexport class RatingsComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = [\"id\",\"name\",\"description\",\"creator\",\"rating\",\"created\",\"showRating\",\"image\"];\r\n  rateDialogRef: MatDialogRef<RateDialogComponent>;\r\n  puzzles: Array<PuzzleArr> = [];\r\n  name: string;\r\n  ratings: Array<RatingsArr> = [];\r\n  ratePID: number;\r\n  rateUID: string;\r\n  ratingEntry: any;\r\n  formError: string;\r\n  show: boolean;\r\n  dataAvailable: boolean;\r\n  //searchbar\r\n  searchTextboxValue: string;\r\n  token: any;\r\n  currentUser: any;\r\n  datasource: any;\r\n\r\n  constructor(private api: APIService, private cdr: ChangeDetectorRef, private dialog: MatDialog, private router: Router) {\r\n  }\r\n\r\n  populate(populatePuz: any)\r\n  {\r\n    this.ratings.length = 0;\r\n    this.api.getAllPuzzleRatings().subscribe(\r\n      data=> {\r\n        for(let i=0; data[i]!= null; i++){\r\n          let ratingObj = new RatingsArr();\r\n          ratingObj.id = data[i].id;\r\n          ratingObj.rating = data[i].rating;\r\n          ratingObj.puzzleID = data[i].puzzleID;\r\n          this.ratings.push(ratingObj);\r\n        }\r\n      },\r\n      error => {\r\n        console.log(\"Error from API: \", error.error);\r\n      });\r\n\r\n\r\n    if (populatePuz != null)\r\n    {\r\n      this.getPuzzles(populatePuz);\r\n    }\r\n    else\r\n    {\r\n      this.api.getAllPuzzles().subscribe(\r\n        data => {\r\n          this.getPuzzles(data);\r\n      },\r\n        error => {//if status code other than in the 200 range returned, show error\r\n          console.log('Error from API: ', error.error);\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n  searchItems(searchValue: any){\r\n    if(searchValue != undefined){\r\n      this.api.getSearchedPuzzles(searchValue).subscribe( data => {\r\n        var dataObjectSize = Object.keys(data).length;\r\n        if(dataObjectSize == 0 )\r\n        {\r\n          alert(\"Nothing matches given criteria\");\r\n          console.log(\"Nothing matches given criteria\");\r\n        }\r\n        else{\r\n          //Please populate the page with the data received. Other puzzles not fromd data must be cleared\r\n          console.log(data);\r\n          this.populate(data);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getPuzzles(data: any){\r\n    this.puzzles.length = 0;\r\n    for(let i=0; data[i]!=null; i++)\r\n    {\r\n      let puzzleObj = new PuzzleArr();\r\n      puzzleObj.id = data[i].id;\r\n      puzzleObj.name = data[i].name;\r\n      puzzleObj.description = data[i].description;\r\n      puzzleObj.creator = data[i].creator;\r\n      puzzleObj.created = data[i].createdAt;\r\n      puzzleObj.image = data[i].image;\r\n      if (puzzleObj.creator== this.currentUser[\"name\"])\r\n      {\r\n        puzzleObj.showRating = false;\r\n      }\r\n      else\r\n      {\r\n        puzzleObj.showRating = true;\r\n      }\r\n\r\n      let j = 0;\r\n      let total = 0;\r\n\r\n      for (let k=0; this.ratings[k]!=null; k++){\r\n        if (this.ratings[k].puzzleID == data[i].id)\r\n        {\r\n          //********* ERROR HERE - THIS LOOP IS NOT ENTERED WHEN THE RATINGS VALUE IS 0  ************\r\n          console.log(this.ratings[k]);\r\n          total = total + this.ratings[k].rating;\r\n          j = j+1;\r\n        }\r\n      }\r\n\r\n      if (j == 0){\r\n        puzzleObj.rating = (0).toString();\r\n      }\r\n      else{\r\n        puzzleObj.rating = (total/j).toFixed(2);\r\n      }\r\n      this.puzzles.push(puzzleObj);\r\n    }\r\n\r\n    this.datasource = new MatTableDataSource(this.puzzles);\r\n\r\n    this.dataAvailable = true;\r\n    this.show= false;\r\n\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.datasource.filterPredicate = function(data, filter: string): boolean {\r\n      return data.name.toLowerCase().includes(filter)\r\n    };\r\n    this.datasource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  checkData(data: any){\r\n    this.ratePID = data;\r\n    //this.rateUID = localStorage.getItem('token');\r\n    //this.rateUID = localStorage.getItem('id');\r\n    //console.log(localStorage.getItem('id'));\r\n  }\r\n\r\n  openRateDialog(){\r\n    this.rateDialogRef = this.dialog.open(RateDialogComponent);\r\n\r\n    this.rateDialogRef.afterClosed().subscribe( result => {\r\n      //console.log(result);\r\n      //console.log(this.ratePID);\r\n      //console.log(this.rateUID);\r\n\r\n      if (result != \"\"){\r\n\r\n        this.ratingEntry = {\r\n        //\"id\":this.rateUID,\r\n          \"puzzleID\":this.ratePID,\r\n          \"rating\":result,\r\n          \"token\": localStorage.getItem('token')\r\n        }\r\n\r\n        console.log(this.ratingEntry);\r\n\r\n        if(this.api.createNewPuzzleRating(this.ratingEntry).subscribe())\r\n        {\r\n          alert(\"Rating added\");\r\n        }\r\n\r\n        location.reload();\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  openAndCheck(rateP: any){\r\n    this.checkData(rateP);\r\n    this.openRateDialog();\r\n  }\r\n\r\n  reload(){\r\n    this.populate(null);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.show=true;\r\n    this.dataAvailable = false;\r\n    if(!localStorage.getItem('token')){\r\n      this.router.navigate(['/index']);\r\n      alert(\"You are not logged in\");\r\n    }\r\n\r\n    this.currentUser = {\r\n      \"token\": localStorage.getItem('token')\r\n    }\r\n\r\n    this.api.getUser(this.currentUser).subscribe( data => {\r\n      console.log(data[\"name\"]);\r\n      this.currentUser = {\r\n        \"token\": localStorage.getItem('token'),\r\n        \"name\": data[\"name\"]\r\n      }\r\n    });\r\n\r\n    this.populate(null);\r\n\r\n  }\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"container\">\r\n<mat-form-field class=\"example-form-field\">\r\n    <mat-label>Search</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event.target.value)\">\r\n</mat-form-field>\r\n<button mat-button id=\"resetBtn\" (click)=\"reload()\">RESET SEARCH CRITERIA</button>\r\n<div class=\"spinner\">\r\n  <mat-spinner *ngIf=\"show\" id=\"spinner\"></mat-spinner>\r\n</div>\r\n\r\n<div class=\"container-fluid\" *ngIf=\"dataAvailable\" >\r\n    <div class=\"flex-container\" fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\">\r\n        <mat-card class=\"content\"  *ngFor=\"let puzzle of this.datasource.filteredData\">\r\n          <div class=\"content-overlay\"></div>\r\n          <!-- <mat-icon aria-hidden=\"false\" class=\"infoIcon\">info_outline</mat-icon> -->\r\n          <img class=\"content-image\" src=\"{{puzzle.image}}\">\r\n            <div class=\"content-details fadeIn-bottom\">\r\n              <mat-card-header>\r\n               <mat-card-subtitle class=\"puzzleDetails\"><strong>Created by:</strong> {{puzzle.creator}}</mat-card-subtitle>\r\n                <mat-card-subtitle class=\"puzzleDetails\"><strong>Created on:</strong> {{puzzle.created}}</mat-card-subtitle>\r\n                <mat-card-subtitle class=\"puzzleDetails\"><strong>Description:</strong> {{puzzle.description}}</mat-card-subtitle>\r\n              </mat-card-header>\r\n            </div>\r\n            <mat-card-title><strong>{{puzzle.name}}</strong></mat-card-title>\r\n            <mat-card-subtitle>Rating: {{puzzle.rating}}/5</mat-card-subtitle>\r\n            <mat-card-actions class=\"puzzleActions\">\r\n              <button mat-button class=\"btns\">SOLVE</button>\r\n              <button *ngIf=\"puzzle.showRating\" mat-button class=\"btns\" (click)=\"openAndCheck(puzzle.id)\">RATE</button>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { User } from 'src/app/models/User';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.css']\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n  resetPasswordForm: FormGroup;\r\n  verifyUser: any;\r\n  formError: string;\r\n  resetDone: string;\r\n\r\n  constructor(private formBuilder: FormBuilder, private api: APIService, private router: Router ) {}\r\n\r\n  //method for logging in user and getting the token associated with the said user\r\n  resetPassword(currentUser: User){\r\n    this.resetDone = '';\r\n    this.formError = '';\r\n    if(this.doPasswordsMatch(this.resetPasswordForm.controls['password'].value, this.resetPasswordForm.controls['confirmPassword'].value) == true){\r\n      this.verifyUser = {\r\n        \"username\": currentUser.email,\r\n        \"password\": currentUser.password\r\n      }\r\n      if(this.verifyUser != null){\r\n        this.api.resetPassword(this.verifyUser).subscribe(\r\n          () => {},\r\n          error => {//if status code other than in the 200 range returned, show error\r\n            if(error.status >= 401){\r\n              this.formError = error.error;\r\n            }\r\n            else\r\n            {\r\n              this.router.navigate(['/resetSuccess', { message: \"Password reset. Please login\" }]);\r\n            }\r\n          })\r\n      }\r\n    }\r\n    else\r\n    {\r\n      this.formError = \"Passwords do not match\";\r\n    }\r\n  }\r\n\r\n  //error messages used during login/register validation\r\n  error_messages = {\r\n    'email': [\r\n      { type: 'required', message: 'Email is required.' },\r\n      { type: 'email', message: 'Invalid email format.' }\r\n    ],\r\n    'password': [\r\n      { type: 'required', message: 'Password is required.' },\r\n      { type: 'minlength', message: 'Password must have at least 6 characters.' }\r\n    ],\r\n    'confirmPassword': [\r\n      { type: 'required', message: 'password is required.' },\r\n      { type: 'minlength', message: 'Password must have at least 6 characters.' }\r\n    ],\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.resetPasswordForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: ['', [Validators.required, Validators.minLength(6)]]\r\n    });\r\n  }\r\n\r\n  //checking if passwords match\r\n  doPasswordsMatch(firstPassword: string, secondPassword: string) {\r\n    if (firstPassword !== secondPassword) {\r\n        return false;\r\n    } else {\r\n      return true;\r\n    }\r\n}\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"flex-container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center none\">\r\n        <mat-card class=\"regForm\">\r\n          <mat-card-header>\r\n              <h1>Reset Password</h1>\r\n          </mat-card-header>\r\n            <mat-card-content class=\"regFormContent\">\r\n                <form [formGroup]=\"resetPasswordForm\" (ngSubmit)=\"resetPassword(resetPasswordForm.value)\">\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your email</mat-label>\r\n                        <input class=\"input\" matInput placeholder=\"john@doe.com\" formControlName=\"email\" required>\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.email\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"resetPasswordForm.get('email').hasError(error.type) && (resetPasswordForm.get('email').dirty || resetPasswordForm.get('email').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your password</mat-label>\r\n                        <input class=\"input\" matInput required formControlName=\"password\" type=\"password\">\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.password\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"resetPasswordForm.get('password').hasError(error.type) && (resetPasswordForm.get('password').dirty || resetPasswordForm.get('password').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <mat-form-field appearance=\"fill\">\r\n                            <mat-label>Confirm password</mat-label>\r\n                            <input class=\"input\" matInput  required formControlName=\"confirmPassword\" type=\"password\">\r\n                        </mat-form-field>\r\n                            <div>\r\n                                <ng-container *ngFor=\"let error of error_messages.confirmPassword\">\r\n                                    <mat-error class=\"error-message\" *ngIf=\"resetPasswordForm.get('confirmPassword').hasError(error.type) && (resetPasswordForm.get('confirmPassword').dirty || resetPasswordForm.get('confirmPassword').touched)\">\r\n                                        {{ error.message }}\r\n                                    </mat-error>\r\n                                </ng-container>\r\n                                <span id=\"passError\">{{formError}}</span>\r\n                            </div>\r\n                    </div>\r\n\r\n                    <button mat-raised-button type=\"submit\" [disabled]=\"!resetPasswordForm.valid\" class=\"btns\" id=\"one\">Submit</button>\r\n                    <a routerLink=\"/index\" mat-raised-button class=\"btns\" id=\"two\">Cancel</a>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-reset-success',\r\n  templateUrl: './reset-success.component.html',\r\n  styleUrls: ['./reset-success.component.css']\r\n})\r\nexport class ResetSuccessComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router ) {}\r\n\r\n  ngOnInit() {\r\n\r\n    let message = this.route.snapshot.paramMap.get('message');\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"flex-container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center none\">\r\n        <mat-card class=\"regForm\">\r\n            <mat-card-header>\r\n                <mat-card-title class=\"cardTitle\">Reset Password Successfully</mat-card-title>\r\n            </mat-card-header>\r\n            <mat-card-content class=\"regFormContent\">\r\n                    <p>Please login</p>\r\n                    <a routerLink=\"/login\" mat-raised-button class=\"btns\" id=\"two\">Login</a>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { User } from '../../models/User';\r\nimport { APIService } from '../../services/api.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  signUpForm: FormGroup;\r\n  newUser: any;\r\n  formError: string;\r\n\r\n  constructor(private formBuilder: FormBuilder, private api: APIService, private router: Router) {}\r\n\r\n  //method for creating a new user. A new JSON object is created and sent to the node api\r\n  createNewUser(createUser: any){\r\n    this.formError = '';\r\n    if(this.doPasswordsMatch(this.signUpForm.controls['password'].value, this.signUpForm.controls['confirmPassword'].value) == true){\r\n      this.newUser = {\r\n        \"name\": createUser.name,\r\n        \"username\": createUser.email,\r\n        \"password\": createUser.password\r\n      }\r\n      if(this.newUser != null){\r\n        this.api.createUser(this.newUser).subscribe(\r\n          data => {console.log(data);\r\n              this.router.navigate(['/login']);\r\n            },\r\n          error => {//if status code other than in the 200 range returned, show error\r\n            console.log('Error from API: ', error.error);\r\n            if(error.status >= 401){\r\n              this.formError = error.error;\r\n            }\r\n          })\r\n      }\r\n    }\r\n    else\r\n    {\r\n      this.formError = \"Passwords do not match\";\r\n    }\r\n  }\r\n\r\n  //error messages used during login/register validation\r\n  error_messages = {\r\n    'name': [\r\n      { type: 'required', message: 'Full name is required.' },\r\n      { type: 'pattern', message: 'Name can only consist of letters' }\r\n    ],\r\n    'email': [\r\n      { type: 'required', message: 'Email is required.' },\r\n      { type: 'email', message: 'Invalid email format.' }\r\n    ],\r\n    'password': [\r\n      { type: 'required', message: 'Password is required.' },\r\n      { type: 'minlength', message: 'Password must have at least 6 characters.' }\r\n    ],\r\n    'confirmPassword': [\r\n      { type: 'required', message: 'password is required.' },\r\n      { type: 'minlength', message: 'Password must have at least 6 characters.' }\r\n    ],\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.signUpForm = this.formBuilder.group({\r\n      name: ['', [Validators.required, Validators.pattern('[a-zA-Z ]*')]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: ['', [Validators.required, Validators.minLength(6)]]\r\n    });\r\n  }\r\n\r\n  //checking if passwords match\r\n  doPasswordsMatch(firstPassword: string, secondPassword: string) {\r\n        if (firstPassword !== secondPassword) {\r\n          //this.formError = \"Passwords do not match: \" + controlName + \" \" + matchingControlName;\r\n            return false;\r\n        } else {\r\n          //this.formError = \"Match: \" + controlName + \" \" + matchingControlName;\r\n          return true;\r\n        }\r\n    }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"flex-container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center none\">\r\n        <mat-card class=\"regForm\">\r\n            <mat-card-header>\r\n                <h1>Sign Up</h1>\r\n            </mat-card-header>\r\n            <mat-card-content class=\"regFormContent\">\r\n                <form [formGroup]=\"signUpForm\" (ngSubmit)=\"createNewUser(signUpForm.value)\">\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your full name</mat-label>\r\n                        <input class=\"input\" matInput placeholder=\"John Doe\" formControlName=\"name\" required >\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.name\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"signUpForm.get('name').hasError(error.type) && (signUpForm.get('name').dirty || signUpForm.get('name').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your email</mat-label>\r\n                        <input class=\"input\" matInput placeholder=\"john@doe.com\" formControlName=\"email\" required>\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.email\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"signUpForm.get('email').hasError(error.type) && (signUpForm.get('email').dirty || signUpForm.get('email').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your password</mat-label>\r\n                        <input class=\"input\" matInput required formControlName=\"password\" type=\"password\">\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.password\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"signUpForm.get('password').hasError(error.type) && (signUpForm.get('password').dirty || signUpForm.get('password').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Confirm password</mat-label>\r\n                        <input class=\"input\" matInput  required formControlName=\"confirmPassword\" type=\"password\">\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.confirmPassword\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"signUpForm.get('confirmPassword').hasError(error.type) && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                            <span id=\"passError\">{{formError}}</span>\r\n                        </div>\r\n                    </div>\r\n                    <button mat-raised-button type=\"submit\" [disabled]=\"!signUpForm.valid\" class=\"btn\" id=\"one\">Sign Up</button>\r\n\r\n                    <a routerLink=\"/index\" mat-raised-button color=\"accent\" class=\"btns\">Cancel</a>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-rate-dialog',\r\n  templateUrl: './rate-dialog.component.html',\r\n  styleUrls: ['./rate-dialog.component.css']\r\n})\r\nexport class RateDialogComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    private dialogRef: MatDialogRef<RateDialogComponent>) { }\r\n\r\n    error_messages = {\r\n      'rating': [\r\n        { type: 'pattern', message: 'Number must be between 1 and 5' }\r\n      ]\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      rating: ['', Validators.pattern(\"[1-5]\")]\r\n    })\r\n  }\r\n\r\n  submit(form){\r\n    this.dialogRef.close(`${form.rating}`);\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"submit(form.value)\">\r\n  <h1 mat-dialog-title>Rate Puzzle (out of 5)</h1>\r\n  <mat-dialog-content>\r\n    <mat-form-field>\r\n      <input matInput type=\"number\" min=\"1\" max=\"5\" formControlName=\"rating\" placeholder=\"Enter Rating\" ngControl=\"rating\">\r\n    </mat-form-field>\r\n    <div>\r\n        <ng-container *ngFor=\"let error of error_messages.rating\">\r\n            <mat-error class=\"error-message\" *ngIf=\"form.get('rating').hasError(error.type) && (form.get('rating').dirty || form.get('rating').touched)\">\r\n                {{ error.message }}\r\n            </mat-error>\r\n        </ng-container>\r\n    </div>\r\n\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button mat-button type=\"submit\" [disabled]=\"!form.valid\">Submit</button>\r\n    <button mat-button type=\"button\" mat-dialog-close>Cancel</button>\r\n  </mat-dialog-actions>\r\n</form>\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { User } from '../models/User';\r\nimport { Puzzle } from '../models/Puzzle';\r\nimport { PuzzleRating } from '../models/PuzzleRating';\r\nimport {HttpHeaders} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class APIService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  /**\r\n   * User endpoints start here\r\n   */\r\n  //create new user\r\n  createUser(newUser: User){\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'} ) };\r\n    return this.http.post('https://prometheuspuzzles.herokuapp.com/api/users/createUser',newUser, httpOptions);\r\n  }\r\n\r\n  loginUser(currentUser: User){\r\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n    return this.http.post('https://prometheuspuzzles.herokuapp.com/api/users/login', currentUser, httpOptions);\r\n  }\r\n\r\n  resetPassword(currentUser: User){\r\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n    return this.http.put('https://prometheuspuzzles.herokuapp.com/api/users/resetPassword', currentUser, httpOptions);\r\n  }\r\n\r\n  getUser(token: any){\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'} ) };\r\n    return this.http.post('https://prometheuspuzzles.herokuapp.com/api/users/getUser',token, httpOptions);\r\n  }\r\n\r\n  updateName(currentUser: User){\r\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n    return this.http.put('https://prometheuspuzzles.herokuapp.com/api/users/updateName', currentUser, httpOptions);\r\n  }\r\n\r\n  updateUsername(currentUser: User){\r\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n    return this.http.put('https://prometheuspuzzles.herokuapp.com/api/users/updateUsername', currentUser, httpOptions);\r\n  }\r\n\r\n  getPuzzlesByUser(token: any): Observable<any[]> {\r\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n    return this.http.post<any[]>('https://prometheuspuzzles.herokuapp.com/api/users/getPuzzlesByUser', token, httpOptions);\r\n  }\r\n\r\n  getPuzzleRatingsByUser(token: any): Observable<any[]>{\r\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n    return this.http.post<any[]>('https://prometheuspuzzles.herokuapp.com/api/users/getPuzzleRatingsByUser', token, httpOptions);\r\n  }\r\n\r\n  /**\r\n   * User endpoints end here\r\n   */\r\n\r\n\r\n/**\r\n* Puzzle endpoints start here\r\n*/\r\ngetAllPuzzles(){\r\n  return this.http.get('https://prometheuspuzzles.herokuapp.com/api/puzzles/getAllPuzzles');\r\n}\r\n\r\ngetAllPuzzleByID(puzzleID: number){\r\n  return this.http.get('https://prometheuspuzzles.herokuapp.com/api/puzzles/getPuzzleByID?Id=' + puzzleID);\r\n}\r\n\r\ncreateNewPuzzle(puzzle: Puzzle){\r\n  const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n  return this.http.post('https://prometheuspuzzles.herokuapp.com/api/puzzles/createPuzzle', puzzle, httpOptions);\r\n}\r\n\r\ncreateNewPuzzleRating(rating: PuzzleRating){\r\n  const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n  return this.http.post('https://prometheuspuzzles.herokuapp.com/api/puzzles/createPuzzleRating', rating, httpOptions);\r\n}\r\n\r\ngetAllPuzzleRatings(){\r\n  return this.http.get('https://prometheuspuzzles.herokuapp.com/api/puzzles/getAllPuzzleRatings');\r\n}\r\n\r\ngetSearchedPuzzles(term: any){\r\n  return this.http.get('https://prometheuspuzzles.herokuapp.com/api/puzzles/getSearchedPuzzles/' + term);\r\n}\r\n\r\nsharePuzzle(puzzle: any){\r\n  const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n  return this.http.put('https://prometheuspuzzles.herokuapp.com/api/puzzles/sharePuzzle', puzzle, httpOptions);\r\n}\r\n\r\nstopSharingPuzzle(puzzle: any){\r\n  const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n  return this.http.put('https://prometheuspuzzles.herokuapp.com/api/puzzles/stopSharingPuzzle', puzzle, httpOptions);\r\n}\r\n\r\n/**\r\n* Puzzle endpoints end here\r\n*/\r\n}\r\n","import { width, height, setSites, setGenerateButtonClicked, initializeData, calculateDistancesFromSitesToPoint, \r\n\tequidistantPointsPresent, generateSiteBoundaries, createPieces } from 'src/assets/js/manualCreation.js'\r\n\r\n///The structure of each individual/chromosome object\r\nlet Chromosome = {\r\n\tsites: [],\r\n\tfitness: -1,\r\n};\r\n\r\n///The structure of each site object\r\nlet Site = {\r\n\tx: 0,\r\n\ty: 0,\r\n\tsurfaceArea: 0,\r\n}\r\n\r\nlet generatePuzzleAIButton;\r\nlet tempWidth, tempHeight;\r\nlet totalSurfaceArea;\r\n\r\nlet generationSize = 10 + 1;\r\nlet tournamentSize = 4;\r\nlet maximumIterations = 100;\r\nlet seedString = 'apples';\r\n\r\nlet sliders = [];\r\nlet labels = [];\r\nlet numberOfSites = 6;\r\nlet desiredProportions = [0.40, 0.20, 0.10, 0.10, 0.10, 0.10];\r\nlet groupDistribution = [];\r\n\r\nfunction copyObject(obj)\r\n{\r\n    return JSON.parse(JSON.stringify(obj));\r\n}\r\n\r\nfunction xmur3(str) {\r\n    for(var i = 0, h = 1779033703 ^ str.length; i < str.length; i++)\r\n        h = Math.imul(h ^ str.charCodeAt(i), 3432918353),\r\n        h = h << 13 | h >>> 19;\r\n    return function() {\r\n        h = Math.imul(h ^ h >>> 16, 2246822507);\r\n        h = Math.imul(h ^ h >>> 13, 3266489909);\r\n        return (h ^= h >>> 16) >>> 0;\r\n    }\r\n}\r\n\r\nfunction mulberry32(a) {\r\n    return function() {\r\n      var t = a += 0x6D2B79F5;\r\n      t = Math.imul(t ^ t >>> 15, t | 1);\r\n      t ^= t + Math.imul(t ^ t >>> 7, t | 61);\r\n      return ((t ^ t >>> 14) >>> 0) / 4294967296;\r\n    }\r\n}\r\n\r\nlet seed = xmur3(seedString);\r\nlet rand = mulberry32(seed());\r\n\r\nfunction random(max)\r\n{\r\n    return Math.ceil(rand() * max) - 1;\r\n}\r\n\r\nfunction expandPuzzle(sites, factor)\r\n{\r\n\tfor(let i = 0; i < sites.length; i++)\r\n\t{\r\n\t\tsites[i].x = sites[i].x * factor;\r\n\t\tsites[i].y = sites[i].y * factor;\r\n\t}\r\n\r\n\treturn sites;\r\n}\r\n\r\nexport function initializeDataAI()\r\n{\r\n\tinitializeData();\r\n\tgeneratePuzzleAIButton = document.getElementById('generatePuzzleAIButton');\r\n\tgeneratePuzzleAIButton.addEventListener('mousedown', generatePuzzleAI);\r\n\tgeneratePuzzleAIButton.remove();\r\n\r\n\tdocument.getElementById('nextButton').addEventListener('mousedown', displaySlidersCard);\r\n}\r\n\r\nfunction displaySlidersCard()\r\n{\r\n\tnumberOfSites = document.getElementById('numberOfPiecesInputBox').value;\r\n\r\n\tgroupDistribution.push(document.getElementById('numberOfPiecesInputBox1').value);\r\n\tgroupDistribution.push(document.getElementById('numberOfPiecesInputBox2').value);\r\n\tgroupDistribution.push(document.getElementById('numberOfPiecesInputBox3').value);\r\n\r\n\tgenerateSliders(3);\r\n\t\r\n\tdocument.getElementById('inputContainer').appendChild(generatePuzzleAIButton);\r\n}\r\n\r\nfunction generatePuzzleAI()\r\n{\r\n\tdesiredProportions = [];\r\n\r\n\tfor(let i = 0; i < 3; i++)\r\n\t{\r\n\t\tlet proportion = (sliders[i].value / groupDistribution[i]) / 100;\r\n\r\n\t\tfor(let counter = 0; counter < groupDistribution[i]; counter++)\r\n\t\t\tdesiredProportions.push(proportion);\r\n\t}\r\n\r\n\tdesiredProportions.sort( function(a, b) { return b - a } );\r\n\r\n\tdocument.getElementById('inputContainer').innerHTML = '';\r\n\r\n\tlet sites = run();\r\n\tsites = expandPuzzle(sites, 10);\r\n\r\n\tsetSites(sites);\r\n\tsetGenerateButtonClicked(true);\r\n\tgenerateSiteBoundaries();\r\n\tcreatePieces();\r\n}\r\n\r\nfunction generateSliders(numberOfSliders)\r\n{\r\n\tlet inputContainer = document.getElementById('inputContainer');\r\n\tlet defaultValue = 100/numberOfSliders;\r\n\r\n\tinputContainer.innerHTML = '';\r\n\r\n\tfor(let i = 0; i < numberOfSliders; i++)\r\n\t{\r\n\t\tlet slider = document.createElement('input');\r\n\t\tslider.type = 'range';\r\n\t\tslider.min = 1.00;\r\n\t\tslider.max = 100.00 - numberOfSliders + 1;\r\n\t\tslider.value = defaultValue;\r\n\t\tslider.previousValue = defaultValue;\r\n\t\tslider.sliderid = i;\r\n\t\tslider.step = 0.01;\r\n\t\t\r\n\t\tslider.addEventListener('input', function() {\r\n\t\t\tlet difference = this.previousValue - this.value;\r\n\t\t\tlet distributedValue = (difference/( numberOfSliders - 1 )).toFixed(2);\r\n\t\t\tlet leftover = 0;\r\n\r\n\t\t\tfor(let i = 0 ; i < numberOfSliders; i++)\r\n\t\t\t{\r\n\t\t\t\tif(i != this.sliderid)\r\n\t\t\t\t{\r\n\t\t\t\t\tlet tempValue = ( parseFloat(sliders[i].value) + parseFloat(distributedValue) );\r\n\t\t\t\t\tif(tempValue >= 1.00)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(leftover != 0 && ( tempValue + leftover ) >= 1.00)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttempValue += leftover;\r\n\t\t\t\t\t\t\tleftover = 0;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tsliders[i].value = tempValue;\r\n\t\t\t\t\t\tsliders[i].previousValue = tempValue;\r\n\t\t\t\t\t\tlabels[i].innerHTML = parseInt(tempValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tleftover += parseFloat(distributedValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor(let i = 0; leftover != 0 && i < numberOfSliders; i++)\r\n\t\t\t{\r\n\t\t\t\tif(i != this.sliderid)\r\n\t\t\t\t{\r\n\t\t\t\t\tlet tempValue = parseFloat(sliders[i].value) + leftover;\r\n\t\t\t\t\tif(tempValue >= 1.00)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsliders[i].value = tempValue;\r\n\t\t\t\t\t\tsliders[i].previousValue = tempValue;\r\n\t\t\t\t\t\tlabels[i].innerHTML = parseInt(tempValue);\r\n\t\t\t\t\t\tleftover = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.previousValue = this.value;\r\n\t\t\tlabels[this.sliderid].innerHTML = parseInt(this.value);\r\n\t\t});\r\n\r\n\t\tlet headerLabel = document.createElement('label');\r\n\t\theaderLabel.innerHTML = 'Group ' + (i+1);\r\n\r\n\t\tlet valueLabel = document.createElement('label');\r\n\t\tvalueLabel.innerHTML = defaultValue.toFixed(0);\r\n\r\n\t\tlet br = document.createElement('br');\r\n\r\n\t\tsliders.push(slider);\r\n\t\tlabels.push(valueLabel);\r\n\r\n\r\n\t\tinputContainer.appendChild(headerLabel);\r\n\t\tinputContainer.appendChild(slider);\r\n\t\tinputContainer.appendChild(valueLabel);\r\n\t\tinputContainer.appendChild(br);\r\n\t}\r\n}\r\n\r\n///Executes the genetic algorithm and returns the resulting site array \r\nfunction run()\r\n{\r\n\tlet currentGeneration = [], nextGeneration = [];\r\n\tlet parentX, parentY, children;\r\n\tlet x, y;\r\n\ttempWidth = width/10;\r\n\ttempHeight = height/10;\r\n\ttotalSurfaceArea = tempWidth * tempHeight;\r\n\r\n\tnextGeneration = initializeGeneration();\r\n\tfor(let generation = 0; generation < maximumIterations; generation++)\r\n\t{\r\n\t\tcurrentGeneration = nextGeneration;\r\n\t\tnextGeneration = [];\r\n\t\tnextGeneration.push( getFittest(currentGeneration) );\r\n\t\tfor(let i = 0; i < generationSize - 1; i+=2)\r\n\t\t{\r\n\t\t\tparentX = runTournament(currentGeneration);\r\n\t\t\tparentY = runTournament(currentGeneration);\r\n\t\t\tchildren = crossover(parentX, parentY);\r\n\t\t\tmutate(children[0]);\r\n\t\t\tmutate(children[1]);\r\n\t\t\tcalculateAndSetFitness(children[0]);\r\n\t\t\tcalculateAndSetFitness(children[1]);\r\n\t\t\tnextGeneration.push(...children);\r\n\t\t}\r\n\t}\r\n\r\n\tconsole.log(nextGeneration);\r\n\tconsole.log('done!');\r\n\treturn getFittest(nextGeneration).sites;\r\n}\r\n\r\n///Returns the fittest chromosome from generation\r\nfunction getFittest(generation)\r\n{\r\n\tlet fittestChromosome = null;\r\n\tfittestChromosome = generation[0];\r\n\r\n\tfor(let i = 1; i < generationSize; i++)\r\n\t\tif(generation[i].fitness < fittestChromosome.fitness)\r\n\t\t\tfittestChromosome = generation[i];\r\n\r\n\treturn fittestChromosome;\r\n}\r\n\r\n///Randomly selected a site and a movement direction; then proceed to execute movement using a random offset\r\nfunction mutate(chromosome)\r\n{\r\n\t// let siteIndex = random(numberOfSites);\r\n\tlet selectedSite = chromosome.sites[random(numberOfSites)];\r\n\tlet offset = random(5);\r\n\tlet movementDirection = random(4);\r\n\r\n\t///Move site to the right by offset (increment x by offset), or move to the left if at board edge\r\n\tif(movementDirection == 0)\r\n\t{\r\n\t\tif(selectedSite.x + offset < tempWidth)\r\n\t\t\tselectedSite.x = selectedSite.x + offset;\r\n\t\telse\r\n\t\t\tselectedSite.x = selectedSite.x - offset;\r\n\t}\r\n\t///Move site to the left by offset (decrement x by offset), or move to the right if at the board edge\r\n\telse if(movementDirection == 1)\r\n\t{\r\n\t\tif(selectedSite.x - offset > 0)\r\n\t\t\tselectedSite.x = selectedSite.x - offset;\r\n\t\telse\r\n\t\t\tselectedSite.x = selectedSite.x + offset;\r\n\t}\r\n\t///Move site upwards by offset (decrement y by offset), or move downwards if at the board edge\r\n\telse if(movementDirection == 2)\r\n\t{\r\n\t\tif(selectedSite.y - offset > 0)\r\n\t\t\tselectedSite.y = selectedSite.y - offset;\r\n\t\telse\r\n\t\t\tselectedSite.y = selectedSite.y + offset;\r\n\t}\r\n\t///Move site downwards by offset (increment y by offset), or move upwards if at board edge\r\n\telse if(movementDirection == 3)\r\n\t{\r\n\t\tif(selectedSite.y + offset < tempHeight)\r\n\t\t\tselectedSite.y = selectedSite.y + offset;\r\n\t\telse\r\n\t\t\tselectedSite.y = selectedSite.y - offset;\r\n\t}\r\n}\r\n\r\n/**\r\n\tCrossover operation; randomly select a site index and swap the sites located on said index. \r\n\tThis function will create two new children, swap their sites and return an array containing them.\r\n**/\r\nfunction crossover(chromosomeX, chromosomeY)\r\n{\r\n\tlet swapIndex = random(numberOfSites);\r\n\tlet childX = copyObject(chromosomeX);\r\n\tlet childY = copyObject(chromosomeY);\r\n\r\n\tlet tempSite = childX.sites[swapIndex];\r\n\tchildX.sites[swapIndex] = childY.sites[swapIndex];\r\n\tchildY.sites[swapIndex] = tempSite;\r\n\r\n\treturn [childX, childY];\r\n}\r\n\r\n///Tournament selection of parent for next generation - fittest from a random bunch is returned.\r\nfunction runTournament(generation)\r\n{\r\n\tlet chosenChromosome, fittestChromosome = null;\r\n\r\n\tfor(let i = 0; i < tournamentSize; i++)\r\n\t{\r\n\t\tchosenChromosome = generation[random(generationSize)];\r\n\t\tif(fittestChromosome == null || chosenChromosome.fitness < fittestChromosome.fitness)\r\n\t\t\tfittestChromosome = chosenChromosome;\r\n\t}\r\n\r\n\treturn fittestChromosome;\r\n}\r\n\r\n///Create and return the initial generation of chromosomes\r\nfunction initializeGeneration()\r\n{\r\n\tlet currentGeneration = [];\r\n\tfor(let i = 0; i < generationSize; i++)\r\n\t{\r\n\t\tlet newChromosome = copyObject(Chromosome);\r\n\t\tfor(let siteIndex = 0; siteIndex < numberOfSites; siteIndex++)\r\n\t\t{\r\n\t\t\tlet tempSite = copyObject(Site);\r\n\t\t\ttempSite.x = random(tempWidth + 1);\r\n\t\t\ttempSite.y = random(tempHeight + 1);\r\n\t\t\tnewChromosome.sites.push(tempSite);\r\n\t\t}\r\n\r\n\t\tcalculateAndSetFitness(newChromosome);\r\n\t\tcurrentGeneration.push(newChromosome);\r\n\t}\r\n\r\n\treturn currentGeneration;\r\n}\r\n\r\n///Calculate and set the fitness of a chromosome\r\nfunction calculateAndSetFitness(chromosome)\r\n{\r\n\tdetermineAndSetSiteBoundaries(chromosome);\r\n\tsortSites(chromosome);\r\n\tlet fitness = 0, difference;\r\n\r\n\tfor(let i = 0; i < desiredProportions.length; i++)\r\n\t{\r\n\t\tdifference = ( desiredProportions[i] * totalSurfaceArea ) - chromosome.sites[i].surfaceArea;\r\n\t\tif(difference < 0)\r\n\t\t\tdifference *= -1;\r\n\t\tfitness += difference;\r\n\t}\r\n\r\n\tchromosome.fitness = fitness;\r\n}\r\n\r\n///Sort the sites according to surface area from highest to lowest\r\nfunction sortSites(chromosome)\r\n{\r\n\tlet sites = chromosome.sites;\r\n\tsites.sort(function(siteA, siteB) { return \tsiteB.surfaceArea - siteA.surfaceArea });\r\n}\r\n\r\n///Generate the boundaries around the sites\r\nfunction determineAndSetSiteBoundaries(chromosome)\r\n{\r\n\tfor(let i = 0; i < numberOfSites; i++)\r\n\t\tchromosome.sites[i].surfaceArea = 0;\r\n\t\r\n\tfor(let row = 0; row < tempHeight; row++)\r\n\t{\r\n\t\tfor(let col = 0; col < tempWidth; col++)\r\n\t\t{\r\n\t\t\tlet distances = calculateDistancesFromSitesToPoint(col, row, chromosome.sites);\r\n\t\t\tlet equidistantPoints = equidistantPointsPresent(distances);\r\n\r\n\t\t\tchromosome.sites[equidistantPoints[0]].surfaceArea += 1;\r\n\t\t}\r\n\t}\r\n}","import Konva from 'konva';\r\nexport { width, height, setSites, setGenerateButtonClicked, initializeData, calculateDistancesFromSitesToPoint,\r\n\tequidistantPointsPresent, generateSiteBoundaries, createPieces };\r\n\r\nlet apiURL = \"http://localhost:3200/api/puzzles/createPuzzle\";\r\nlet distanceMetric = 'euclidean';\r\n\r\nlet puzzleImage;\r\nlet canvas;\r\nlet canvasCoords;\r\nlet width =  500;\r\nlet height = 500;\r\nlet stage;\r\nlet layer;\r\nlet square;\r\nlet pointsArray = [];\r\nlet sites = [];\r\nlet siteBoundaries = [];\r\nlet precision = 0;\r\nlet colors = ['Plum', 'Tomato', 'Orange', 'Violet', 'Gray', 'MediumSeaGreen', 'LightGray', 'SlateBlue', 'Brown', 'Aquamarine',\r\n\t'AntiqueWhite', 'Red', 'Green'];\r\nlet hoverOverPoint = false;\r\nlet generateButtonClicked = false;\r\n//let token = 'KQlH2g5Io_AwCwotB4TUC';\r\nlet piecesJSONObject = {\r\n\t'pieces' : []\r\n};\r\n\r\n\r\n///Initialize data and set functions for buttons\r\n\r\nfunction initializeData()\r\n{\r\n\tcanvas = document.getElementById('container');\r\n\tstage = new Konva.Stage({\r\n\t\tcontainer: 'container',\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t});\r\n\r\n\tlayer = new Konva.Layer();\r\n\r\n\tsquare = new Konva.Rect({\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\tstroke: 'black',\r\n\t\tstrokeWidth: 2,\r\n\r\n\t});\r\n\r\n\tlayer.add(square);\r\n\tstage.add(layer);\r\n\r\n\tcanvas.addEventListener('mousedown', function(event){\r\n\t\tif(!generateButtonClicked && !hoverOverPoint)\r\n\t\t{\r\n\t\t\tcanvasCoords = canvas.getBoundingClientRect();\r\n\t\t\tlet x = event.clientX - canvasCoords.x;\r\n\t\t\tlet y = event.clientY - canvasCoords.y;\r\n\r\n\t\t\tlet point = createPoint(x, y);\r\n\r\n\t\t\tlayer.add(point);\r\n\t\t\tlayer.draw();\r\n\t\t\tconsole.log(\"X: \" + x + \" Y: \" + y);\r\n\t\t}\r\n\t});\r\n\r\n\tif(document.getElementById('generatePuzzleButton') != null)\r\n\t\tdocument.getElementById('generatePuzzleButton').addEventListener('mousedown', generatePuzzle);\r\n\r\n\tdocument.getElementById('euclideanButton').addEventListener('mousedown', function(){\r\n\t\tsetDistanceMetric('euclidean');\r\n\t});\r\n\r\n\tdocument.getElementById('manhattanButton').addEventListener('mousedown', function(){\r\n\t\tsetDistanceMetric('manhattan');\r\n\t});\r\n\r\n\t// = token;\r\n\r\n\tdocument.getElementById('saveButton').addEventListener('mousedown', function() {\r\n\t\tsavePuzzle(false);\r\n\t});\r\n\r\n\t// document.getElementById('saveAndSubmitButton').addEventListener('mousedown', function() {\r\n\t// \t// let puzzleImage = stage.toDataURL({ pixelRatio: 0.25 });\r\n\t// \t// document.getElementById('testingImg').src = puzzleImage;\r\n\t// \tsavePuzzle(true);\r\n\t// });\r\n}\r\n\r\n///Create a post ajax request and send it to the API in order to save the user's created puzzle\r\nfunction savePuzzle(share)\r\n{\r\n\tlet puzzleName = document.getElementById('puzzleNameInputBox').value;\r\n\tlet puzzleDescription = document.getElementById('puzzleDescriptionInputBox').value;\r\n\r\n\tlet puzzleImage = stage.toDataURL({ pixelRatio: 0.25 });\r\n\r\n\tlet token = document.getElementById('tokenLabel').innerHTML;\r\n\r\n\tlet jsonData = {\r\n\t\ttoken: token,\r\n\t\tname: puzzleName,\r\n\t\tdescription: puzzleDescription,\r\n\t\tpuzzleObject: piecesJSONObject,\r\n\t\timage: puzzleImage,\r\n\t\tshared: share\r\n\t};\r\n\r\n\t$.ajax({\r\n\t\ttype: 'POST',\r\n\t\turl: apiURL,\r\n\t\theaders: {\r\n\t\t\t'Access-Control-Allow-Origin' : '*'\r\n\t\t},\r\n\t\tcontentType: 'application/json',\r\n\t\tdata: JSON.stringify(jsonData),\r\n\t\tdataType: 'json',\r\n\t\tsuccess: function(data, status) {\r\n\t\t\tconsole.log(data);\r\n\t\t\tconsole.log(status);\r\n\t\t},\r\n\t\terror: function(data, status) {\r\n\t\t\tconsole.log(data);\r\n\t\t\tconsole.log(status);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n///Set the selected distance metric for the puzzle\r\nfunction setDistanceMetric(metric)\r\n{\r\n\tdistanceMetric = metric;\r\n}\r\n\r\n///Set generateButtonClicked to true to prevent user from clicking it any further\r\nfunction setGenerateButtonClicked(bool)\r\n{\r\n\tgenerateButtonClicked = bool;\r\n}\r\n\r\n///Set the sites array\r\nfunction setSites(tempSites)\r\n{\r\n\tsites = tempSites;\r\n}\r\n\r\n///Create a visual representation of where the user clicks\r\nfunction createPoint(x, y)\r\n{\r\n\tlet point = new Konva.Circle({\r\n\t\tx: x,\r\n\t\ty: y,\r\n\t\tradius: 1,\r\n\t\tstroke: 'black',\r\n\t\tstrokeWidth: 4,\r\n\t\tdraggable: true\r\n\t});\r\n\r\n\tpoint.on('mouseover', function (event){\r\n\t\tdocument.onmousemove = function(event) {\r\n\t\t\tcanvasCoords = canvas.getBoundingClientRect();\r\n\t\t\tpoint.x(event.clientX - canvasCoords.x);\r\n\t\t\tpoint.y(event.clientY - canvasCoords.y);\r\n\t\t};\r\n\r\n\t\thoverOverPoint = true;\r\n\t\tdocument.body.style.cursor = 'pointer';\r\n\t});\r\n\r\n\tpoint.on('mouseout', function(event) {\r\n\t\tdocument.onmousemove = null;\r\n\t\thoverOverPoint = false;\r\n\t\tdocument.body.style.cursor = 'default';\r\n\t});\r\n\r\n\tpoint.on('dblclick', function(event) {\r\n\t\tconsole.log('double clicked!');\r\n\t\t// layer.remove(point);\r\n\t\tdocument.onmousemove = null;\r\n\t\thoverOverPoint = false;\r\n\t\tdocument.body.style.cursor = 'default';\r\n\t\tpoint.destroy();\r\n\t\tlayer.draw();\r\n\t});\r\n\r\n\treturn point;\r\n}\r\n\r\n///Calls the necessary functions to generate puzzle's vertiecs as well as the visual representation\r\nfunction generatePuzzle()\r\n{\r\n\t//Testing data\r\n\t// {\"sites\":[78,108,300,102,100,247,333,281,184,331],\"queries\":[]}\r\n\t// sites = [\r\n\t// {\r\n\t// \tx:78,\r\n\t// \ty:108,\r\n\t// },\r\n\t// {\r\n\t// \tx:300,\r\n\t// \ty:102,\r\n\t// },\r\n\t// {\r\n\t// \tx:100,\r\n\t// \ty:247,\r\n\t// },\r\n\t// {\r\n\t// \tx:333,\r\n\t// \ty:281,\r\n\t// },\r\n\t// {\r\n\t// \tx:184,\r\n\t// \ty:331,\r\n\t// }\r\n\t// ];\r\n\r\n\tpointsArray = layer.getChildren(function(node) {\r\n\t\treturn node.getClassName() === 'Circle';\r\n\t});\r\n\r\n\tfor (let i = pointsArray.length - 1; i >= 0; i--) {\r\n\t\tsites.push({\r\n\t\t\tx: pointsArray[i].attrs.x,\r\n\t\t\ty: pointsArray[i].attrs.y,\r\n\t\t});\r\n\t}\r\n\r\n\tlayer.destroyChildren();\r\n\r\n\t///This makes sure that the generate button will only generate once\r\n\tgenerateButtonClicked = true;\r\n\r\n\tgenerateSiteBoundaries();\r\n\tcreatePieces();\r\n}\r\n\r\n///Creates the puzzle pieces from the siteBoundaries for each site(position selected by the user)\r\nfunction createPieces()\r\n{\r\n\tlet colorCount = colors.length;\r\n\tfor(let i = 0; i < sites.length; i++)\r\n\t{\r\n\t\tlet trimmedPoints = trimPoints(siteBoundaries[i]);\r\n\t\tlet piece = new Konva.Line({\r\n\t\t\tpoints: trimmedPoints,\r\n\t\t\tstroke: colors[i % colorCount],\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tdraggable: true,\r\n\t\t});\r\n\r\n\t\tpiece.on('mouseover', function (){\r\n\t\t\tdocument.body.style.cursor = 'pointer';\r\n\t\t});\r\n\r\n\t\tpiece.on('mouseout', function() {\r\n\t\t\tdocument.body.style.cursor = 'default';\r\n\t\t});\r\n\r\n\t\tpiecesJSONObject.pieces.push(trimmedPoints);\r\n\t\tlayer.add(piece);\r\n\t}\r\n\tlayer.draw();\r\n\tpiecesJSONObject = JSON.stringify(piecesJSONObject);\r\n}\r\n\r\n///Shortens the array of vertices for each puzzle piece\r\nfunction trimPoints(pointArray)\r\n{\r\n\tlet trimmedPoints = [];\r\n\tlet lastPointCol = -1;\r\n\tlet firstPointCol = pointArray[0];\r\n\tlet currentRow = pointArray[1];\r\n\tlet crissCross = 1;\r\n\r\n\tfor(let index = 0; index < pointArray.length; index+=2)\r\n\t{\r\n\t\tif(currentRow != pointArray[index+1])\r\n\t\t{\r\n\t\t\tif(crissCross == 1)\r\n\t\t\t{\r\n\t\t\t\ttrimmedPoints.push(firstPointCol, currentRow);\r\n\t\t\t\ttrimmedPoints.push(lastPointCol, currentRow);\r\n\t\t\t\tcrissCross = -1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttrimmedPoints.push(lastPointCol, currentRow);\r\n\t\t\t\ttrimmedPoints.push(firstPointCol, currentRow);\r\n\t\t\t\tcrissCross - 1;\r\n\t\t\t}\r\n\r\n\t\t\tfirstPointCol = pointArray[index];\r\n\t\t\tlastPointCol = pointArray[index];\r\n\t\t\tcurrentRow = pointArray[index+1];\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tlastPointCol = pointArray[index];\r\n\t\t}\r\n\t}\r\n\r\n\treturn trimmedPoints;\r\n}\r\n\r\n///Generate the boundaries around the sites\r\nfunction generateSiteBoundaries()\r\n{\r\n\tfor(let i = 0; i < sites.length; i++)\r\n\t\tsiteBoundaries[i] = [];\r\n\r\n\tfor(let row = 0; row < height; row++)\r\n\t{\r\n\t\tfor(let col = 0; col < width; col++)\r\n\t\t{\r\n\t\t\tlet distances = calculateDistancesFromSitesToPoint(col, row, sites);\r\n\t\t\tlet equidistantPoints = equidistantPointsPresent(distances);\r\n\r\n\t\t\tsiteBoundaries[equidistantPoints[0]].push(col);\r\n\t\t\tsiteBoundaries[equidistantPoints[0]].push(row);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n///Determines which site is closest to a pixel position\r\nfunction equidistantPointsPresent(distances)\r\n{\r\n\tlet returnArray = [];\r\n\tlet minimumDistance = Math.min(...distances);\r\n\r\n\tif(distanceMetric === 'euclidean')\r\n\t\tminimumDistance = minimumDistance.toFixed(precision) + '';\r\n\r\n\tlet index = 0, counter = 0;\r\n\r\n\twhile(index != -1)\r\n\t{\r\n\t\tindex = distances.indexOf(minimumDistance);\r\n\t\tif(index != -1)\r\n\t\t{\r\n\t\t\treturnArray.push(index+counter);\r\n\t\t\tdistances.splice(index, 1);\r\n\t\t\tcounter++;\r\n\t\t}\r\n\t}\r\n\r\n\treturn returnArray;\r\n}\r\n\r\n///Calculates the distances from each site to pixel in position (xOfPoint, yOfPoint) and returns an array\r\nfunction calculateDistancesFromSitesToPoint(xOfPoint, yOfPoint, sitePoints)\r\n{\r\n\tlet result = [];\r\n\tfor(let i = 0; i < sitePoints.length; i++)\r\n\t\tresult.push(calculateDistance(xOfPoint, yOfPoint, sitePoints[i].x, sitePoints[i].y));\r\n\r\n\treturn result;\r\n}\r\n\r\n///Calculates the distance from point1 to point2 using the selected distance metrix\r\nfunction calculateDistance(point1X, point1Y, point2X, point2Y)\r\n{\r\n\tif(distanceMetric === 'euclidean')\r\n\t\treturn calculateEuclideanDistance(point1X, point1Y, point2X, point2Y);\r\n\telse if(distanceMetric === 'manhattan')\r\n\t\treturn calculateManhattanDistance(point1X, point1Y, point2X, point2Y);\r\n}\r\n\r\n///Calculates and returns the Euclidean distance\r\nfunction calculateEuclideanDistance(point1X, point1Y, point2X, point2Y)\r\n{\r\n\tlet result = Math.pow( Math.pow( point1X - point2X, 2 ) + Math.pow( point1Y - point2Y, 2 ), 0.5 );\r\n\treturn result.toFixed(precision);\r\n}\r\n\r\n///Calculates and returns the Manhattan distance\r\nfunction calculateManhattanDistance(point1X, point1Y, point2X, point2Y)\r\n{\r\n\tlet resultX = point1X - point2X;\r\n\tif(resultX < 0)\r\n\t\tresultX *= -1;\r\n\tlet resultY = point1Y - point2Y;\r\n\tif(resultY < 0)\r\n\t\tresultY *= -1;\r\n\tlet result = resultX + resultY;\r\n\treturn result;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}