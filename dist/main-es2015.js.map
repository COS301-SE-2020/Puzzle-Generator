{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/pages/aicreate/aicreate.component.ts","./src/app/pages/aicreate/aicreate.component.html","./src/app/pages/create/create.component.ts","./src/app/pages/create/create.component.html","./src/app/pages/index/index.component.ts","./src/app/pages/index/index.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/profile-puzzles/profile-puzzles.component.ts","./src/app/pages/profile-puzzles/profile-puzzles.component.html","./src/app/pages/profile-ratings/profile-ratings.component.ts","./src/app/pages/profile-ratings/profile-ratings.component.html","./src/app/pages/profile/profile.component.ts","./src/app/pages/profile/profile.component.html","./src/app/pages/ratings/RatingsArr.ts","./src/app/pages/ratings/puzzleArr.ts","./src/app/pages/ratings/ratings.component.ts","./src/app/pages/ratings/ratings.component.html","./src/app/pages/reset-password/reset-password.component.ts","./src/app/pages/reset-password/reset-password.component.html","./src/app/pages/reset-success/reset-success.component.ts","./src/app/pages/reset-success/reset-success.component.html","./src/app/pages/signup/signup.component.ts","./src/app/pages/signup/signup.component.html","./src/app/rate-dialog/rate-dialog.component.ts","./src/app/rate-dialog/rate-dialog.component.html","./src/app/services/api.service.ts","./src/assets/js/aiCreation.js","./src/assets/js/manualCreation.js","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA,CAAC,sFAAc;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB;AACA;;AAEA,sBAAsB,gCAAgC;AACtD;AACA;;AAEA,0CAA0C,eAAe;;AAEzD;AACA;;AAEA;AACA;;AAEA,CAAC,gFAAQ;AACT,CAAC,0FAAkB;AACnB,CAAC,8FAAsB;AACvB,CAAC,oFAAY;AACb;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,sCAAsC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,qEAAK;AAClB,cAAc,sEAAM;AACpB;;AAEA;AACA,wBAAwB,gCAAgC;AACxD;AACA;AACA;AACA;AACA,gBAAgB,wBAAwB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe,oBAAoB;AACnC;AACA;;AAEA;AACA;;AAEA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,+BAA+B;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC,gDAAgD;AACpF;;AAEA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;;AAEA,iBAAiB,kBAAkB;AACnC;AACA,kBAAkB,iBAAiB;AACnC;AACA,mBAAmB,0GAAkC;AACrD,2BAA2B,gGAAwB;;AAEnD;AACA;AACA;AACA,C;;;;;;;;;;;;AC3YA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0B;AAEwC;;AAElE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,4CAAK;AAClB;AACA;AACA;AACA,EAAE;;AAEF,aAAa,4CAAK;;AAElB,cAAc,4CAAK;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;;AAEA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,2CAA2C,mBAAmB;AAC9D;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,eAAe,yBAAyB;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oCAAoC,mBAAmB;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,Y;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,uB;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,4CAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA,kBAAkB,4CAAK;AACvB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;;AAEA,iBAAiB,cAAc;AAC/B;AACA,kBAAkB,aAAa;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,uBAAuB;AACtC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AChgBA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SignupComponent } from './pages/signup/signup.component';\r\nimport { IndexComponent } from './pages/index/index.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { ProfileComponent } from './pages/profile/profile.component';\r\nimport { ProfilePuzzlesComponent } from './pages/profile-puzzles/profile-puzzles.component'\r\nimport { ProfileRatingsComponent } from './pages/profile-ratings/profile-ratings.component'\r\nimport { RatingsComponent } from './pages/ratings/ratings.component';\r\nimport { ResetPasswordComponent } from './pages/reset-password/reset-password.component';\r\nimport { ResetSuccessComponent } from './pages/reset-success/reset-success.component';\r\nimport { CreateComponent } from './pages/create/create.component';\r\nimport { AICreateComponent } from './pages/aicreate/aicreate.component';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: 'index', component: IndexComponent},\r\n  {path: 'signup', component: SignupComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'profile', component: ProfileComponent},\r\n  {path: 'profilePuzzles', component: ProfilePuzzlesComponent},\r\n  {path: 'profileRatings', component: ProfileRatingsComponent},\r\n  {path: 'ratings', component: RatingsComponent},\r\n  {path: 'resetPassword', component: ResetPasswordComponent},\r\n  {path: 'resetSuccess', component: ResetSuccessComponent},\r\n  {path: 'create', component: CreateComponent},\r\n  {path: 'aicreate', component: AICreateComponent},\r\n\r\n    // otherwise redirect to home\r\n  { path: '', redirectTo: '/index', pathMatch: 'full' },\r\n  { path: '**', component: IndexComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'prometheus-puzzles';\r\n  \r\n  constructor() {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n//\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport { MatToolbarModule} from '@angular/material/toolbar';\r\nimport { MatTableModule} from '@angular/material/table';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatGridListModule } from '@angular/material/grid-list'\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\n\r\n\r\n//pages\r\nimport { IndexComponent } from './pages/index/index.component';\r\nimport { SignupComponent } from './pages/signup/signup.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { ProfileComponent } from './pages/profile/profile.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { RatingsComponent } from './pages/ratings/ratings.component';\r\nimport { ResetPasswordComponent } from './pages/reset-password/reset-password.component';\r\nimport { ResetSuccessComponent } from './pages/reset-success/reset-success.component';\r\nimport { CreateComponent } from './pages/create/create.component';\r\nimport { RateDialogComponent } from './rate-dialog/rate-dialog.component';\r\nimport { ProfilePuzzlesComponent } from './pages/profile-puzzles/profile-puzzles.component';\r\nimport { ProfileRatingsComponent } from './pages/profile-ratings/profile-ratings.component';\r\nimport { AICreateComponent } from './pages/aicreate/aicreate.component';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    IndexComponent,\r\n    SignupComponent,\r\n    LoginComponent,\r\n    ProfileComponent,\r\n    RatingsComponent,\r\n    NavbarComponent,\r\n    ResetPasswordComponent,\r\n    ResetSuccessComponent,\r\n    CreateComponent,\r\n    RateDialogComponent,\r\n    ProfilePuzzlesComponent,\r\n    ProfileRatingsComponent,\r\n    AICreateComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NgxPaginationModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FlexLayoutModule,\r\n    MatButtonModule,\r\n    MatDividerModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatProgressSpinnerModule,\r\n    MatToolbarModule,\r\n    MatTableModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    MatInputModule, MatListModule,\r\n    MatCardModule, MatFormFieldModule, MatDialogModule, MatGridListModule, MatRadioModule, ReactiveFormsModule,\r\n    MDBBootstrapModule.forRoot(),\r\n  ],\r\n  entryComponents: [RateDialogComponent],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit} from '@angular/core';\r\n//import { getName } from '.././pages/login/login.component';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  name:string;\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  logout(){\r\n    localStorage.removeItem('token');\r\n    this.router.navigate(['/index']);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.name = localStorage.getItem('name');\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n<div class=\"logo\">\r\n  <img class=\"navimg\" src=\"assets/images/logo_nav.png\">\r\n</div>\r\n  <mdb-navbar id=\"navCustom\" SideClass=\"navbar\">\r\n    <div>\r\n        <ul class=\"nav navbar-nav mr-auto\" routerLinkActive=\"active\">\r\n            <li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"/ratings\">View</a></li>\r\n            <li class=\"nav-item dropdown\" dropdown>\r\n              <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\" mdbWavesEffect>Create<div class=\"caret\"></div></a>\r\n               <div *dropdownMenu class=\"dropdown-menu dropdown dropdown-primary\" role=\"menu\">\r\n                 <a class=\"dropdown-item waves-light\" routerLink=\"/create\" mdbWavesEffect>Manual</a><br>\r\n                 <a class=\"dropdown-item waves-light\" routerLink=\"/aicreate\" mdbWavesEffect>AI</a><br>\r\n               </div>\r\n            </li>\r\n            <li class=\"nav-item dropdown\" dropdown>\r\n              <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\" mdbWavesEffect>Profile<div class=\"caret\"></div></a>\r\n               <div *dropdownMenu class=\"dropdown-menu dropdown dropdown-primary\" role=\"menu\">\r\n                 <a class=\"dropdown-item waves-light\" routerLink=\"/profile\" mdbWavesEffect>My Details</a><br>\r\n                 <a class=\"dropdown-item waves-light\" routerLink=\"/profileRatings\" mdbWavesEffect>My Ratings</a><br>\r\n                 <a class=\"dropdown-item waves-light\" routerLink=\"/profilePuzzles\" mdbWavesEffect>My Puzzles</a>\r\n               </div>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <span class=\"navbar-text\">\r\n        Hello, {{name}}\r\n        <a id=\"logout\" (click)=\"logout()\">Logout</a>\r\n    </span>\r\n  </mdb-navbar>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { initializeDataAI } from 'src/assets/js/aiCreation.js';\r\n\r\n@Component({\r\n  selector: 'app-aicreate',\r\n  templateUrl: './aicreate.component.html',\r\n  styleUrls: ['./aicreate.component.css']\r\n})\r\nexport class AICreateComponent implements OnInit {\r\n\r\n  \r\n  token: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  \tinitializeDataAI();\r\n    this.token = localStorage.getItem('token');\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n\r\n<div class=\"container-fluid\">\r\n  <div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutGap=\"1\">\r\n    <mat-card class=\"\">\r\n      <mat-card-header>\r\n        <mat-card-title>Algorithm Parameters</mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div id=\"inputContainer\">\r\n          <label>Number of puzzle pieces(20 max):</label><br>\r\n          <input type=\"text\" name=\"numberOfPieces\" id=\"numberOfPiecesInputBox\" value=\"3\"><br>\r\n          <label>Number of Group 1 pieces:</label><br>\r\n          <input type=\"text\" name=\"numberOfPieces\" id=\"numberOfPiecesInputBox1\" value=\"1\"><br>\r\n          <label>Number of Group 2 pieces:</label><br>\r\n          <input type=\"text\" name=\"numberOfPieces\" id=\"numberOfPiecesInputBox2\" value=\"1\"><br>\r\n          <label>Number of Group 3 pieces:</label><br>\r\n          <input type=\"text\" name=\"numberOfPieces\" id=\"numberOfPiecesInputBox3\" value=\"1\"><br>\r\n          <label>Select Puzzle Type</label><br>\r\n          <mat-radio-group class=\"radio-group\">\r\n            <mat-radio-button class=\"radio-button\" value=\"euclidean\" name=\"distanceMetric\" id=\"euclideanButtonAI\" > Euclidian </mat-radio-button>\r\n            <mat-radio-button class=\"radio-button\" value=\"manhattan\" name=\"distanceMetric\" id=\"manhattanButtonAI\" > Manhattan </mat-radio-button>\r\n          </mat-radio-group>\r\n          <button mat-raised-button class=\"btns\" id=\"nextButton\">Next</button>\r\n          <button mat-raised-button class=\"btns\" id=\"generatePuzzleButtonAI\">Generate Puzzle</button><br>\r\n        </div>\r\n      </mat-card-content>\r\n   </mat-card>\r\n\r\n   <mat-card class=\"\">\r\n     <mat-card-header>\r\n       <mat-card-title>Create a puzzle</mat-card-title>\r\n     </mat-card-header>\r\n    <mat-card-content>\r\n      <div id=\"containerAI\">\r\n      </div>\r\n      <div id='colorPalettesAI'>\r\n        <button mat-raised-button class=\"btns\" id=\"randomizeColorsButtonAI\">Randomize Colors</button>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n  <mat-card class=\"\">\r\n    <mat-card-header>\r\n      <mat-card-title>Saving Options</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n       <br >\r\n        <label id=\"\">Name: </label><br><input type=\"text\" name=\"puzzleName\" id=\"puzzleNameInputBox\"><br>\r\n        <label id=\"\">Short Description: </label><br><input type=\"text\" name=\"puzzleDescription\" id=\"puzzleDescriptionInputBox\"><br>\r\n        <label hidden=\"true\" id=\"tokenLabel\">{{token}}</label><br>\r\n        <button mat-raised-button class=\"btns\" id=\"saveButtonAI\">Save</button>\r\n    </mat-card-content>\r\n  </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { initializeData } from 'src/assets/js/manualCreation.js';\r\nimport Konva from 'konva';\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.css']\r\n})\r\nexport class CreateComponent implements OnInit {\r\n\r\n  token: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    initializeData();\r\n    this.token = localStorage.getItem('token');\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n<div>\r\n <a id=\"help\" src=\"../../../assets/gifHelp.mp4\">Help</a>\r\n</div>\r\n<div class=\"container-fluid\">\r\n  <div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutGap=\"1\">\r\n    <mat-card class=\"\">\r\n      <mat-card-header>\r\n        <label>Select Puzzle Type</label>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <mat-radio-group class=\"radio-group\">\r\n          <mat-radio-button class=\"radio-button\" value=\"euclidean\" name=\"distanceMetric\" id=\"euclideanButton\" > Euclidian </mat-radio-button>\r\n          <mat-radio-button class=\"radio-button\" value=\"manhattan\" name=\"distanceMetric\" id=\"manhattanButton\" > Manhattan </mat-radio-button>\r\n        </mat-radio-group>\r\n      </mat-card-content>\r\n   </mat-card>\r\n\r\n   <mat-card class=\"\">\r\n    <mat-card-header>\r\n      <label>Create puzzle by selecting points on the canvas</label>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <mat-icon id=\"deletePointButton\">delete</mat-icon>\r\n      <div id=\"container\">\r\n      </div>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <div id='colorPalettes'>\r\n      </div>\r\n      <button mat-raised-button class=\"btns\" id=\"randomizeColorsButton\">Randomize Colors</button>\r\n      <!-- <button mat-raised-button class=\"btns\" id=\"deletePointButton\">Delete Mode</button> -->\r\n      <button mat-raised-button class=\"btns\" id=\"generatePuzzleButton\">Generate Puzzle</button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"\">\r\n    <mat-card-header>\r\n      <mat-card-title>Saving Options</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n       <br >\r\n        <label id=\"\">Name: </label><br><input type=\"text\" name=\"puzzleName\" id=\"puzzleNameInputBox\"><br>\r\n        <label id=\"\">Short Description: </label><br><input type=\"text\" name=\"puzzleDescription\" id=\"puzzleDescriptionInputBox\"><br>\r\n        <label hidden=\"true\" id=\"tokenLabel\">{{token}}</label><br>\r\n        <button mat-raised-button class=\"btns\" id=\"saveButton\">Save</button>\r\n    </mat-card-content>\r\n  </mat-card>\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- <label id=\"label\">What puzzle type would you like to generate?</label>\r\n    <mat-radio-group class=\"radio-group\">\r\n      <mat-radio-button class=\"radio-button\" value=\"euclidean\" name=\"distanceMetric\" id=\"euclideanButton\" > Euclidian </mat-radio-button>\r\n      <mat-radio-button class=\"radio-button\" value=\"manhattan\" name=\"distanceMetric\" id=\"manhattanButton\" > Manhattan </mat-radio-button>\r\n    </mat-radio-group>\r\n    <br> -->\r\n    <!-- <label id=\"label\">Create puzzle by selecting points on the canvas</label>\r\n\r\n    <br>\r\n    <div id=\"container\">\r\n    </div>\r\n    <br> -->\r\n\r\n    <!-- <button mat-raised-button class=\"btns\" id=\"generatePuzzleButton\">Generate Puzzle</button> <br >\r\n      <label id=\"label\">Name: </label><input type=\"text\" name=\"puzzleName\" id=\"puzzleNameInputBox\"><br>\r\n      <label id=\"label\">Short Description: </label><input type=\"text\" name=\"puzzleDescription\" id=\"puzzleDescriptionInputBox\"><br>\r\n      <label hidden=\"true\" id=\"tokenLabel\">{{token}}</label>\r\n\r\n\r\n    <button mat-raised-button class=\"btns\" id=\"saveButton\">Save</button> -->\r\n    <!-- <button mat-raised-button class=\"btns\" id=\"saveAndSubmitButton\">Save and Submit</button> -->\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.css']\r\n})\r\nexport class IndexComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<header id=\"indexNav\">\r\n <!--   <div class=\"bar\"><a href=\"index.html\">Prometheus' Puzzles</a></div>   -->\r\n    <nav class=\"links\">\r\n      <ul>\r\n        <li id=\"btnLink\"><a href=\"/signup\" mat-button class=\"indexBtn\">Sign Up</a></li>\r\n        <li id=\"btnLink\"><a href=\"/login\" mat-button class=\"indexBtn\">Login</a></li>\r\n      </ul>\r\n    </nav>\r\n</header>\r\n\r\n<img src=\"assets/images/websmal1.jpg\">\r\n<div class=\"container\" id=\"second\">\r\n        <h1 class=\"main-title\"><strong>C R E A T E .  S H A R E .  R A T E . </strong></h1>\r\n        <h2>Have fun creating 3D puzzles that can be shared, rated and printed</h2>\r\n    <div class=\"flex-container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\" >\r\n        <div class=\"one\">\r\n            <div class=\"content\">\r\n                <div class=\"content-overlay\"></div>\r\n                <img class=\"content-image\" src=\"assets/images/puzzles/6.png\">\r\n                <div class=\"content-details fadeIn-bottom\">\r\n                    <h3 class=\"content-title\">Geometric Puzzles</h3>\r\n                    <p class=\"content-text\">This is a short description of a geometric equationed arithmetic puzzle. Magnified by bliss.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"one\">\r\n            <div class=\"content\">\r\n                <div class=\"content-overlay\"></div>\r\n                <img class=\"content-image\" src=\"assets/images/puzzles/2.png\">\r\n                <div class=\"content-details fadeIn-bottom\">\r\n                    <h3 class=\"content-title\">Arithmetic Puzzles</h3>\r\n                    <p class=\"content-text\">This is a short description of a arithmetic equationed arithmetic puzzle. Magnified by razor.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"one\">\r\n            <div class=\"content\">\r\n                <div class=\"content-overlay\"></div>\r\n                <img class=\"content-image\" src=\"assets/images/puzzles/6.png\">\r\n                <div class=\"content-details fadeIn-bottom\">\r\n                    <h3 class=\"content-title\">Polygon Puzzles</h3>\r\n                    <p class=\"content-text\">This is a short description of a polygon equationed arithmetic puzzle. Magnified by shoes.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <!--\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"indexNavBtns\">\r\n        <mat-card fxFlex=\"90\" fxLayoutAlign=\"space-evenly center\">\r\n            <a routerLink=\"/login\" mat-raised-button class=\"btn\">Login\r\n            <a routerLink=\"/signup\" mat-raised-button class=\"btn\">Sign Up\r\n      </mat-card>\r\n    </div> -->\r\n\r\n\r\n    <!--\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"indexNavBtns\">\r\n        <mat-card fxFlex=\"90\" fxLayoutAlign=\"space-evenly center\">\r\n            <a routerLink=\"/login\" mat-raised-button class=\"btn\">Login\r\n            <a routerLink=\"/signup\" mat-raised-button class=\"btn\">Sign Up\r\n      </mat-card>\r\n    </div>\r\n     -->\r\n\r\n    <!-- <div class=\"content\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"descText\">\r\n            <mat-card fxFlex=\"90\">\r\n                    <p>Puzzles have been a hobby of many people over the centuries, coming in various\r\n                    forms which have various ways of solving. Puzzles have played a role in people’s\r\n                    problem solving skills. Puzzle generators have allowed for more puzzles to be\r\n                    created, using various techniques to create interesting and challenging puzzles.\r\n                    The system requested by the client involves the creation of 3-Dimensional puzzles (manually and from the use of AI), testing of puzzles, sharing and rating of\r\n                    puzzles by other users, as well as the ability of downloading 3D printable files.\r\n                    Team Prometheus, has come up with a way to develop the system according to\r\n                    the client’s specifications.</p>\r\n          </mat-card>\r\n        </div> -->\r\n\r\n\r\n\r\n        <!-- <div class=\"container\">\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <div class=\"flex-container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\" >\r\n            <div class=\"overlay\"></div>\r\n            <mat-card  class=\"child-1\">\r\n                <mat-card-header>\r\n                    <mat-card-title>Puzzle One</mat-card-title>\r\n                    <mat-card-subtitle class=\"one\">Created by {{puzzle.creator}}</mat-card-subtitle>\r\n                    <mat-card-subtitle class=\"one\">Rating: </mat-card-subtitle>\r\n                    <mat-card-subtitle class=\"one\">Date: </mat-card-subtitle>\r\n                    <mat-card-subtitle class=\"one\">Created by X</mat-card-subtitle>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                    <img class=\"indexImg\" src=\"assets/images/imgC.jpg\">\r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                    <button mat-button class=\"btns\">SOLVE</button>\r\n                    <button mat-button class=\"btns\">RATE</button>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n\r\n            <mat-card  class=\"child-2\">\r\n                <mat-card-header>\r\n                    <mat-card-title>Puzzle One</mat-card-title>\r\n                    <mat-card-subtitle class=\"one\">Created by X</mat-card-subtitle>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                    <img class=\"indexImg\"  src=\"assets/images/imgB.jpg\">\r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                    <button mat-button class=\"btns\">SOLVE</button>\r\n                    <button mat-button class=\"btns\">RATE</button>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n            <mat-card class=\"child-3\">\r\n                <mat-card-header>\r\n                    <mat-card-title>Puzzle One</mat-card-title>\r\n                    <mat-card-subtitle class=\"one\">Created by X</mat-card-subtitle>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                    <img class=\"indexImg\"  src=\"assets/images/imgC.jpg\">\r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                    <button mat-button class=\"btns\">SOLVE</button>\r\n                    <button mat-button class=\"btns\">RATE</button>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n        </div>\r\n\r\n\r\n                <a routerLink=\"/login\" mat-raised-button class=\"btn\">Login\r\n                <a routerLink=\"/signup\" mat-raised-button class=\"btn\">Sign Up\r\n\r\n\r\n    </div> -->\r\n\r\n    <!--\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"indexNavBtns\">\r\n        <mat-card fxFlex=\"90\" fxLayoutAlign=\"space-evenly center\">\r\n            <a routerLink=\"/login\" mat-raised-button class=\"btn\">Login\r\n            <a routerLink=\"/signup\" mat-raised-button class=\"btn\">Sign Up\r\n      </mat-card>\r\n    </div> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { User } from 'src/app/models/User';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  verifyUser: any;\r\n  formError: string;\r\n\r\n  constructor(private formBuilder: FormBuilder, private api: APIService, private router: Router) {}\r\n  //method for logging in user and getting the token associated with the said user\r\n  loginUser(currentUser: User){\r\n    this.formError = '';\r\n    if(currentUser !== null){\r\n      this.verifyUser = {\r\n        \"username\":currentUser.email,\r\n        \"password\":currentUser.password\r\n      }\r\n\r\n      this.api.loginUser(this.verifyUser).subscribe(\r\n        data => { console.log(data);\r\n          localStorage.removeItem('name');\r\n          localStorage.setItem('name', data['name']);\r\n          localStorage.removeItem('token');\r\n          localStorage.setItem('token', data['token']);\r\n\r\n        this.formError = \"\";\r\n        this.router.navigate(['/ratings']);\r\n\r\n        setTimeout(()=>{\r\n          localStorage.removeItem('token');\r\n          this.router.navigate(['login']);\r\n          alert(\"You have been logged out after 1 hour\");\r\n        },3600000);\r\n      },\r\n        error => {//if status code other than in the 200 range returned, show error\r\n          console.log('Error from API: ', error.error);\r\n          if(error.status >= 401){\r\n            this.formError = error.error;\r\n          }\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n  //error messages used during login/register validation\r\n  error_messages = {\r\n    'email': [\r\n      { type: 'required', message: 'Email is required.' },\r\n      { type: 'email', message: 'Invalid email format.' }\r\n    ],\r\n    'password': [\r\n      { type: 'required', message: 'Password is required.' },\r\n      { type: 'minlength', message: 'Password must have at least 6 characters.' }\r\n    ]\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]]\r\n\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"flex-container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center none\">\r\n        <mat-card class=\"regForm\"><img src=\"assets/images/label.png\"> \r\n            <mat-card-header>              \r\n                <h3>Login</h3> \r\n            </mat-card-header>\r\n            <mat-card-content class=\"regFormContent\">\r\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser(loginForm.value)\">\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your email</mat-label>\r\n                        <input class=\"input\" matInput placeholder=\"john@doe.com\" formControlName=\"email\" required>\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.email\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"loginForm.get('email').hasError(error.type) && (loginForm.get('email').dirty || loginForm.get('email').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your password</mat-label>\r\n                        <input class=\"input\" matInput required formControlName=\"password\" type=\"password\">\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.password\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"loginForm.get('password').hasError(error.type) && (loginForm.get('password').dirty || loginForm.get('password').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                            <span id=\"passError\">{{formError}}</span>\r\n                        </div>\r\n                    </div>\r\n                    <button mat-raised-button type=\"submit\" [disabled]=\"!loginForm.valid\" class=\"btns\" id=\"one\">Login</button>\r\n                    <a routerLink=\"/index\" mat-raised-button class=\"btns\" id=\"two\">Cancel</a>\r\n                </form>\r\n            </mat-card-content>\r\n            <mat-card-actions>\r\n                <a routerLink=\"/resetPassword\" class=\"link\">Forgot Password</a>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n *","import { Component, OnInit } from '@angular/core';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { Puzzle } from 'src/app/models/Puzzle';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-profile-puzzles',\r\n  templateUrl: './profile-puzzles.component.html',\r\n  styleUrls: ['./profile-puzzles.component.css']\r\n})\r\nexport class ProfilePuzzlesComponent implements OnInit {\r\n\r\n  currentUser: any;\r\n  //user  puzzle variables\r\n  //puzzleList: Observable <Puzzle[]> ;\r\n  userPuzzleList: any;\r\n  puzzle: any;\r\n  show: boolean;\r\n  text: boolean;\r\n  imageList: any;\r\n  temp: boolean = false;\r\n  tee: any;\r\n\r\n  constructor(private api: APIService, private router: Router) { }\r\n\r\n  getUserPuzzles(){\r\n    this.api.getPuzzlesByUser(this.currentUser).subscribe( data => {\r\n      this.userPuzzleList = data;\r\n      if (data[0]==null)\r\n      {\r\n        this.text = true;\r\n      }\r\n      this.show = false;\r\n    });\r\n  }\r\n\r\n  share(data: any){\r\n    this.puzzle = {\r\n      \"puzzleID\": data\r\n    }\r\n    if(this.api.sharePuzzle(this.puzzle).subscribe()){\r\n        alert(\"Puzzle shared\");\r\n    }\r\n    location.reload();\r\n  }\r\n\r\n  deletePuzzle(puzzleID: any){\r\n    // this.puzzle = {\r\n    //   \"puzzleID\": puzzleID\r\n    // }\r\n    if(this.api.deletePuzzle(puzzleID).subscribe()){\r\n        alert(\"Puzzle deleted\");\r\n    }\r\n    location.reload();\r\n  }\r\n\r\n  stopShare(data: any){\r\n    this.puzzle = {\r\n      \"puzzleID\": data\r\n    }\r\n    if(this.api.stopSharingPuzzle(this.puzzle).subscribe()){\r\n        alert(\"Stop sharing puzzle\");\r\n    }\r\n    location.reload();\r\n  }\r\n\r\n  async delay(ms: number) {\r\n    await new Promise(resolve => setTimeout(()=>resolve(), ms))\r\n    .then( () => { console.log(\"fired\"); });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if(!localStorage.getItem('token')){\r\n      this.router.navigate(['/index']);\r\n      alert(\"You are not logged in\");\r\n    }\r\n\r\n    this.currentUser = {\r\n      \"token\": localStorage.getItem('token')\r\n    }\r\n    this.show = true;\r\n    this.text = false;\r\n\r\n    this.delay(1500).then( () =>{\r\n      this.getUserPuzzles();\r\n    });\r\n\r\n    //this.getUserPuzzles();\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"container\">\r\n<div class=\"container-fluid\" *ngIf=\"currentUser\" >\r\n    <h1 class=\"main-title\" >My Puzzles</h1>\r\n    <div class=\"flex-container\" fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\">\r\n        <mat-card class=\"content\" *ngFor=\"let puzzle of userPuzzleList\">\r\n          <div class=\"content-overlay\"></div>\r\n          <img class=\"content-image\" src=\"{{puzzle.image}}\">\r\n            <mat-card-title><strong>{{puzzle.name}}</strong></mat-card-title>\r\n            <!-- <mat-card-subtitle>Description: {{puzzle.description}}</mat-card-subtitle> -->\r\n            <mat-card-actions class=\"puzzleActions\">\r\n              <button *ngIf=\"!puzzle.shared\" mat-button class=\"btns\" (click)=\"share(puzzle.id)\">SHARE</button>\r\n              <button *ngIf=\"puzzle.shared\" mat-button class=\"btns\" (click)=\"stopShare(puzzle.id)\">STOP SHARING</button>\r\n              <button mat-button class=\"btns\" (click)=\"deletePuzzle(puzzle.id)\">DELETE</button>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n</div>\r\n\r\n  <div *ngIf=\"text\">\r\n    <h2 id=\"NoneText\" >You have not created any puzzles at the moment</h2>\r\n  </div>\r\n<div class=\"spinner\">\r\n  <mat-spinner *ngIf=\"show\" id=\"spinner\"></mat-spinner>\r\n</div> \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Puzzle } from 'src/app/models/Puzzle';\r\nimport { Observable } from 'rxjs';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { RateDialogComponent } from '../../rate-dialog/rate-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-profile-ratings',\r\n  templateUrl: './profile-ratings.component.html',\r\n  styleUrls: ['./profile-ratings.component.css']\r\n})\r\nexport class ProfileRatingsComponent implements OnInit {\r\n\r\n  currentUser: any;\r\n  //user puzzle ratings variables\r\n  //ratingList: Observable <any[]> ;\r\n  userRatingsList: any;\r\n  text: boolean;\r\n  ratePID: number;\r\n  ratingEntry: any;\r\n  rateDialogRef: MatDialogRef<RateDialogComponent>;\r\n  show: boolean;\r\n\r\n  constructor(private api: APIService, private router: Router, private dialog: MatDialog) { }\r\n\r\n  getUserPuzzleRatings(){\r\n    this.api.getPuzzleRatingsByUser(this.currentUser).subscribe( data => {\r\n      this.userRatingsList = data;\r\n      if (data[0]==null)\r\n      {\r\n        this.text = true;\r\n      }\r\n      this.show = false;\r\n    });\r\n  }\r\n\r\n  checkData(data: any){\r\n    this.ratePID = data;\r\n  }\r\n\r\n  openRateDialog(){\r\n    this.rateDialogRef = this.dialog.open(RateDialogComponent);\r\n\r\n    this.rateDialogRef.afterClosed().subscribe( result => {\r\n      if (result != \"\"){\r\n\r\n        this.ratingEntry = {\r\n        //\"id\":this.rateUID,\r\n          \"puzzleID\":this.ratePID,\r\n          \"rating\":result,\r\n          \"token\": localStorage.getItem('token')\r\n        }\r\n\r\n        console.log(this.ratingEntry);\r\n\r\n        if(this.api.createNewPuzzleRating(this.ratingEntry).subscribe())\r\n        {\r\n          alert(\"Rating added\");\r\n        }\r\n\r\n        location.reload();\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  openAndCheck(rateP: any){\r\n    this.checkData(rateP);\r\n    this.openRateDialog();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if(!localStorage.getItem('token')){\r\n      this.router.navigate(['/index']);\r\n      alert(\"You are not logged in\");\r\n    }\r\n\r\n    this.currentUser = {\r\n      \"token\": localStorage.getItem('token')\r\n    }\r\n\r\n    this.show = true;\r\n    this.text = false;\r\n\r\n    this.getUserPuzzleRatings();\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"container\">\r\n<div class=\"container-fluid\" *ngIf=\"currentUser\" >\r\n    <h1 class=\"main-title\" >My Ratings</h1>\r\n    <div class=\"flex-container\" fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\">\r\n        <mat-card class=\"content\" *ngFor=\"let rating of userRatingsList\">\r\n          <div class=\"content-overlay\"></div>\r\n          <img class=\"content-image\" src=\"{{rating.image}}\">\r\n            <mat-card-title><strong>{{rating.puzzleName}}</strong></mat-card-title>\r\n            <mat-card-subtitle>Rating: {{rating.rating}}/5</mat-card-subtitle>\r\n            <mat-card-actions class=\"puzzleActions\">\r\n                <button mat-button class=\"btns\">SOLVE</button>\r\n                <button mat-button class=\"btns\" (click)=\"openAndCheck(rating.puzzleID)\">UPDATE RATING</button>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n</div>\r\n\r\n<div id=\"NoneText\" *ngIf=\"text\">\r\n    <h2>You have not made any ratings at the moment</h2>\r\n</div>\r\n<div class=\"spinner\">\r\n<mat-spinner *ngIf=\"show\" id=\"spinner\"></mat-spinner>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  nameTextboxValue: string;\r\n  usernameTextboxValue: string;\r\n  currentUserObject:any;\r\n  token: any;\r\n  currentUser: any;\r\n  updateNameForm: FormGroup;\r\n  updateUsernameForm: FormGroup;\r\n\r\n  constructor(private api: APIService, private formBuilder: FormBuilder, private router: Router) { }\r\n\r\n  updateName(){\r\n    this.currentUser = null;\r\n      if(this.nameTextboxValue != undefined){\r\n      this.currentUser = {\r\n        \"token\": localStorage.getItem('token'),\r\n        \"name\": this.nameTextboxValue\r\n      }\r\n      localStorage.removeItem('name');\r\n      localStorage.setItem('name', this.currentUser['name']);\r\n      this.api.updateName(this.currentUser).subscribe( data => {\r\n        this.currentUserObject['name'] = data['name'];\r\n      });\r\n      alert(\"Name updated\");\r\n    }\r\n    else{ console.log(\"No value provided\");}\r\n    location.reload();\r\n  }\r\n\r\n  updateUsername(){\r\n    this.currentUser = null;\r\n    if(this.usernameTextboxValue != undefined){\r\n    this.currentUser = {\r\n      \"token\": localStorage.getItem('token'),\r\n      \"username\": this.usernameTextboxValue\r\n    }\r\n    this.api.updateUsername(this.currentUser).subscribe( data => {\r\n      this.currentUserObject['username'] = data['username'];\r\n    })\r\n  }\r\n  else{console.log(\"No value provided\")}\r\n  }\r\n\r\n  error_messages = {\r\n    'username': [\r\n      { type: 'required', message: 'Email is required.' },\r\n      { type: 'email', message: 'Invalid email format.' }\r\n    ],\r\n    'name': [\r\n      { type: 'required', message: 'Full name is required.' },\r\n      { type: 'pattern', message: 'Name can only consist of letters' }\r\n    ]\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if(!localStorage.getItem('token')){\r\n      this.router.navigate(['/index']);\r\n      alert(\"You are not logged in\");\r\n    }\r\n\r\n    this.currentUser = {\r\n      \"token\": localStorage.getItem('token')\r\n    }\r\n\r\n    this.api.getUser(this.currentUser).subscribe( data => {\r\n      this.currentUserObject = data;\r\n\r\n      this.updateNameForm = this.formBuilder.group({\r\n        name: [data['name'], [Validators.required, Validators.pattern('[a-zA-Z ]*')]]\r\n      });\r\n\r\n      this.updateUsernameForm = this.formBuilder.group({\r\n        username: [data['username'], [Validators.required, Validators.email]]\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n<!--app-navbar-profile></app-navbar-profile-->\r\n\r\n\r\n<div class=\"container-fluid\" >\r\n    <div fxLayout=\"row\">\r\n    <mat-card class=\"profileImageCard\">\r\n        <mat-card-header>\r\n            <h1>Profile</h1>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n        <div><img src=\"assets/images/profile.jpg\" id=\"profileImage\"></div>\r\n        </mat-card-content>\r\n    </mat-card>\r\n\r\n    <mat-card class=\"profileText\">\r\n        <mat-card-header>\r\n            <h1>Edit Details</h1>\r\n        </mat-card-header>\r\n        <mat-card-content class=\"move\">\r\n        <div *ngIf=\"currentUserObject\">\r\n            <form [formGroup]=\"updateNameForm\" (ngSubmit)=\"updateName()\">\r\n                <mat-form-field appearance=\"standard\">\r\n                    <input matInput formControlName=\"name\"  value=\"{{currentUserObject.name}}\" (input)=\"nameTextboxValue=$event.target.value\">\r\n                </mat-form-field>\r\n                <div>\r\n                    <ng-container *ngFor=\"let error of error_messages.name\">\r\n                        <mat-error class=\"error-message\" *ngIf=\"updateNameForm.get('name').hasError(error.type) && (updateNameForm.get('name').dirty || updateNameForm.get('name').touched)\">\r\n                            {{ error.message }}\r\n                        </mat-error>\r\n                    </ng-container>\r\n                </div>\r\n                <button mat-raised-button type=\"submit\" [disabled]=\"!updateNameForm.valid\" class=\"btns\" >Save</button>\r\n            </form>\r\n\r\n            <form [formGroup]=\"updateUsernameForm\" (ngSubmit)=\"updateUsername()\">\r\n                <mat-form-field appearance=\"standard\">\r\n                    <input matInput formControlName=\"username\"  value=\"{{currentUserObject.username}}\" (input)=\"usernameTextboxValue=$event.target.value\">\r\n                </mat-form-field>\r\n                <div>\r\n                    <ng-container *ngFor=\"let error of error_messages.username\">\r\n                        <mat-error class=\"error-message\" *ngIf=\"updateUsernameForm.get('username').hasError(error.type) && (updateUsernameForm.get('username').dirty || updateUsernameForm.get('username').touched)\">\r\n                            {{ error.message }}\r\n                        </mat-error>\r\n                    </ng-container>\r\n                </div>\r\n                <button mat-raised-button type=\"submit\" [disabled]=\"!updateUsernameForm.valid\" class=\"btns\">Save</button>\r\n            </form>\r\n        </div>\r\n        </mat-card-content>\r\n    </mat-card>\r\n","export class RatingsArr{\r\n  id: number;\r\n  rating: number;\r\n  puzzleID: number;\r\n}\r\n","export class PuzzleArr{\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  creator: string;\r\n  rating: string;\r\n  created: any;\r\n  showRating: boolean;\r\n  image: any;\r\n}\r\n","import { Component, OnInit, ChangeDetectorRef, ViewEncapsulation } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { User } from 'src/app/models/User';\r\nimport { Router } from '@angular/router';\r\nimport { PuzzleArr } from './puzzleArr';\r\nimport { RatingsArr } from './RatingsArr';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { RateDialogComponent } from '../../rate-dialog/rate-dialog.component';\r\nimport { PuzzleRating } from 'src/app/models/PuzzleRating';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-ratings',\r\n  templateUrl: './ratings.component.html',\r\n  styleUrls: ['./ratings.component.css']\r\n})\r\nexport class RatingsComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = [\"id\",\"name\",\"description\",\"creator\",\"rating\",\"created\",\"showRating\",\"image\"];\r\n  rateDialogRef: MatDialogRef<RateDialogComponent>;\r\n  puzzles: Array<PuzzleArr> = [];\r\n  name: string;\r\n  ratings: Array<RatingsArr> = [];\r\n  ratePID: number;\r\n  rateUID: string;\r\n  ratingEntry: any;\r\n  formError: string;\r\n  show: boolean;\r\n  dataAvailable: boolean;\r\n  //searchbar\r\n  searchTextboxValue: string;\r\n  token: any;\r\n  currentUser: any;\r\n  datasource: any;\r\n\r\n  constructor(private api: APIService, private cdr: ChangeDetectorRef, private dialog: MatDialog, private router: Router) {\r\n  }\r\n\r\n  populate(populatePuz: any)\r\n  {\r\n    this.ratings.length = 0;\r\n    this.api.getAllPuzzleRatings().subscribe(\r\n      data=> {\r\n        for(let i=0; data[i]!= null; i++){\r\n          let ratingObj = new RatingsArr();\r\n          ratingObj.id = data[i].id;\r\n          ratingObj.rating = data[i].rating;\r\n          ratingObj.puzzleID = data[i].puzzleID;\r\n          this.ratings.push(ratingObj);\r\n        }\r\n      },\r\n      error => {\r\n        console.log(\"Error from API: \", error.error);\r\n      });\r\n\r\n\r\n    if (populatePuz != null)\r\n    {\r\n      this.getPuzzles(populatePuz);\r\n    }\r\n    else\r\n    {\r\n      this.api.getAllPuzzles().subscribe(\r\n        data => {\r\n          this.getPuzzles(data);\r\n      },\r\n        error => {//if status code other than in the 200 range returned, show error\r\n          console.log('Error from API: ', error.error);\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n  searchItems(searchValue: any){\r\n    if(searchValue != undefined){\r\n      this.api.getSearchedPuzzles(searchValue).subscribe( data => {\r\n        var dataObjectSize = Object.keys(data).length;\r\n        if(dataObjectSize == 0 )\r\n        {\r\n          alert(\"Nothing matches given criteria\");\r\n          console.log(\"Nothing matches given criteria\");\r\n        }\r\n        else{\r\n          //Please populate the page with the data received. Other puzzles not fromd data must be cleared\r\n          console.log(data);\r\n          this.populate(data);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getPuzzles(data: any){\r\n    this.puzzles.length = 0;\r\n    for(let i=0; data[i]!=null; i++)\r\n    {\r\n      let puzzleObj = new PuzzleArr();\r\n      puzzleObj.id = data[i].id;\r\n      puzzleObj.name = data[i].name;\r\n      puzzleObj.description = data[i].description;\r\n      puzzleObj.creator = data[i].creator;\r\n      puzzleObj.created = data[i].createdAt;\r\n      puzzleObj.image = data[i].image;\r\n      console.log(puzzleObj.image);\r\n      if (puzzleObj.creator== this.currentUser[\"name\"])\r\n      {\r\n        puzzleObj.showRating = false;\r\n      }\r\n      else\r\n      {\r\n        puzzleObj.showRating = true;\r\n      }\r\n\r\n      let j = 0;\r\n      let total = 0;\r\n\r\n      for (let k=0; this.ratings[k]!=null; k++){\r\n        if (this.ratings[k].puzzleID == data[i].id)\r\n        {\r\n          //********* ERROR HERE - THIS LOOP IS NOT ENTERED WHEN THE RATINGS VALUE IS 0  ************\r\n          console.log(this.ratings[k]);\r\n          total = total + this.ratings[k].rating;\r\n          j = j+1;\r\n        }\r\n      }\r\n\r\n      if (j == 0){\r\n        puzzleObj.rating = (0).toString();\r\n      }\r\n      else{\r\n        puzzleObj.rating = (total/j).toFixed(2);\r\n      }\r\n      this.puzzles.push(puzzleObj);\r\n    }\r\n\r\n    this.datasource = new MatTableDataSource(this.puzzles);\r\n\r\n    this.dataAvailable = true;\r\n    this.show= false;\r\n\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.datasource.filterPredicate = function(data, filter: string): boolean {\r\n      return data.name.toLowerCase().includes(filter)\r\n    };\r\n    this.datasource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  checkData(data: any){\r\n    this.ratePID = data;\r\n    //this.rateUID = localStorage.getItem('token');\r\n    //this.rateUID = localStorage.getItem('id');\r\n    //console.log(localStorage.getItem('id'));\r\n  }\r\n\r\n  openRateDialog(){\r\n    this.rateDialogRef = this.dialog.open(RateDialogComponent);\r\n\r\n    this.rateDialogRef.afterClosed().subscribe( result => {\r\n      //console.log(result);\r\n      //console.log(this.ratePID);\r\n      //console.log(this.rateUID);\r\n\r\n      if (result != \"\"){\r\n\r\n        this.ratingEntry = {\r\n        //\"id\":this.rateUID,\r\n          \"puzzleID\":this.ratePID,\r\n          \"rating\":result,\r\n          \"token\": localStorage.getItem('token')\r\n        }\r\n\r\n        console.log(this.ratingEntry);\r\n\r\n        if(this.api.createNewPuzzleRating(this.ratingEntry).subscribe())\r\n        {\r\n          alert(\"Rating added\");\r\n        }\r\n\r\n        location.reload();\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  openAndCheck(rateP: any){\r\n    this.checkData(rateP);\r\n    this.openRateDialog();\r\n  }\r\n\r\n  reload(){\r\n    this.populate(null);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.show=true;\r\n    this.dataAvailable = false;\r\n    if(!localStorage.getItem('token')){\r\n      this.router.navigate(['/index']);\r\n      alert(\"You are not logged in\");\r\n    }\r\n\r\n    this.currentUser = {\r\n      \"token\": localStorage.getItem('token')\r\n    }\r\n\r\n    this.api.getUser(this.currentUser).subscribe( data => {\r\n      console.log(data[\"name\"]);\r\n      this.currentUser = {\r\n        \"token\": localStorage.getItem('token'),\r\n        \"name\": data[\"name\"]\r\n      }\r\n    });\r\n\r\n    this.populate(null);\r\n\r\n  }\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"container\">\r\n<mat-form-field class=\"example-form-field\">\r\n    <mat-label>Search</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event.target.value)\">\r\n</mat-form-field>\r\n<button mat-button id=\"resetBtn\" (click)=\"reload()\">RESET SEARCH CRITERIA</button>\r\n<div class=\"spinner\">\r\n  <mat-spinner *ngIf=\"show\" id=\"spinner\"></mat-spinner>\r\n</div>\r\n\r\n<div class=\"container-fluid\" *ngIf=\"dataAvailable\" >\r\n    <div class=\"flex-container\" fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\">\r\n        <mat-card class=\"content\"  *ngFor=\"let puzzle of this.datasource.filteredData\">\r\n          <div class=\"content-overlay\"></div>\r\n          <!-- <mat-icon aria-hidden=\"false\" class=\"infoIcon\">info_outline</mat-icon> -->\r\n          <img class=\"content-image\" src=\"{{puzzle.image}}\">\r\n            <div class=\"content-details fadeIn-bottom\">\r\n              <mat-card-header>\r\n               <mat-card-subtitle class=\"puzzleDetails\"><strong>Created by:</strong> {{puzzle.creator}}</mat-card-subtitle>\r\n                <mat-card-subtitle class=\"puzzleDetails\"><strong>Created on:</strong> {{puzzle.created}}</mat-card-subtitle>\r\n                <mat-card-subtitle class=\"puzzleDetails\"><strong>Description:</strong> {{puzzle.description}}</mat-card-subtitle>\r\n              </mat-card-header>\r\n            </div>\r\n            <mat-card-title><strong>{{puzzle.name}}</strong></mat-card-title>\r\n            <mat-card-subtitle>Rating: {{puzzle.rating}}/5</mat-card-subtitle>\r\n            <mat-card-actions class=\"puzzleActions\">\r\n              <button mat-button class=\"btns\">SOLVE</button>\r\n              <button *ngIf=\"puzzle.showRating\" mat-button class=\"btns\" (click)=\"openAndCheck(puzzle.id)\">RATE</button>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { User } from 'src/app/models/User';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.css']\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n  resetPasswordForm: FormGroup;\r\n  verifyUser: any;\r\n  formError: string;\r\n  resetDone: string;\r\n\r\n  constructor(private formBuilder: FormBuilder, private api: APIService, private router: Router ) {}\r\n\r\n  //method for logging in user and getting the token associated with the said user\r\n  resetPassword(currentUser: User){\r\n    this.resetDone = '';\r\n    this.formError = '';\r\n    if(this.doPasswordsMatch(this.resetPasswordForm.controls['password'].value, this.resetPasswordForm.controls['confirmPassword'].value) == true){\r\n      this.verifyUser = {\r\n        \"username\": currentUser.email,\r\n        \"password\": currentUser.password\r\n      }\r\n      if(this.verifyUser != null){\r\n        this.api.resetPassword(this.verifyUser).subscribe(\r\n          () => {},\r\n          error => {//if status code other than in the 200 range returned, show error\r\n            if(error.status >= 401){\r\n              this.formError = error.error;\r\n            }\r\n            else\r\n            {\r\n              this.router.navigate(['/resetSuccess', { message: \"Password reset. Please login\" }]);\r\n            }\r\n          })\r\n      }\r\n    }\r\n    else\r\n    {\r\n      this.formError = \"Passwords do not match\";\r\n    }\r\n  }\r\n\r\n  //error messages used during login/register validation\r\n  error_messages = {\r\n    'email': [\r\n      { type: 'required', message: 'Email is required.' },\r\n      { type: 'email', message: 'Invalid email format.' }\r\n    ],\r\n    'password': [\r\n      { type: 'required', message: 'Password is required.' },\r\n      { type: 'minlength', message: 'Password must have at least 6 characters.' }\r\n    ],\r\n    'confirmPassword': [\r\n      { type: 'required', message: 'password is required.' },\r\n      { type: 'minlength', message: 'Password must have at least 6 characters.' }\r\n    ],\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.resetPasswordForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: ['', [Validators.required, Validators.minLength(6)]]\r\n    });\r\n  }\r\n\r\n  //checking if passwords match\r\n  doPasswordsMatch(firstPassword: string, secondPassword: string) {\r\n    if (firstPassword !== secondPassword) {\r\n        return false;\r\n    } else {\r\n      return true;\r\n    }\r\n}\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"flex-container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center none\">\r\n        <mat-card class=\"regForm\">\r\n          <mat-card-header>\r\n              <h1>Reset Password</h1>\r\n          </mat-card-header>\r\n            <mat-card-content class=\"regFormContent\">\r\n                <form [formGroup]=\"resetPasswordForm\" (ngSubmit)=\"resetPassword(resetPasswordForm.value)\">\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your email</mat-label>\r\n                        <input class=\"input\" matInput placeholder=\"john@doe.com\" formControlName=\"email\" required>\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.email\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"resetPasswordForm.get('email').hasError(error.type) && (resetPasswordForm.get('email').dirty || resetPasswordForm.get('email').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your password</mat-label>\r\n                        <input class=\"input\" matInput required formControlName=\"password\" type=\"password\">\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.password\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"resetPasswordForm.get('password').hasError(error.type) && (resetPasswordForm.get('password').dirty || resetPasswordForm.get('password').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <mat-form-field appearance=\"fill\">\r\n                            <mat-label>Confirm password</mat-label>\r\n                            <input class=\"input\" matInput  required formControlName=\"confirmPassword\" type=\"password\">\r\n                        </mat-form-field>\r\n                            <div>\r\n                                <ng-container *ngFor=\"let error of error_messages.confirmPassword\">\r\n                                    <mat-error class=\"error-message\" *ngIf=\"resetPasswordForm.get('confirmPassword').hasError(error.type) && (resetPasswordForm.get('confirmPassword').dirty || resetPasswordForm.get('confirmPassword').touched)\">\r\n                                        {{ error.message }}\r\n                                    </mat-error>\r\n                                </ng-container>\r\n                                <span id=\"passError\">{{formError}}</span>\r\n                            </div>\r\n                    </div>\r\n\r\n                    <button mat-raised-button type=\"submit\" [disabled]=\"!resetPasswordForm.valid\" class=\"btns\" id=\"one\">Submit</button>\r\n                    <a routerLink=\"/index\" mat-raised-button class=\"btns\" id=\"two\">Cancel</a>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-reset-success',\r\n  templateUrl: './reset-success.component.html',\r\n  styleUrls: ['./reset-success.component.css']\r\n})\r\nexport class ResetSuccessComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router ) {}\r\n\r\n  ngOnInit() {\r\n\r\n    let message = this.route.snapshot.paramMap.get('message');\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"flex-container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center none\">\r\n        <mat-card class=\"regForm\">\r\n            <mat-card-header>\r\n                <mat-card-title class=\"cardTitle\">Reset Password Successfully</mat-card-title>\r\n            </mat-card-header>\r\n            <mat-card-content class=\"regFormContent\">\r\n                    <p>Please login</p>\r\n                    <a routerLink=\"/login\" mat-raised-button class=\"btns\" id=\"two\">Login</a>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { User } from '../../models/User';\r\nimport { APIService } from '../../services/api.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  signUpForm: FormGroup;\r\n  newUser: any;\r\n  formError: string;\r\n\r\n  token: any;\r\n  name: any;\r\n\r\n  constructor(private formBuilder: FormBuilder, private api: APIService, private router: Router) {}\r\n\r\n  //method for creating a new user. A new JSON object is created and sent to the node api\r\n  createNewUser(createUser: any){\r\n    this.formError = '';\r\n    if(this.doPasswordsMatch(this.signUpForm.controls['password'].value, this.signUpForm.controls['confirmPassword'].value) == true){\r\n      this.newUser = {\r\n        \"name\": createUser.name,\r\n        \"username\": createUser.email,\r\n        \"password\": createUser.password\r\n      }\r\n      if(this.newUser != null){\r\n        this.api.createUser(this.newUser).subscribe(\r\n            data => {\r\n              console.log(data);\r\n              localStorage.removeItem('name');\r\n              localStorage.setItem('name', data['name']);\r\n              localStorage.removeItem('token');\r\n              localStorage.setItem('token', data['token']);\r\n              this.router.navigate(['/ratings']);\r\n            },\r\n          error => {//if status code other than in the 200 range returned, show error\r\n            console.log('Error from API: ', error.error);\r\n            if(error.status >= 401){\r\n              this.formError = error.error;\r\n            }\r\n          })\r\n      }\r\n    }\r\n    else\r\n    {\r\n      this.formError = \"Passwords do not match\";\r\n    }\r\n  }\r\n\r\n  //error messages used during login/register validation\r\n  error_messages = {\r\n    'name': [\r\n      { type: 'required', message: 'Full name is required.' },\r\n      { type: 'pattern', message: 'Name can only consist of letters' }\r\n    ],\r\n    'email': [\r\n      { type: 'required', message: 'Email is required.' },\r\n      { type: 'email', message: 'Invalid email format.' }\r\n    ],\r\n    'password': [\r\n      { type: 'required', message: 'Password is required.' },\r\n      { type: 'minlength', message: 'Password must have at least 6 characters.' }\r\n    ],\r\n    'confirmPassword': [\r\n      { type: 'required', message: 'password is required.' },\r\n      { type: 'minlength', message: 'Password must have at least 6 characters.' }\r\n    ],\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.signUpForm = this.formBuilder.group({\r\n      name: ['', [Validators.required, Validators.pattern('[a-zA-Z ]*')]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: ['', [Validators.required, Validators.minLength(6)]]\r\n    });\r\n  }\r\n\r\n  //checking if passwords match\r\n  doPasswordsMatch(firstPassword: string, secondPassword: string) {\r\n        if (firstPassword !== secondPassword) {\r\n          //this.formError = \"Passwords do not match: \" + controlName + \" \" + matchingControlName;\r\n            return false;\r\n        } else {\r\n          //this.formError = \"Match: \" + controlName + \" \" + matchingControlName;\r\n          return true;\r\n        }\r\n    }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"flex-container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"center none\">\r\n        <mat-card class=\"regForm\">\r\n            <mat-card-header>\r\n                <h1>Sign Up</h1>\r\n            </mat-card-header>\r\n            <mat-card-content class=\"regFormContent\">\r\n                <form [formGroup]=\"signUpForm\" (ngSubmit)=\"createNewUser(signUpForm.value)\">\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your full name</mat-label>\r\n                        <input class=\"input\" matInput placeholder=\"John Doe\" formControlName=\"name\" required >\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.name\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"signUpForm.get('name').hasError(error.type) && (signUpForm.get('name').dirty || signUpForm.get('name').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your email</mat-label>\r\n                        <input class=\"input\" matInput placeholder=\"john@doe.com\" formControlName=\"email\" required>\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.email\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"signUpForm.get('email').hasError(error.type) && (signUpForm.get('email').dirty || signUpForm.get('email').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your password</mat-label>\r\n                        <input class=\"input\" matInput required formControlName=\"password\" type=\"password\">\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.password\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"signUpForm.get('password').hasError(error.type) && (signUpForm.get('password').dirty || signUpForm.get('password').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Confirm password</mat-label>\r\n                        <input class=\"input\" matInput  required formControlName=\"confirmPassword\" type=\"password\">\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.confirmPassword\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"signUpForm.get('confirmPassword').hasError(error.type) && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                            <span id=\"passError\">{{formError}}</span>\r\n                        </div>\r\n                    </div>\r\n                    <button mat-raised-button type=\"submit\" [disabled]=\"!signUpForm.valid\" class=\"btn\" id=\"one\">Sign Up</button>\r\n\r\n                    <a routerLink=\"/index\" mat-raised-button color=\"accent\" class=\"btns\">Cancel</a>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-rate-dialog',\r\n  templateUrl: './rate-dialog.component.html',\r\n  styleUrls: ['./rate-dialog.component.css']\r\n})\r\nexport class RateDialogComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    private dialogRef: MatDialogRef<RateDialogComponent>) { }\r\n\r\n    error_messages = {\r\n      'rating': [\r\n        { type: 'pattern', message: 'Number must be between 1 and 5' }\r\n      ]\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      rating: ['', Validators.pattern(\"[1-5]\")]\r\n    })\r\n  }\r\n\r\n  submit(form){\r\n    this.dialogRef.close(`${form.rating}`);\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"submit(form.value)\">\r\n  <h1 mat-dialog-title>Rate Puzzle (out of 5)</h1>\r\n  <mat-dialog-content>\r\n    <mat-form-field>\r\n      <input matInput type=\"number\" min=\"1\" max=\"5\" formControlName=\"rating\" placeholder=\"Enter Rating\" ngControl=\"rating\">\r\n    </mat-form-field>\r\n    <div>\r\n        <ng-container *ngFor=\"let error of error_messages.rating\">\r\n            <mat-error class=\"error-message\" *ngIf=\"form.get('rating').hasError(error.type) && (form.get('rating').dirty || form.get('rating').touched)\">\r\n                {{ error.message }}\r\n            </mat-error>\r\n        </ng-container>\r\n    </div>\r\n\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button mat-button type=\"submit\" [disabled]=\"!form.valid\">Submit</button>\r\n    <button mat-button type=\"button\" mat-dialog-close>Cancel</button>\r\n  </mat-dialog-actions>\r\n</form>\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { User } from '../models/User';\r\nimport { Puzzle } from '../models/Puzzle';\r\nimport { PuzzleRating } from '../models/PuzzleRating';\r\nimport {HttpHeaders} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class APIService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  /**\r\n   * User endpoints start here\r\n   */\r\n  //create new user\r\n  createUser(newUser: User){\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'} ) };\r\n    return this.http.post('https://prometheuspuzzles.herokuapp.com/api/users/createUser',newUser, httpOptions);\r\n  }\r\n\r\n  loginUser(currentUser: User){\r\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n    return this.http.post('https://prometheuspuzzles.herokuapp.com/api/users/login', currentUser, httpOptions);\r\n  }\r\n\r\n  resetPassword(currentUser: User){\r\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n    return this.http.put('https://prometheuspuzzles.herokuapp.com/api/users/resetPassword', currentUser, httpOptions);\r\n  }\r\n\r\n  getUser(token: any){\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'} ) };\r\n    return this.http.post('https://prometheuspuzzles.herokuapp.com/api/users/getUser',token, httpOptions);\r\n  }\r\n\r\n  updateName(currentUser: User){\r\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n    return this.http.put('https://prometheuspuzzles.herokuapp.com/api/users/updateName', currentUser, httpOptions);\r\n  }\r\n\r\n  updateUsername(currentUser: User){\r\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n    return this.http.put('https://prometheuspuzzles.herokuapp.com/api/users/updateUsername', currentUser, httpOptions);\r\n  }\r\n\r\n  getPuzzlesByUser(token: any): Observable<any[]> {\r\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n    return this.http.post<any[]>('https://prometheuspuzzles.herokuapp.com/api/users/getPuzzlesByUser', token, httpOptions);\r\n  }\r\n\r\n  getPuzzleRatingsByUser(token: any): Observable<any[]>{\r\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n    return this.http.post<any[]>('https://prometheuspuzzles.herokuapp.com/api/users/getPuzzleRatingsByUser', token, httpOptions);\r\n  }\r\n\r\n  /**\r\n   * User endpoints end here\r\n   */\r\n\r\n\r\n/**\r\n* Puzzle endpoints start here\r\n*/\r\ngetAllPuzzles(){\r\n  return this.http.get('https://prometheuspuzzles.herokuapp.com/api/puzzles/getAllPuzzles');\r\n}\r\n\r\ngetAllPuzzleByID(puzzleID: number){\r\n  return this.http.get('https://prometheuspuzzles.herokuapp.com/api/puzzles/getPuzzleByID?Id=' + puzzleID);\r\n}\r\n\r\ncreateNewPuzzle(puzzle: Puzzle){\r\n  const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n  return this.http.post('https://prometheuspuzzles.herokuapp.com/api/puzzles/createPuzzle', puzzle, httpOptions);\r\n}\r\n\r\ncreateNewPuzzleRating(rating: PuzzleRating){\r\n  const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n  return this.http.post('https://prometheuspuzzles.herokuapp.com/api/puzzles/createPuzzleRating', rating, httpOptions);\r\n}\r\n\r\ngetAllPuzzleRatings(){\r\n  return this.http.get('https://prometheuspuzzles.herokuapp.com/api/puzzles/getAllPuzzleRatings');\r\n}\r\n\r\ngetSearchedPuzzles(term: any){\r\n  return this.http.get('https://prometheuspuzzles.herokuapp.com/api/puzzles/getSearchedPuzzles/' + term);\r\n}\r\n\r\nsharePuzzle(puzzle: any){\r\n  const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n  return this.http.put('https://prometheuspuzzles.herokuapp.com/api/puzzles/sharePuzzle', puzzle, httpOptions);\r\n}\r\n\r\nstopSharingPuzzle(puzzle: any){\r\n  const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n  return this.http.put('https://prometheuspuzzles.herokuapp.com/api/puzzles/stopSharingPuzzle', puzzle, httpOptions);\r\n}\r\n\r\ndeletePuzzle(puzzle:number):Observable<number>    \r\n{ \r\n  return this.http.delete<number>('http://localhost:3200/api/puzzles/deletePuzzle/'+puzzle);    \r\n} \r\n\r\n/**\r\n* Puzzle endpoints end here\r\n*/\r\n}\r\n","import { width, height, setSites, setDisableEditMode, initializeData, calculateDistancesFromSitesToPoint, \r\n\tequidistantPointsPresent, generateSiteBoundaries, createPieces } from 'src/assets/js/manualCreation.js'\r\n\r\n///The structure of each individual/chromosome object\r\nlet Chromosome = {\r\n\tsites: [],\r\n\tfitness: -1,\r\n};\r\n\r\n///The structure of each site object\r\nlet Site = {\r\n\tx: 0,\r\n\ty: 0,\r\n\tsurfaceArea: 0,\r\n}\r\n\r\nlet generatePuzzleAIButton, colorPalettesDiv;\r\nlet tempWidth, tempHeight;\r\nlet totalSurfaceArea;\r\n\r\nlet generationSize = 10 + 1;\r\nlet tournamentSize = 4;\r\nlet maximumIterations = 150;\r\nlet seedString = 'apples';\r\n\r\nlet sliders = [];\r\nlet labels = [];\r\nlet numberOfSites = 6;\r\nlet desiredProportions = [0.40, 0.20, 0.10, 0.10, 0.10, 0.10];\r\nlet groupDistribution = [];\r\n\r\nfunction copyObject(obj)\r\n{\r\n    return JSON.parse(JSON.stringify(obj));\r\n}\r\n\r\nfunction xmur3(str) {\r\n    for(var i = 0, h = 1779033703 ^ str.length; i < str.length; i++)\r\n        h = Math.imul(h ^ str.charCodeAt(i), 3432918353),\r\n        h = h << 13 | h >>> 19;\r\n    return function() {\r\n        h = Math.imul(h ^ h >>> 16, 2246822507);\r\n        h = Math.imul(h ^ h >>> 13, 3266489909);\r\n        return (h ^= h >>> 16) >>> 0;\r\n    }\r\n}\r\n\r\nfunction mulberry32(a) {\r\n    return function() {\r\n      var t = a += 0x6D2B79F5;\r\n      t = Math.imul(t ^ t >>> 15, t | 1);\r\n      t ^= t + Math.imul(t ^ t >>> 7, t | 61);\r\n      return ((t ^ t >>> 14) >>> 0) / 4294967296;\r\n    }\r\n}\r\n\r\nlet seed = xmur3(seedString);\r\nlet rand = mulberry32(seed());\r\n\r\nfunction random(max)\r\n{\r\n    return Math.ceil(rand() * max) - 1;\r\n}\r\n\r\nfunction expandPuzzle(sites, factor)\r\n{\r\n\tfor(let i = 0; i < sites.length; i++)\r\n\t{\r\n\t\tsites[i].x = sites[i].x * factor;\r\n\t\tsites[i].y = sites[i].y * factor;\r\n\t}\r\n\r\n\treturn sites;\r\n}\r\n\r\nexport function initializeDataAI()\r\n{\r\n\tinitializeData('AI');\r\n\tgeneratePuzzleAIButton = document.getElementById('generatePuzzleButtonAI');\r\n\tgeneratePuzzleAIButton.addEventListener('mousedown', generatePuzzleAI);\r\n\tgeneratePuzzleAIButton.remove();\r\n\r\n\tdocument.getElementById('nextButton').addEventListener('mousedown', displaySlidersCard);\r\n\tcolorPalettesDiv = document.getElementById('colorPalettesAI');\r\n\tcolorPalettesDiv.remove();\r\n}\r\n\r\nfunction displaySlidersCard()\r\n{\r\n\tnumberOfSites = document.getElementById('numberOfPiecesInputBox').value;\r\n\r\n\tgroupDistribution.push(document.getElementById('numberOfPiecesInputBox1').value);\r\n\tgroupDistribution.push(document.getElementById('numberOfPiecesInputBox2').value);\r\n\tgroupDistribution.push(document.getElementById('numberOfPiecesInputBox3').value);\r\n\r\n\tgenerateSliders(3);\r\n\t\r\n\tdocument.getElementById('inputContainer').appendChild(generatePuzzleAIButton);\r\n}\r\n\r\nfunction generatePuzzleAI()\r\n{\r\n\tdesiredProportions = [];\r\n\r\n\tfor(let i = 0; i < 3; i++)\r\n\t{\r\n\t\tlet proportion = (sliders[i].value / groupDistribution[i]) / 100;\r\n\r\n\t\tfor(let counter = 0; counter < groupDistribution[i]; counter++)\r\n\t\t\tdesiredProportions.push(proportion);\r\n\t}\r\n\r\n\tdesiredProportions.sort( function(a, b) { return b - a } );\r\n\r\n\tdocument.getElementById('inputContainer').innerHTML = '';\r\n\tdocument.getElementById('inputContainer').appendChild(colorPalettesDiv);\r\n\r\n\tlet sites = run();\r\n\tsites = expandPuzzle(sites, 10);\r\n\r\n\tsetSites(sites);\r\n\tsetDisableEditMode(true);\r\n\tgenerateSiteBoundaries();\r\n\tcreatePieces();\r\n}\r\n\r\nfunction generateSliders(numberOfSliders)\r\n{\r\n\tlet inputContainer = document.getElementById('inputContainer');\r\n\tlet defaultValue = 100/numberOfSliders;\r\n\r\n\tinputContainer.innerHTML = '';\r\n\r\n\tfor(let i = 0; i < numberOfSliders; i++)\r\n\t{\r\n\t\tlet slider = document.createElement('input');\r\n\t\tslider.type = 'range';\r\n\t\tslider.min = 1.00;\r\n\t\tslider.max = 100.00 - numberOfSliders + 1;\r\n\t\tslider.value = defaultValue;\r\n\t\tslider.previousValue = defaultValue;\r\n\t\tslider.sliderid = i;\r\n\t\tslider.step = 0.01;\r\n\t\t\r\n\t\tslider.addEventListener('input', function() {\r\n\t\t\tlet difference = this.previousValue - this.value;\r\n\t\t\tlet distributedValue = (difference/( numberOfSliders - 1 )).toFixed(2);\r\n\t\t\tlet leftover = 0;\r\n\r\n\t\t\tfor(let i = 0 ; i < numberOfSliders; i++)\r\n\t\t\t{\r\n\t\t\t\tif(i != this.sliderid)\r\n\t\t\t\t{\r\n\t\t\t\t\tlet tempValue = ( parseFloat(sliders[i].value) + parseFloat(distributedValue) );\r\n\t\t\t\t\tif(tempValue >= 1.00)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(leftover != 0 && ( tempValue + leftover ) >= 1.00)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttempValue += leftover;\r\n\t\t\t\t\t\t\tleftover = 0;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tsliders[i].value = tempValue;\r\n\t\t\t\t\t\tsliders[i].previousValue = tempValue;\r\n\t\t\t\t\t\tlabels[i].innerHTML = parseInt(tempValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tleftover += parseFloat(distributedValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor(let i = 0; leftover != 0 && i < numberOfSliders; i++)\r\n\t\t\t{\r\n\t\t\t\tif(i != this.sliderid)\r\n\t\t\t\t{\r\n\t\t\t\t\tlet tempValue = parseFloat(sliders[i].value) + leftover;\r\n\t\t\t\t\tif(tempValue >= 1.00)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsliders[i].value = tempValue;\r\n\t\t\t\t\t\tsliders[i].previousValue = tempValue;\r\n\t\t\t\t\t\tlabels[i].innerHTML = parseInt(tempValue);\r\n\t\t\t\t\t\tleftover = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.previousValue = this.value;\r\n\t\t\tlabels[this.sliderid].innerHTML = parseInt(this.value);\r\n\t\t});\r\n\r\n\t\tlet headerLabel = document.createElement('label');\r\n\t\theaderLabel.innerHTML = 'Group ' + (i+1);\r\n\r\n\t\tlet valueLabel = document.createElement('label');\r\n\t\tvalueLabel.innerHTML = defaultValue.toFixed(0);\r\n\r\n\t\tlet br = document.createElement('br');\r\n\r\n\t\tsliders.push(slider);\r\n\t\tlabels.push(valueLabel);\r\n\r\n\r\n\t\tinputContainer.appendChild(headerLabel);\r\n\t\tinputContainer.appendChild(slider);\r\n\t\tinputContainer.appendChild(valueLabel);\r\n\t\tinputContainer.appendChild(br);\r\n\t}\r\n}\r\n\r\n///Executes the genetic algorithm and returns the resulting site array \r\nfunction run()\r\n{\r\n\tlet currentGeneration = [], nextGeneration = [];\r\n\tlet parentX, parentY, children;\r\n\tlet x, y;\r\n\ttempWidth = width/10;\r\n\ttempHeight = height/10;\r\n\ttotalSurfaceArea = tempWidth * tempHeight;\r\n\r\n\tnextGeneration = initializeGeneration();\r\n\tfor(let generation = 0; generation < maximumIterations; generation++)\r\n\t{\r\n\t\tcurrentGeneration = nextGeneration;\r\n\t\tnextGeneration = [];\r\n\t\tnextGeneration.push( getFittest(currentGeneration) );\r\n\t\tfor(let i = 0; i < generationSize - 1; i+=2)\r\n\t\t{\r\n\t\t\tparentX = runTournament(currentGeneration);\r\n\t\t\tparentY = runTournament(currentGeneration);\r\n\t\t\tchildren = crossover(parentX, parentY);\r\n\t\t\tmutate(children[0]);\r\n\t\t\tmutate(children[1]);\r\n\t\t\tcalculateAndSetFitness(children[0]);\r\n\t\t\tcalculateAndSetFitness(children[1]);\r\n\t\t\tnextGeneration.push(...children);\r\n\t\t}\r\n\t}\r\n\r\n\tconsole.log(nextGeneration);\r\n\tconsole.log('done!');\r\n\treturn getFittest(nextGeneration).sites;\r\n}\r\n\r\n///Returns the fittest chromosome from generation\r\nfunction getFittest(generation)\r\n{\r\n\tlet fittestChromosome = null;\r\n\tfittestChromosome = generation[0];\r\n\r\n\tfor(let i = 1; i < generationSize; i++)\r\n\t\tif(generation[i].fitness < fittestChromosome.fitness)\r\n\t\t\tfittestChromosome = generation[i];\r\n\r\n\treturn fittestChromosome;\r\n}\r\n\r\n///Randomly selected a site and a movement direction; then proceed to execute movement using a random offset\r\nfunction mutate(chromosome)\r\n{\r\n\t// let siteIndex = random(numberOfSites);\r\n\tlet selectedSite = chromosome.sites[random(numberOfSites)];\r\n\tlet offset = random(5);\r\n\tlet movementDirection = random(4);\r\n\r\n\t///Move site to the right by offset (increment x by offset), or move to the left if at board edge\r\n\tif(movementDirection == 0)\r\n\t{\r\n\t\tif(selectedSite.x + offset < tempWidth)\r\n\t\t\tselectedSite.x = selectedSite.x + offset;\r\n\t\telse\r\n\t\t\tselectedSite.x = selectedSite.x - offset;\r\n\t}\r\n\t///Move site to the left by offset (decrement x by offset), or move to the right if at the board edge\r\n\telse if(movementDirection == 1)\r\n\t{\r\n\t\tif(selectedSite.x - offset > 0)\r\n\t\t\tselectedSite.x = selectedSite.x - offset;\r\n\t\telse\r\n\t\t\tselectedSite.x = selectedSite.x + offset;\r\n\t}\r\n\t///Move site upwards by offset (decrement y by offset), or move downwards if at the board edge\r\n\telse if(movementDirection == 2)\r\n\t{\r\n\t\tif(selectedSite.y - offset > 0)\r\n\t\t\tselectedSite.y = selectedSite.y - offset;\r\n\t\telse\r\n\t\t\tselectedSite.y = selectedSite.y + offset;\r\n\t}\r\n\t///Move site downwards by offset (increment y by offset), or move upwards if at board edge\r\n\telse if(movementDirection == 3)\r\n\t{\r\n\t\tif(selectedSite.y + offset < tempHeight)\r\n\t\t\tselectedSite.y = selectedSite.y + offset;\r\n\t\telse\r\n\t\t\tselectedSite.y = selectedSite.y - offset;\r\n\t}\r\n}\r\n\r\n/**\r\n\tCrossover operation; randomly select a site index and swap the sites located on said index. \r\n\tThis function will create two new children, swap their sites and return an array containing them.\r\n**/\r\nfunction crossover(chromosomeX, chromosomeY)\r\n{\r\n\tlet swapIndex = random(numberOfSites);\r\n\tlet childX = copyObject(chromosomeX);\r\n\tlet childY = copyObject(chromosomeY);\r\n\r\n\tlet tempSite = childX.sites[swapIndex];\r\n\tchildX.sites[swapIndex] = childY.sites[swapIndex];\r\n\tchildY.sites[swapIndex] = tempSite;\r\n\r\n\treturn [childX, childY];\r\n}\r\n\r\n///Tournament selection of parent for next generation - fittest from a random bunch is returned.\r\nfunction runTournament(generation)\r\n{\r\n\tlet chosenChromosome, fittestChromosome = null;\r\n\r\n\tfor(let i = 0; i < tournamentSize; i++)\r\n\t{\r\n\t\tchosenChromosome = generation[random(generationSize)];\r\n\t\tif(fittestChromosome == null || chosenChromosome.fitness < fittestChromosome.fitness)\r\n\t\t\tfittestChromosome = chosenChromosome;\r\n\t}\r\n\r\n\treturn fittestChromosome;\r\n}\r\n\r\n///Create and return the initial generation of chromosomes\r\nfunction initializeGeneration()\r\n{\r\n\tlet currentGeneration = [];\r\n\tfor(let i = 0; i < generationSize; i++)\r\n\t{\r\n\t\tlet newChromosome = copyObject(Chromosome);\r\n\t\tfor(let siteIndex = 0; siteIndex < numberOfSites; siteIndex++)\r\n\t\t{\r\n\t\t\tlet tempSite = copyObject(Site);\r\n\t\t\ttempSite.x = random(tempWidth + 1);\r\n\t\t\ttempSite.y = random(tempHeight + 1);\r\n\t\t\tnewChromosome.sites.push(tempSite);\r\n\t\t}\r\n\r\n\t\tcalculateAndSetFitness(newChromosome);\r\n\t\tcurrentGeneration.push(newChromosome);\r\n\t}\r\n\r\n\treturn currentGeneration;\r\n}\r\n\r\n///Calculate and set the fitness of a chromosome\r\nfunction calculateAndSetFitness(chromosome)\r\n{\r\n\tdetermineAndSetSiteBoundaries(chromosome);\r\n\tsortSites(chromosome);\r\n\tlet fitness = 0, difference;\r\n\r\n\tfor(let i = 0; i < desiredProportions.length; i++)\r\n\t{\r\n\t\tdifference = ( desiredProportions[i] * totalSurfaceArea ) - chromosome.sites[i].surfaceArea;\r\n\t\tif(difference < 0)\r\n\t\t\tdifference *= -1;\r\n\t\tfitness += difference;\r\n\t}\r\n\r\n\tchromosome.fitness = fitness;\r\n}\r\n\r\n///Sort the sites according to surface area from highest to lowest\r\nfunction sortSites(chromosome)\r\n{\r\n\tlet sites = chromosome.sites;\r\n\tsites.sort(function(siteA, siteB) { return \tsiteB.surfaceArea - siteA.surfaceArea });\r\n}\r\n\r\n///Generate the boundaries around the sites\r\nfunction determineAndSetSiteBoundaries(chromosome)\r\n{\r\n\tfor(let i = 0; i < numberOfSites; i++)\r\n\t\tchromosome.sites[i].surfaceArea = 0;\r\n\t\r\n\tfor(let row = 0; row < tempHeight; row++)\r\n\t{\r\n\t\tfor(let col = 0; col < tempWidth; col++)\r\n\t\t{\r\n\t\t\tlet distances = calculateDistancesFromSitesToPoint(col, row, chromosome.sites);\r\n\t\t\tlet equidistantPoints = equidistantPointsPresent(distances);\r\n\r\n\t\t\tchromosome.sites[equidistantPoints[0]].surfaceArea += 1;\r\n\t\t}\r\n\t}\r\n}","import Konva from 'konva';\r\nexport { width, height, setSites, setDisableEditMode, initializeData, calculateDistancesFromSitesToPoint, \r\n\tequidistantPointsPresent, generateSiteBoundaries, createPieces };\r\n\r\nlet apiURL = \"http://localhost:3200/api/puzzles/createPuzzle\";\r\nlet distanceMetric = 'euclidean';\r\nlet token;\r\n\r\nlet contentDiv = null;\r\nlet aiContentDiv = null;\r\nlet canvas;\r\nlet canvasCoords;\r\nlet width =  500;\r\nlet height = 500;\r\nlet stage;\r\nlet layer;\r\nlet square;\r\nlet pointsArray = [];\r\nlet sites = [];\r\nlet siteBoundaries = [];\r\nlet pieces = [];\r\nlet precision = 0;\r\n\r\nlet colorPalettes = [];\r\n//Default palette\r\nlet selectedPalette;\r\nlet paletteCounter = 0;\r\nlet radioButtons = [];\r\n\r\nlet hoverOverPoint = false;\r\nlet disableEditMode = false;\r\nlet deletePointButtonClicked = false;\r\nlet piecesJSONObject;\r\n\r\n/** Tutorial for adding more color palettes: **/\r\n//Step 1: Make an array with desired colors - can be hex values or names\r\nlet defaultPalette = ['Plum', 'Tomato', 'Orange', 'Violet', 'Gray', 'MediumSeaGreen', 'LightGray', 'SlateBlue', 'Brown', 'Aquamarine', 'AntiqueWhite', 'Red', 'Green'];\r\n//Step 2: Add the array to the page using this function with the array as a first and the desired name as a second parameter\r\naddColorPalette(defaultPalette, \"Default\");\r\n//Step 3: Profit!!\r\n\r\nlet shadesOfBluePalette = ['DarkBlue', 'DeepSkyBlue', 'MediumBlue', 'DodgerBlue', 'MidnightBlue', 'RoyalBlue', 'DarkSlateBlue', 'CornflowerBlue', 'SkyBlue', 'PowderBlue'];\r\naddColorPalette(shadesOfBluePalette, \"Shades of Blue\");\r\n\r\nlet shadesOfGreenPalette = ['Teal', 'MediumSpringGreen', 'LimeGreen', 'ForestGreen', 'MediumSeaGreen', 'LawnGreen', 'PaleGreen', 'GreenYellow', 'Aquamarine'];\r\naddColorPalette(shadesOfGreenPalette, \"Shades of Green\");\r\n\r\n///Add a color palette to the page and needed functionality\r\nfunction addColorPalette(arrayOfColors, paletteName)\r\n{\r\n\tcolorPalettes.push(arrayOfColors);\r\n\t// let radioButton = document.createElement('mat-radio-button');\r\n\tlet radioButton = document.createElement('input');\r\n\tradioButton.type = 'radio';\r\n\tradioButton.class = 'radio-button';\r\n\tradioButton.value = paletteName;\r\n\tradioButton.innerHTML = paletteName;\r\n\tradioButton.name = 'colorPalette';\r\n\tradioButton.paletteid = paletteCounter++;\r\n\tradioButton.addEventListener('mousedown', function() {\r\n\t\tselectedPalette = colorPalettes[this.paletteid];\r\n\t\tchangePuzzleColorPalette(selectedPalette);\r\n\t});\r\n\r\n\tradioButtons.push(radioButton);\r\n}\r\n\r\n///Changes the displayed color palette used on the puzzle and re-renders it\r\nfunction changePuzzleColorPalette(colors)\r\n{\r\n\tif(pieces.length > 0)\r\n\t{\r\n\t\tlayer.removeChildren();\r\n\t\tfor(let i = 0; i < pieces.length; i++)\r\n\t\t{\r\n\t\t\tpieces[i].attrs.stroke = colors[i % colors.length];\r\n\t\t\tlayer.add(pieces[i]);\r\n\t\t}\r\n\r\n\t\tlayer.draw();\r\n\t}\r\n}\r\n\r\nfunction randomizePuzzleColorPalette()\r\n{\r\n\tif(pieces.length > 0)\r\n\t{\r\n\t\tlayer.removeChildren();\r\n\t\tfor(let i = 0; i < pieces.length; i++)\r\n\t\t{\r\n\t\t\tpieces[i].attrs.stroke = getRandomRGB();\r\n\t\t\tlayer.add(pieces[i]);\r\n\t\t}\r\n\r\n\t\tlayer.draw();\r\n\t}\r\n}\r\n\r\n///Returns a random RGB value\r\nfunction getRandomRGB()\r\n{\r\n\tlet r = Math.floor(Math.random() * 256);\r\n\tlet g = Math.floor(Math.random() * 256);\r\n\tlet b = Math.floor(Math.random() * 256);\r\n\treturn \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\r\n}\r\n\r\n///Initialize data and set functions for buttons\r\nfunction initializeData(appendedString) \r\n{\r\n\tif(appendedString == undefined)\r\n\t\tappendedString = '';\r\n\r\n\tdisableEditMode = false;\r\n\t\r\n\tpiecesJSONObject = {\r\n\t\t'pieces' : []\r\n\t};\r\n\r\n\tselectedPalette = defaultPalette;\r\n\tconsole.log(canvas);\r\n\tcanvas = document.getElementById('container'+appendedString);\r\n\tconsole.log(canvas);\r\n\tstage = new Konva.Stage({\r\n\t\tcontainer: 'container'+appendedString,\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t});\r\n\r\n\tlayer = new Konva.Layer();\r\n\r\n\tsquare = new Konva.Rect({\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\tstroke: 'black',\r\n\t\tstrokeWidth: 2,\r\n\r\n\t});\r\n\r\n\tlayer.add(square);\r\n\tstage.add(layer);\r\n\r\n\tcanvas.addEventListener('mousedown', function(event){\r\n\t\tif(!disableEditMode && !hoverOverPoint)\r\n\t\t{\r\n\t\t\tcanvasCoords = canvas.getBoundingClientRect();\r\n\t\t\tlet x = event.clientX - canvasCoords.x;\r\n\t\t\tlet y = event.clientY - canvasCoords.y;\r\n\t\t\t\r\n\t\t\tlet point = createPoint(x, y);\r\n\r\n\t\t\tlayer.add(point);\r\n\t\t\tlayer.draw();\r\n\t\t\tconsole.log(\"X: \" + x + \" Y: \" + y);\r\n\t\t}\r\n\t});\r\n\r\n\taddColorPalettePicker(appendedString);\r\n\r\n\tdocument.getElementById('generatePuzzleButton'+appendedString).addEventListener('mousedown', generatePuzzle);\r\n\r\n\tdocument.getElementById('euclideanButton'+appendedString).addEventListener('mousedown', function(){\r\n\t\tsetDistanceMetric('euclidean');\r\n\t});\r\n\r\n\tdocument.getElementById('manhattanButton'+appendedString).addEventListener('mousedown', function(){\r\n\t\tsetDistanceMetric('manhattan');\r\n\t});\r\n\r\n\tdocument.getElementById('saveButton'+appendedString).addEventListener('mousedown', function() {\r\n\t\tsavePuzzle(false);\r\n\t});\r\n\r\n\tif(document.getElementById('deletePointButton') != null)\r\n\t{\r\n\t\tdocument.getElementById('deletePointButton').addEventListener('mousedown', function() {\r\n\t\t\tdeletePointButtonClicked = !deletePointButtonClicked;\r\n\t\t\tif(deletePointButtonClicked)\r\n\t\t\t{\r\n\t\t\t\tdisableEditMode = true;\r\n\t\t\t\tthis.innerHTML = 'edit';\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tdisableEditMode = false;\r\n\t\t\t\tthis.innerHTML = 'delete';\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t// document.getElementById('saveAndSubmitButton').addEventListener('mousedown', function() {\r\n\t// \t// let puzzleImage = stage.toDataURL({ pixelRatio: 0.25 });\r\n\t// \t// document.getElementById('testingImg').src = puzzleImage;\r\n\t// \tsavePuzzle(true);\r\n\t// });\r\n}\r\n\r\nfunction addColorPalettePicker(appendedString)\r\n{\r\n\tlet colorPaletteDiv = document.getElementById('colorPalettes'+appendedString);\r\n\tlet label;\r\n\tfor(let i = 0; i < radioButtons.length; i++)\r\n\t{\r\n\t\tlabel = document.createElement('label');\r\n\t\tlabel.innerHTML = radioButtons[i].value;\r\n\t\tcolorPaletteDiv.appendChild(radioButtons[i]);\r\n\t\tcolorPaletteDiv.appendChild(label);\r\n\t}\r\n\t\r\n\tdocument.getElementById('randomizeColorsButton'+appendedString).addEventListener('mousedown', randomizePuzzleColorPalette);\r\n}\r\n\r\n///Create a post ajax request and send it to the API in order to save the user's created puzzle\r\nfunction savePuzzle(share)\r\n{\r\n\ttoken = document.getElementById('tokenLabel').innerHTML;\r\n\t\r\n\tlet puzzleName = document.getElementById('puzzleNameInputBox').value;\r\n\tlet puzzleDescription = document.getElementById('puzzleDescriptionInputBox').value;\r\n\r\n\tlet puzzleImage = stage.toDataURL({ pixelRatio: 0.25 });\r\n\r\n\tlet jsonData = {\r\n\t\ttoken: token,\r\n\t\tname: puzzleName,\r\n\t\tdescription: puzzleDescription,\r\n\t\tpuzzleObject: piecesJSONObject,\r\n\t\timage: puzzleImage,\r\n\t\tshared: share\r\n\t};\r\n\r\n\t$.ajax({\r\n\t\ttype: 'POST',\r\n\t\turl: apiURL,\r\n\t\theaders: { \r\n\t\t\t'Access-Control-Allow-Origin' : '*' \r\n\t\t},\r\n\t\tcontentType: 'application/json',\r\n\t\tdata: JSON.stringify(jsonData),\r\n\t\tdataType: 'json',\r\n\t\tsuccess: function(data, status) {\r\n\t\t\tconsole.log(data);\r\n\t\t\tconsole.log(status);\r\n\t\t},\r\n\t\terror: function(data, status) {\r\n\t\t\tconsole.log(data);\r\n\t\t\tconsole.log(status);\t\r\n\t\t}\r\n\t});\r\n}\r\n\r\n///Set the selected distance metric for the puzzle\r\nfunction setDistanceMetric(metric)\r\n{\r\n\tdistanceMetric = metric;\r\n}\r\n\r\n///Set disableEditMode to true to prevent user from clicking it any further\r\nfunction setDisableEditMode(bool)\r\n{\r\n\tdisableEditMode = bool;\r\n}\r\n\r\n///Set the sites array\r\nfunction setSites(tempSites)\r\n{\r\n\tsites = tempSites;\r\n}\r\n\r\n///Create a visual representation of where the user clicks\r\nfunction createPoint(x, y)\r\n{\r\n\tlet point = new Konva.Circle({\r\n\t\tx: x,\r\n\t\ty: y,\r\n\t\tradius: 1,\r\n\t\tstroke: 'black',\r\n\t\tstrokeWidth: 4,\r\n\t\tdraggable: true\r\n\t});\r\n\r\n\tpoint.on('mouseover', function (event){\r\n\t\tdocument.onmousemove = function(event) {\r\n\t\t\tcanvasCoords = canvas.getBoundingClientRect();\r\n\t\t\tpoint.x(event.clientX - canvasCoords.x);\r\n\t\t\tpoint.y(event.clientY - canvasCoords.y);\r\n\t\t};\r\n\r\n\t\thoverOverPoint = true;\r\n\t\tdocument.body.style.cursor = 'pointer';\r\n\t});\r\n\r\n\tpoint.on('mouseout', function(event) {\r\n\t\tdocument.onmousemove = null;\r\n\t\thoverOverPoint = false;\r\n\t\tdocument.body.style.cursor = 'default';\r\n\t});\r\n\r\n\tpoint.on('click', function(event) {\r\n\t\t// console.log('clicked!');\r\n\t\tif(deletePointButtonClicked)\r\n\t\t{\r\n\t\t\tdocument.onmousemove = null;\r\n\t\t\thoverOverPoint = false;\r\n\t\t\tdocument.body.style.cursor = 'default';\r\n\t\t\tpoint.destroy();\r\n\t\t\tlayer.draw();\r\n\t\t}\r\n\t});\r\n\r\n\treturn point;\r\n}\r\n\r\n///Calls the necessary functions to generate puzzle's vertiecs as well as the visual representation \r\nfunction generatePuzzle()\r\n{\r\n\t//Testing data\r\n\t// {\"sites\":[78,108,300,102,100,247,333,281,184,331],\"queries\":[]}\r\n\t// sites = [\r\n\t// {\r\n\t// \tx:78,\r\n\t// \ty:108,\r\n\t// },\r\n\t// {\r\n\t// \tx:300,\r\n\t// \ty:102,\r\n\t// },\r\n\t// {\r\n\t// \tx:100,\r\n\t// \ty:247,\r\n\t// },\r\n\t// {\r\n\t// \tx:333,\r\n\t// \ty:281,\r\n\t// },\r\n\t// {\r\n\t// \tx:184,\r\n\t// \ty:331,\r\n\t// }\r\n\t// ];\r\n\r\n\tpointsArray = layer.getChildren(function(node) {\r\n\t\treturn node.getClassName() === 'Circle';\r\n\t});\r\n\r\n\tfor (let i = pointsArray.length - 1; i >= 0; i--) {\r\n\t\tsites.push({\r\n\t\t\tx: pointsArray[i].attrs.x,\r\n\t\t\ty: pointsArray[i].attrs.y,\r\n\t\t});\r\n\t}\r\n\r\n\tlayer.destroyChildren();\r\n\r\n\t///This makes sure that the generate button will only generate once\r\n\tdisableEditMode = true;\r\n\r\n\tgenerateSiteBoundaries();\r\n\tcreatePieces();\r\n}\r\n\r\n///Creates the puzzle pieces from the siteBoundaries for each site(position selected by the user) \r\nfunction createPieces()\r\n{\r\n\tfor(let i = 0; i < sites.length; i++)\r\n\t{\r\n\t\tlet trimmedPoints = trimPoints(siteBoundaries[i]);\r\n\t\tlet piece = new Konva.Line({\r\n\t\t\tpoints: trimmedPoints,\r\n\t\t\tstroke: selectedPalette[i % selectedPalette.length],\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tdraggable: true,\r\n\t\t});\r\n\r\n\t\tpiece.on('mouseover', function (){\r\n\t\t\tdocument.body.style.cursor = 'pointer';\r\n\t\t});\r\n\r\n\t\tpiece.on('mouseout', function() {\r\n\t\t\tdocument.body.style.cursor = 'default';\r\n\t\t});\r\n\r\n\t\tpieces.push(piece);\r\n\t\tpiecesJSONObject.pieces.push(trimmedPoints);\r\n\t\tlayer.add(piece);\r\n\t}\r\n\tlayer.draw();\r\n\tpiecesJSONObject = JSON.stringify(piecesJSONObject);\r\n}\r\n\r\n///Shortens the array of vertices for each puzzle piece\r\nfunction trimPoints(pointArray)\r\n{\r\n\tlet trimmedPoints = [];\r\n\tlet lastPointCol = -1;\r\n\tlet firstPointCol = pointArray[0];\r\n\tlet currentRow = pointArray[1];\r\n\tlet crissCross = 1;\r\n\r\n\tfor(let index = 0; index < pointArray.length; index+=2)\r\n\t{\r\n\t\tif(currentRow != pointArray[index+1])\r\n\t\t{\r\n\t\t\tif(crissCross == 1)\r\n\t\t\t{\r\n\t\t\t\ttrimmedPoints.push(firstPointCol, currentRow);\r\n\t\t\t\ttrimmedPoints.push(lastPointCol, currentRow);\r\n\t\t\t\tcrissCross = -1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttrimmedPoints.push(lastPointCol, currentRow);\r\n\t\t\t\ttrimmedPoints.push(firstPointCol, currentRow);\r\n\t\t\t\tcrissCross - 1;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfirstPointCol = pointArray[index];\r\n\t\t\tlastPointCol = pointArray[index];\r\n\t\t\tcurrentRow = pointArray[index+1];\t\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tlastPointCol = pointArray[index];\r\n\t\t}\r\n\t}\r\n\r\n\treturn trimmedPoints;\r\n}\r\n\r\n///Generate the boundaries around the sites\r\nfunction generateSiteBoundaries()\r\n{\r\n\tfor(let i = 0; i < sites.length; i++)\r\n\t\tsiteBoundaries[i] = [];\r\n\r\n\tfor(let row = 0; row < height; row++)\r\n\t{\r\n\t\tfor(let col = 0; col < width; col++)\r\n\t\t{\r\n\t\t\tlet distances = calculateDistancesFromSitesToPoint(col, row, sites);\r\n\t\t\tlet equidistantPoints = equidistantPointsPresent(distances);\r\n\r\n\t\t\tsiteBoundaries[equidistantPoints[0]].push(col);\r\n\t\t\tsiteBoundaries[equidistantPoints[0]].push(row);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n///Determines which site is closest to a pixel position\r\nfunction equidistantPointsPresent(distances)\r\n{\r\n\tlet returnArray = [];\r\n\tlet minimumDistance = Math.min(...distances);\r\n\r\n\tif(distanceMetric === 'euclidean')\r\n\t\tminimumDistance = minimumDistance.toFixed(precision) + '';\r\n\r\n\tlet index = 0, counter = 0;\r\n\r\n\twhile(index != -1)\r\n\t{\r\n\t\tindex = distances.indexOf(minimumDistance);\r\n\t\tif(index != -1)\r\n\t\t{\r\n\t\t\treturnArray.push(index+counter);\r\n\t\t\tdistances.splice(index, 1);\r\n\t\t\tcounter++;\r\n\t\t}\r\n\t}\r\n\r\n\treturn returnArray;\r\n}\r\n\r\n///Calculates the distances from each site to pixel in position (xOfPoint, yOfPoint) and returns an array\r\nfunction calculateDistancesFromSitesToPoint(xOfPoint, yOfPoint, sitePoints)\r\n{\r\n\tlet result = [];\r\n\tfor(let i = 0; i < sitePoints.length; i++)\r\n\t\tresult.push(calculateDistance(xOfPoint, yOfPoint, sitePoints[i].x, sitePoints[i].y));\r\n\r\n\treturn result;\r\n}\r\n\r\n///Calculates the distance from point1 to point2 using the selected distance metrix\r\nfunction calculateDistance(point1X, point1Y, point2X, point2Y)\r\n{\r\n\tif(distanceMetric === 'euclidean')\r\n\t\treturn calculateEuclideanDistance(point1X, point1Y, point2X, point2Y);\r\n\telse if(distanceMetric === 'manhattan')\r\n\t\treturn calculateManhattanDistance(point1X, point1Y, point2X, point2Y);\r\n}\r\n\r\n///Calculates and returns the Euclidean distance\r\nfunction calculateEuclideanDistance(point1X, point1Y, point2X, point2Y)\r\n{\r\n\tlet result = Math.pow( Math.pow( point1X - point2X, 2 ) + Math.pow( point1Y - point2Y, 2 ), 0.5 );\r\n\treturn result.toFixed(precision);\r\n}\r\n\r\n///Calculates and returns the Manhattan distance\r\nfunction calculateManhattanDistance(point1X, point1Y, point2X, point2Y)\r\n{\r\n\tlet resultX = point1X - point2X;\r\n\tif(resultX < 0)\r\n\t\tresultX *= -1;\r\n\tlet resultY = point1Y - point2Y;\r\n\tif(resultY < 0)\r\n\t\tresultY *= -1;\r\n\tlet result = resultX + resultY;\r\n\treturn result;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}