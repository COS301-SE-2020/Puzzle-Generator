{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/admin-puzzles/admin-puzzles.component.ts","webpack:///src/app/admin/admin-puzzles/admin-puzzles.component.html","webpack:///src/app/admin/admin-ratings/admin-ratings.component.ts","webpack:///src/app/admin/admin-ratings/admin-ratings.component.html","webpack:///src/app/admin/admin-user/admin-user.component.ts","webpack:///src/app/admin/admin-user/admin-user.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dialogs/solve-dialog/solve-dialog.component.ts","webpack:///src/app/dialogs/solve-dialog/solve-dialog.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/pages/aicreate/aicreate.component.ts","webpack:///src/app/pages/aicreate/aicreate.component.html","webpack:///src/app/pages/create/create.component.ts","webpack:///src/app/pages/create/create.component.html","webpack:///src/app/pages/index/index.component.ts","webpack:///src/app/pages/index/index.component.html","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/profile-puzzles/profile-puzzles.component.html","webpack:///src/app/pages/profile-puzzles/profile-puzzles.component.ts","webpack:///src/app/pages/profile-ratings/profile-ratings.component.ts","webpack:///src/app/pages/profile-ratings/profile-ratings.component.html","webpack:///src/app/pages/profile/profile.component.ts","webpack:///src/app/pages/profile/profile.component.html","webpack:///src/app/pages/ratings/RatingsArr.ts","webpack:///src/app/pages/ratings/puzzleArr.ts","webpack:///src/app/pages/ratings/ratings.component.ts","webpack:///src/app/pages/ratings/ratings.component.html","webpack:///src/app/pages/reset-password/reset-password.component.ts","webpack:///src/app/pages/reset-password/reset-password.component.html","webpack:///src/app/pages/reset-success/reset-success.component.ts","webpack:///src/app/pages/reset-success/reset-success.component.html","webpack:///src/app/pages/signup/signup.component.ts","webpack:///src/app/pages/signup/signup.component.html","webpack:///src/app/rate-dialog/rate-dialog.component.ts","webpack:///src/app/rate-dialog/rate-dialog.component.html","webpack:///src/app/services/api.service.ts","webpack:///src/assets/js/aiCreation.js","webpack:///src/assets/js/manualCreation.js","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdminPuzzlesComponent","api","router","ratings","puzzles","pageSize","startIndex","endIndex","pageSizeOptions","event","pageIndex","totalNumberOfPuzzles","slice","filterValue","datasource","filterPredicate","data","filter","name","toLowerCase","includes","creator","trim","filteredData","length","sort","a","b","paramA","paramB","Date","created","getTime","rating","i","puzzleObj","description","createdAt","image","shared","j","total","k","puzzleID","push","dataAvailable","show","populatePuz","getAllPuzzleRatings","subscribe","ratingObj","error","console","log","getPuzzles","getAllPuzzlesAdmin","Object","deletePuzzleAdmin","alert","location","reload","localStorage","getItem","navigate","populate","applyFilter","puzzleAscending","puzzleDescending","ratingAscending","ratingDescending","creatorAscending","creatorDescending","dateAscending","dateDescending","selector","templateUrl","styleUrls","AdminRatingsComponent","getAllRatingsAdmin","ratingList","testPuzzle","testUser","rateID","deleteRatingAdmin","getPuzzleRatings","nameAscending","nameDescending","AdminUserComponent","totalNumberOfUsers","userList","getAllUsers","user","deleteUser","getUsers","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","declarations","entryComponents","providers","bootstrap","SolveDialogComponent","NavbarComponent","removeItem","token","admin","logout","AICreateComponent","CreateComponent","IndexComponent","LoginComponent","formBuilder","error_messages","type","message","fieldTextType","currentUser","formError","verifyUser","email","password","loginUser","setItem","setTimeout","status","loginForm","group","required","minLength","toggleFieldTextType","ProfilePuzzlesComponent","temp","setPageSizeOptionsInput","userPuzzleList","getPuzzlesByUser","text","puzzle","sharePuzzle","deletePuzzle","stopSharingPuzzle","ms","delay","getUserPuzzles","ProfileRatingsComponent","dialog","split","map","str","userRatingsList","puzzleName","getPuzzleRatingsByUser","ratePID","rateDialogRef","open","afterClosed","result","ratingEntry","createNewPuzzleRating","rateP","checkData","openRateDialog","deleteVal","findRatingID","deleteRating","getUserPuzzleRatings","ProfileComponent","nameTextboxValue","undefined","updateName","currentUserObject","usernameTextboxValue","updateUsername","getUser","updateNameForm","pattern","updateUsernameForm","username","RatingsArr","PuzzleArr","RatingsComponent","cdr","displayedColumns","getAllPuzzles","searchValue","getSearchedPuzzles","dataObjectSize","showRating","solveDialog","ResetPasswordComponent","fieldTextType2","resetDone","doPasswordsMatch","resetPasswordForm","controls","value","resetPassword","confirmPassword","firstPassword","secondPassword","toggleFieldTextType2","ResetSuccessComponent","route","snapshot","paramMap","get","SignupComponent","createUser","signUpForm","newUser","createNewUser","RateDialogComponent","dialogRef","form","input","close","submit","APIService","http","httpOptions","headers","post","put","term","providedIn","Chromosome","sites","fitness","Site","x","y","surfaceArea","generatePuzzleAIButton","colorPalettesDiv","tempWidth","tempHeight","totalSurfaceArea","generationSize","tournamentSize","maximumIterations","seedString","sliders","labels","numberOfSites","desiredProportions","groupDistribution","copyObject","obj","JSON","parse","stringify","xmur3","h","Math","imul","charCodeAt","mulberry32","t","seed","rand","random","max","ceil","expandPuzzle","factor","initializeDataAI","document","getElementById","addEventListener","generatePuzzleAI","remove","displaySlidersCard","generateSliders","appendChild","proportion","counter","innerHTML","run","numberOfSliders","inputContainer","defaultValue","slider","createElement","min","previousValue","sliderid","step","difference","distributedValue","toFixed","leftover","tempValue","parseFloat","parseInt","headerLabel","valueLabel","br","currentGeneration","nextGeneration","parentX","parentY","children","initializeGeneration","generation","getFittest","runTournament","crossover","mutate","calculateAndSetFitness","fittestChromosome","chromosome","selectedSite","offset","movementDirection","chromosomeX","chromosomeY","swapIndex","childX","childY","tempSite","chosenChromosome","newChromosome","siteIndex","determineAndSetSiteBoundaries","sortSites","siteA","siteB","row","col","distances","equidistantPoints","apiURL","distanceMetric","contentDiv","aiContentDiv","canvas","canvasCoords","width","height","stage","layer","pointsArray","siteBoundaries","pieces","precision","colorPalettes","selectedPalette","paletteCounter","radioButtons","hoverOverPoint","disableEditMode","deletePointButtonClicked","piecesJSONObject","editIcon","deleteIcon","defaultPalette","addColorPalette","shadesOfRedPalette","shadesOfGreenPalette","shadesOfBluePalette","arrayOfColors","paletteName","changePuzzleColorPalette","colors","removeChildren","attrs","stroke","add","draw","randomizePuzzleColorPalette","getRandomRGB","r","floor","g","initializeData","appendedString","Stage","container","Layer","getBoundingClientRect","clientX","clientY","point","createPoint","generatePuzzle","setDistanceMetric","savePuzzle","palettes","getElementsByClassName","paletteIndex","getAttribute","puzzleDescription","puzzleImage","toDataURL","pixelRatio","jsonData","puzzleObject","$","ajax","url","contentType","dataType","success","metric","setDisableEditMode","bool","setSites","tempSites","clearBoard","destroyChildren","Circle","radius","strokeWidth","draggable","on","onmousemove","body","style","cursor","destroy","getChildren","node","getClassName","generateSiteBoundaries","createPieces","trimmedPoints","trimPoints","piece","Line","points","pointArray","lastPointCol","firstPointCol","currentRow","crissCross","index","calculateDistancesFromSitesToPoint","equidistantPointsPresent","returnArray","minimumDistance","indexOf","splice","xOfPoint","yOfPoint","sitePoints","calculateDistance","point1X","point1Y","point2X","point2Y","calculateEuclideanDistance","calculateManhattanDistance","pow","resultX","resultY","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { PuzzleArr } from '../../pages/ratings/puzzleArr';\r\nimport { RatingsArr } from '../../pages/ratings/RatingsArr';\r\n\r\n@Component({\r\n  selector: 'app-admin-puzzles',\r\n  templateUrl: './admin-puzzles.component.html',\r\n  styleUrls: ['./admin-puzzles.component.css']\r\n})\r\nexport class AdminPuzzlesComponent implements OnInit {\r\n\r\n  ratings: Array<RatingsArr> = [];\r\n  puzzles: Array<PuzzleArr> = [];\r\n  ratingEntry: any;\r\n  datasource: any;\r\n  show: boolean;\r\n  dataAvailable: boolean ;\r\n\r\n  totalNumberOfPuzzles: number;\r\n  ratingsLSize: number;\r\n\r\n  //pagination\r\n  pageSize: number = 6;\r\n  startIndex:number = 0;\r\n  endIndex: number = 6;\r\n  pageSizeOptions: number[] = [5, 10, 25, 100];\r\n\r\n  // MatPaginator Output\r\n  pageEvent: PageEvent;\r\n\r\n  constructor(private api: APIService, private router: Router) { }\r\n\r\n  changeEvent(event: PageEvent)\r\n  {\r\n    this.startIndex = event.pageIndex * event.pageSize;\r\n    this.endIndex = this.startIndex + this.pageSize;\r\n    if(this.endIndex > this.totalNumberOfPuzzles){\r\n      this.endIndex = this.totalNumberOfPuzzles\r\n    }\r\n    this.puzzles.slice(this.startIndex, this.endIndex);\r\n    return event;\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.datasource.filterPredicate = function(data, filter: string): boolean {\r\n      return data.name.toLowerCase().includes(filter) || data.creator.toLowerCase().includes(filter)\r\n    };\r\n    this.datasource.filter = filterValue.trim().toLowerCase();\r\n    this.totalNumberOfPuzzles = this.datasource.filteredData.length;\r\n  }\r\n\r\n\r\n\r\n  puzzleDescending()\r\n  {\r\n    return this.puzzles.sort( (a,b) => {\r\n      let paramA = a.name.toLowerCase();\r\n      let paramB = b.name.toLowerCase();\r\n\r\n      if(paramA > paramB ){ return -1; }\r\n      else { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  puzzleAscending()\r\n  {\r\n    return this.puzzles.sort( (a,b) => {\r\n      let paramA = a.name.toLowerCase();\r\n      let paramB = b.name.toLowerCase();\r\n\r\n      if(paramA < paramB ){ return -1; }\r\n      else { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  creatorDescending()\r\n  {\r\n    return this.puzzles.sort( (a,b) => {\r\n      let paramA = a.creator.toLowerCase();\r\n      let paramB = b.creator.toLowerCase();\r\n\r\n      if(paramA > paramB ){ return -1; }\r\n      else { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  creatorAscending()\r\n  {\r\n    return this.puzzles.sort( (a,b) => {\r\n      let paramA = a.creator.toLowerCase();\r\n      let paramB = b.creator.toLowerCase();\r\n\r\n      if(paramA < paramB ){ return -1; }\r\n      else { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  dateDescending()\r\n  {\r\n    return this.puzzles.sort( (a,b) => {\r\n      // let paramA = a.created;//.toLowerCase();\r\n      // let paramB = b.creator;//.toLowerCase();\r\n\r\n      // if(paramA > paramB ){ return -1; }\r\n      // else { return 1; }\r\n      // return 0;\r\n      let paramA = new Date(a.created).getTime();\r\n      let paramB = new Date(b.created).getTime();\r\n      return paramA > paramB ? 1 : -1;\r\n    });\r\n  }\r\n\r\n  dateAscending()\r\n  {\r\n    return this.puzzles.sort( (a,b) => {\r\n      let paramA = new Date(a.created).getTime();\r\n      let paramB = new Date(b.created).getTime();\r\n      return paramA < paramB ? 1 : -1;\r\n    });\r\n  }\r\n\r\n  ratingDescending()\r\n  {\r\n    return this.puzzles.sort( (a,b) => {\r\n      let paramA = a.rating;\r\n      let paramB = b.rating;\r\n\r\n      if(paramA > paramB ){ return -1; }\r\n      else { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  ratingAscending()\r\n  {\r\n    return this.puzzles.sort( (a,b) => {\r\n      let paramA = a.rating;\r\n      let paramB = b.rating;\r\n\r\n      if(paramA < paramB ){ return -1; }\r\n      else { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n\r\n  getPuzzles(data: any){\r\n    this.puzzles.length = 0;\r\n    for(let i=0; data[i]!=null; i++)\r\n    {\r\n      let puzzleObj = new PuzzleArr();\r\n      puzzleObj.id = data[i].id;\r\n      puzzleObj.name = data[i].name;\r\n      puzzleObj.description = data[i].description;\r\n      puzzleObj.creator = data[i].creator;\r\n      puzzleObj.created = data[i].createdAt;\r\n      puzzleObj.image = data[i].image;\r\n      puzzleObj.shared = data[i].shared;\r\n\r\n      let j = 0;\r\n      let total = 0;\r\n\r\n      for (let k=0; this.ratings[k]!=null; k++){\r\n        if (this.ratings[k].puzzleID == data[i].id)\r\n        {\r\n          //********* ERROR HERE - THIS LOOP IS NOT ENTERED WHEN THE RATINGS VALUE IS 0  ************\r\n          total = total + this.ratings[k].rating;\r\n          j = j+1;\r\n        }\r\n      }\r\n\r\n      if (j == 0){\r\n        puzzleObj.rating = 0;\r\n      }\r\n      else{\r\n        puzzleObj.rating = (total/j);\r\n      }\r\n      this.puzzles.push(puzzleObj);\r\n    }\r\n\r\n    this.datasource = new MatTableDataSource(this.puzzles);\r\n\r\n    this.dataAvailable = true;\r\n    this.show= false;\r\n\r\n  }\r\n\r\n  populate(populatePuz: any)\r\n  {\r\n    this.ratings.length = 0;\r\n    this.api.getAllPuzzleRatings().subscribe(\r\n      data=> {\r\n        for(let i=0; data[i]!= null; i++){\r\n          let ratingObj = new RatingsArr();\r\n          ratingObj.id = data[i].id;\r\n          ratingObj.rating = data[i].rating;\r\n          ratingObj.puzzleID = data[i].puzzleID;\r\n          this.ratings.push(ratingObj);\r\n        }\r\n      },\r\n      error => {\r\n        console.log(\"Error from API: \", error.error);\r\n      });\r\n\r\n\r\n    if (populatePuz != null)\r\n    {\r\n      this.getPuzzles(populatePuz);\r\n    }\r\n    else\r\n    {\r\n      this.api.getAllPuzzlesAdmin().subscribe(\r\n        data => {\r\n          this.totalNumberOfPuzzles = Object.keys(data).length;\r\n          this.getPuzzles(data);\r\n      },\r\n        error => {//if status code other than in the 200 range returned, show error\r\n          console.log('Error from API: ', error.error);\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n  delete(puzzleID){\r\n      if(this.api.deletePuzzleAdmin(puzzleID).subscribe()){\r\n        alert(\"Puzzle deleted\");\r\n        location.reload();\r\n      }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if(!localStorage.getItem('token')){\r\n      this.router.navigate(['/index']);\r\n      alert(\"You are not logged in\");\r\n    }\r\n    this.show = true;\r\n    this.dataAvailable = false;\r\n    this.populate(null);\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"container\">\r\n<mat-form-field class=\"searchArea\">\r\n    <mat-label>Search</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event.target.value)\">\r\n</mat-form-field>\r\n\r\n<button mat-button class=\"sortBtns\">Name\r\n  <mat-icon (click)=\"puzzleAscending()\" class=\"arrow\">arrow_upwardward</mat-icon> |\r\n  <mat-icon (click)=\"puzzleDescending()\" class=\"arrow\">arrow_downward</mat-icon>\r\n</button>\r\n\r\n<button mat-button class=\"sortBtns\">Rating\r\n  <mat-icon (click)=\"ratingAscending()\" class=\"arrow\">arrow_upwardward</mat-icon> |\r\n  <mat-icon (click)=\"ratingDescending()\" class=\"arrow\">arrow_downward</mat-icon>\r\n</button>\r\n\r\n<button mat-button class=\"sortBtns\">Creator\r\n  <mat-icon (click)=\"creatorAscending()\" class=\"arrow\">arrow_upwardward</mat-icon> |\r\n  <mat-icon (click)=\"creatorDescending()\" class=\"arrow\">arrow_downward</mat-icon>\r\n</button>\r\n\r\n<button mat-button class=\"sortBtns\">Date\r\n  <mat-icon (click)=\"dateAscending()\" class=\"arrow\">arrow_upwardward</mat-icon> |\r\n  <mat-icon (click)=\"dateDescending()\" class=\"arrow\">arrow_downward</mat-icon>\r\n</button>\r\n\r\n<div class=\"spinner\">\r\n  <mat-spinner *ngIf=\"show\" id=\"spinner\"></mat-spinner>\r\n</div>\r\n\r\n<div class=\"container-fluid\" *ngIf=\"dataAvailable\" >\r\n  <h1 class=\"main-title\" >All Puzzles</h1>\r\n    <div class=\"flex-container\" fxLayout=\"row wrap\" fxLayout.xs=\"row wrap\" fxLayoutAlign=\"space-evenly center\">\r\n        <mat-card class=\"content\"  *ngFor=\"let puzzle of this.datasource.filteredData | slice: startIndex:endIndex\">\r\n          <div class=\"content-overlay\"></div>\r\n          <!-- <mat-icon aria-hidden=\"false\" class=\"infoIcon\">info_outline</mat-icon> -->\r\n          <img class=\"content-image\" src=\"{{puzzle.image}}\">\r\n            <div class=\"content-details fadeIn-bottom\">\r\n              <mat-card-header>\r\n               <mat-card-subtitle class=\"puzzleDetails\"><strong>Created by:</strong> {{puzzle.creator}}</mat-card-subtitle>\r\n                <mat-card-subtitle class=\"puzzleDetails\"><strong>Created on:</strong> {{puzzle.created}}</mat-card-subtitle>\r\n                <mat-card-subtitle class=\"puzzleDetails\"><strong>Description:</strong> {{puzzle.description}}</mat-card-subtitle>\r\n                <mat-card-subtitle class=\"puzzleDetails\"><strong>Shared:</strong> {{puzzle.shared}}</mat-card-subtitle>\r\n              </mat-card-header>\r\n            </div>\r\n            <mat-card-title><strong>{{puzzle.name}}</strong></mat-card-title>\r\n            <mat-card-subtitle>Rating: {{puzzle.rating}}/5 <span *ngIf=\"puzzle.rating == '0'\">- Not yet rated</span> </mat-card-subtitle>\r\n\r\n            <mat-card-actions class=\"puzzleActions\">\r\n              <button mat-button class=\"btns\" (click)=\"delete(puzzle.id)\">DELETE PUZZLE</button>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n<mat-paginator *ngIf=\"!show\" class=\"paginator\" [length]=\"totalNumberOfPuzzles\" [pageSize]=\"pageSize\"\r\n                  (page)=\"pageEvent = changeEvent($event)\">\r\n</mat-paginator>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { PuzzleArr } from '../../pages/ratings/puzzleArr';\r\nimport { RatingsArr } from '../../pages/ratings/RatingsArr';\r\n\r\n@Component({\r\n  selector: 'app-admin-ratings',\r\n  templateUrl: './admin-ratings.component.html',\r\n  styleUrls: ['./admin-ratings.component.css']\r\n})\r\nexport class AdminRatingsComponent implements OnInit {\r\n\r\n  ratingList: any;\r\n  totalNumberOfPuzzles: number;\r\n  ratingsLSize: number;\r\n\r\n  //pagination\r\n  pageSize: number = 6;\r\n  startIndex:number = 0;\r\n  endIndex: number = 6;\r\n  pageSizeOptions: number[] = [5, 10, 25, 100];\r\n\r\n  // MatPaginator Output\r\n  pageEvent: PageEvent;\r\n  show: boolean;\r\n\r\n  datasource: any;\r\n\r\n  constructor(private api: APIService, private router: Router) { }\r\n\r\n  getPuzzleRatings() {\r\n    this.api.getAllRatingsAdmin().subscribe( data => {\r\n      this.ratingList = data;\r\n      this.totalNumberOfPuzzles = Object.keys(data).length;\r\n      console.log(this.ratingList);\r\n      this.show = false ;\r\n      this.datasource = new MatTableDataSource(this.ratingList);\r\n    }\r\n    )\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.datasource.filterPredicate = function(data, filter: string): boolean {\r\n      return data.testPuzzle.name.toLowerCase().includes(filter) || data.testUser.name.toLowerCase().includes(filter)\r\n    };\r\n    this.datasource.filter = filterValue.trim().toLowerCase();\r\n    this.totalNumberOfPuzzles = this.datasource.filteredData.length;\r\n  }\r\n\r\n  changeEvent(event: PageEvent)\r\n  {\r\n    console.log(\"Event: \", event);\r\n    this.startIndex = event.pageIndex * event.pageSize;\r\n    this.endIndex = this.startIndex + this.pageSize;\r\n    if(this.endIndex > this.totalNumberOfPuzzles){\r\n      this.endIndex = this.totalNumberOfPuzzles\r\n    }\r\n    this.ratingList.slice(this.startIndex, this.endIndex);\r\n    return event;\r\n  }\r\n\r\n  nameDescending()\r\n  {\r\n    return this.ratingList.sort( (a,b) => {\r\n      let paramA = a.testPuzzle.name.toLowerCase();\r\n      let paramB = b.testPuzzle.name.toLowerCase();\r\n\r\n      if(paramA > paramB ){ return -1; }\r\n      else { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  nameAscending()\r\n  {\r\n    return this.ratingList.sort( (a,b) => {\r\n      let paramA = a.testPuzzle.name.toLowerCase();\r\n      let paramB = b.testPuzzle.name.toLowerCase();\r\n\r\n      if(paramA < paramB ){ return -1; }\r\n      else { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  ratingDescending()\r\n  {\r\n    return this.ratingList.sort( (a,b) => {\r\n      let paramA = a.rating;//.toLowerCase();\r\n      let paramB = b.rating;//.toLowerCase();\r\n\r\n      if(paramA > paramB ){ return -1; }\r\n      else { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  ratingAscending()\r\n  {\r\n    return this.ratingList.sort( (a,b) => {\r\n      let paramA = a.rating;//.toLowerCase();\r\n      let paramB = b.rating;//.toLowerCase();\r\n\r\n      if(paramA < paramB ){ return -1; }\r\n      else { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  creatorDescending()\r\n  {\r\n    return this.ratingList.sort( (a,b) => {\r\n      let paramA = a.testUser.name.toLowerCase();\r\n      let paramB = b.testUser.name.toLowerCase();\r\n\r\n      if(paramA > paramB ){ return -1; }\r\n      else { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  creatorAscending()\r\n  {\r\n    return this.ratingList.sort( (a,b) => {\r\n      let paramA = a.testUser.name.toLowerCase();\r\n      let paramB = b.testUser.name.toLowerCase();\r\n\r\n      if(paramA < paramB ){ return -1; }\r\n      else { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  delete(rateID){\r\n    if(this.api.deleteRatingAdmin(rateID).subscribe()){\r\n      alert(\"Rating deleted\");\r\n      location.reload();\r\n    }\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    if(!localStorage.getItem('token')){\r\n      this.router.navigate(['/index']);\r\n      alert(\"You are not logged in\");\r\n    }\r\n\r\n    this.getPuzzleRatings();\r\n    this.show = true;\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n\r\n<mat-form-field class=\"searchArea\">\r\n    <mat-label>Search</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event.target.value)\">\r\n</mat-form-field>\r\n\r\n<button mat-button class=\"sortBtns\">Name\r\n    <mat-icon (click)=\"nameAscending()\" class=\"arrow\">arrow_upwardward</mat-icon> |\r\n    <mat-icon (click)=\"nameDescending()\" class=\"arrow\">arrow_downward</mat-icon>\r\n  </button>\r\n\r\n  <button mat-button class=\"sortBtns\">Rating\r\n    <mat-icon (click)=\"ratingAscending()\" class=\"arrow\">arrow_upwardward</mat-icon> |\r\n    <mat-icon (click)=\"ratingDescending()\" class=\"arrow\">arrow_downward</mat-icon>\r\n  </button>\r\n\r\n  <button mat-button class=\"sortBtns\">Rater\r\n    <mat-icon (click)=\"creatorAscending()\" class=\"arrow\">arrow_upwardward</mat-icon> |\r\n    <mat-icon (click)=\"creatorDescending()\" class=\"arrow\">arrow_downward</mat-icon>\r\n  </button>\r\n\r\n<div class=\"container\">\r\n<div class=\"container-fluid\" >\r\n    <h1 class=\"main-title\" >All Ratings</h1>\r\n    <div class=\"flex-container\" fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\">\r\n        <mat-card class=\"content\" *ngFor=\"let rating of this.datasource.filteredData | slice: startIndex:endIndex\">\r\n          <img class=\"content-image\" src=\"{{rating.testPuzzle.image}}\">\r\n            <mat-card-title><strong>{{rating.testPuzzle.name}}</strong></mat-card-title>\r\n            <mat-card-subtitle>Rating: {{rating.rating}}/5</mat-card-subtitle>\r\n            <mat-card-subtitle>Rater: {{rating.testUser.name}}</mat-card-subtitle>\r\n            <mat-card-actions class=\"puzzleActions\">\r\n                <button mat-button class=\"btns\" (click)=\"delete(rating.id)\">DELETE RATING</button>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n<mat-paginator *ngIf=\"!show\" [length]=\"totalNumberOfPuzzles\" [pageSize]=\"pageSize\"\r\n                  (page)=\"pageEvent = changeEvent($event)\">\r\n</mat-paginator>\r\n\r\n</div>\r\n\r\n<div class=\"spinner\">\r\n<mat-spinner *ngIf=\"show\" id=\"spinner\"></mat-spinner>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { Observable } from 'rxjs';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-admin-user',\r\n  templateUrl: './admin-user.component.html',\r\n  styleUrls: ['./admin-user.component.css']\r\n})\r\nexport class AdminUserComponent implements OnInit {\r\n\r\n  userList: any;\r\n  show: boolean;\r\n  totalNumberOfUsers: number;\r\n  pageSize: number = 12;\r\n  startIndex:number = 0;\r\n  endIndex: number = 12;\r\n  pageSizeOptions: number[] = [5, 10, 25, 100];\r\n  datasource: any;\r\n\r\n  pageEvent: PageEvent;\r\n\r\n  constructor(private api: APIService, private router: Router) { }\r\n\r\n\r\n  changeEvent(event: PageEvent)\r\n  {\r\n    console.log(\"Event: \", event);\r\n    this.startIndex = event.pageIndex * event.pageSize;\r\n    this.endIndex = this.startIndex + this.pageSize;\r\n    if(this.endIndex > this.totalNumberOfUsers){\r\n      this.endIndex = this.totalNumberOfUsers\r\n    }\r\n    this.userList.slice(this.startIndex, this.endIndex);\r\n    return event;\r\n  }\r\n\r\n  nameDescending()\r\n  {\r\n    return this.userList.sort( (a,b) => {\r\n      let paramA = a.name.toLowerCase();\r\n      let paramB = b.name.toLowerCase();\r\n\r\n      if(paramA > paramB ){ return -1; }\r\n      else { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  nameAscending()\r\n  {\r\n    return this.userList.sort( (a,b) => {\r\n      let paramA = a.name.toLowerCase();\r\n      let paramB = b.name.toLowerCase();\r\n\r\n      if(paramA < paramB ){ return -1; }\r\n      else { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.datasource.filterPredicate = function(data, filter: string): boolean {\r\n      return data.name.toLowerCase().includes(filter) \r\n    };\r\n    this.datasource.filter = filterValue.trim().toLowerCase();\r\n    this.totalNumberOfUsers = this.datasource.filteredData.length;\r\n  }\r\n\r\n  getUsers(){\r\n    this.api.getAllUsers().subscribe( data => {\r\n      this.totalNumberOfUsers = Object.keys(data).length;\r\n      this.userList = data;\r\n      this.show = false;\r\n      this.datasource = new MatTableDataSource(this.userList);\r\n    })\r\n  }\r\n\r\n  delete(user){\r\n    if(this.api.deleteUser(user).subscribe()){\r\n      alert(\"User deleted\");\r\n      location.reload();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if(!localStorage.getItem('token')){\r\n      this.router.navigate(['/index']);\r\n      alert(\"You are not logged in\");\r\n    }\r\n\r\n    this.getUsers();\r\n    this.show = true;\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n\r\n<mat-form-field class=\"searchArea\">\r\n    <mat-label>Search</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event.target.value)\">\r\n</mat-form-field>\r\n\r\n  <button mat-button class=\"sortBtns\">Name\r\n    <mat-icon (click)=\"nameAscending()\" class=\"arrow\">arrow_upwardward</mat-icon> |\r\n    <mat-icon (click)=\"nameDescending()\" class=\"arrow\">arrow_downward</mat-icon>\r\n  </button>\r\n\r\n<div class=\"container-fluid\" >\r\n    <h1>All Users</h1>\r\n    <div class=\"flex-container\" fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\">\r\n      <div class=\"content\" *ngFor=\"let user of this.datasource.filteredData | slice: startIndex:endIndex\">\r\n        <mat-card>\r\n            <mat-card-title><strong>{{user.name}}</strong></mat-card-title>\r\n            <mat-card-subtitle>Email: {{user.username}}</mat-card-subtitle>\r\n            <mat-card-actions class=\"puzzleActions\">\r\n                <button mat-button id=\"delete\" (click)=\"delete(user.id)\">DELETE USER</button>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<mat-paginator *ngIf=\"!show\" [length]=\"totalNumberOfUsers\" [pageSize]=\"pageSize\"\r\n                  (page)=\"pageEvent = changeEvent($event)\">\r\n</mat-paginator>\r\n\r\n<div class=\"spinner\">\r\n  <mat-spinner *ngIf=\"show\" id=\"spinner\"></mat-spinner>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SignupComponent } from './pages/signup/signup.component';\r\nimport { IndexComponent } from './pages/index/index.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { ProfileComponent } from './pages/profile/profile.component';\r\nimport { ProfilePuzzlesComponent } from './pages/profile-puzzles/profile-puzzles.component'\r\nimport { ProfileRatingsComponent } from './pages/profile-ratings/profile-ratings.component'\r\nimport { RatingsComponent } from './pages/ratings/ratings.component';\r\nimport { ResetPasswordComponent } from './pages/reset-password/reset-password.component';\r\nimport { ResetSuccessComponent } from './pages/reset-success/reset-success.component';\r\nimport { CreateComponent } from './pages/create/create.component';\r\nimport { AICreateComponent } from './pages/aicreate/aicreate.component';\r\nimport { AdminUserComponent } from './admin/admin-user/admin-user.component';\r\nimport { AdminRatingsComponent } from './admin/admin-ratings/admin-ratings.component';\r\nimport { AdminPuzzlesComponent } from './admin/admin-puzzles/admin-puzzles.component';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: 'index', component: IndexComponent},\r\n  {path: 'signup', component: SignupComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'profile', component: ProfileComponent},\r\n  {path: 'profilePuzzles', component: ProfilePuzzlesComponent},\r\n  {path: 'profileRatings', component: ProfileRatingsComponent},\r\n  {path: 'ratings', component: RatingsComponent},\r\n  {path: 'resetPassword', component: ResetPasswordComponent},\r\n  {path: 'resetSuccess', component: ResetSuccessComponent},\r\n  {path: 'create', component: CreateComponent},\r\n  {path: 'aicreate', component: AICreateComponent},\r\n  {path: 'adminUser', component: AdminUserComponent},\r\n  {path: 'adminRatings', component: AdminRatingsComponent},\r\n  {path: 'adminPuzzles', component: AdminPuzzlesComponent}, \r\n\r\n\r\n    // otherwise redirect to home\r\n  { path: '', redirectTo: '/index', pathMatch: 'full' },\r\n  { path: '**', component: IndexComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'prometheus-puzzles';\r\n  \r\n  constructor() {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n//\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport { MatToolbarModule} from '@angular/material/toolbar';\r\nimport { MatTableModule} from '@angular/material/table';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatGridListModule } from '@angular/material/grid-list'\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\n\r\n\r\n//pages\r\nimport { IndexComponent } from './pages/index/index.component';\r\nimport { SignupComponent } from './pages/signup/signup.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { ProfileComponent } from './pages/profile/profile.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { RatingsComponent } from './pages/ratings/ratings.component';\r\nimport { ResetPasswordComponent } from './pages/reset-password/reset-password.component';\r\nimport { ResetSuccessComponent } from './pages/reset-success/reset-success.component';\r\nimport { CreateComponent } from './pages/create/create.component';\r\nimport { RateDialogComponent } from './rate-dialog/rate-dialog.component';\r\nimport { ProfilePuzzlesComponent } from './pages/profile-puzzles/profile-puzzles.component';\r\nimport { ProfileRatingsComponent } from './pages/profile-ratings/profile-ratings.component';\r\nimport { AICreateComponent } from './pages/aicreate/aicreate.component';\r\nimport { AdminUserComponent } from './admin/admin-user/admin-user.component';\r\nimport { AdminRatingsComponent } from './admin/admin-ratings/admin-ratings.component';\r\nimport { AdminPuzzlesComponent } from './admin/admin-puzzles/admin-puzzles.component';\r\nimport { SolveDialogComponent } from './dialogs/solve-dialog/solve-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    IndexComponent,\r\n    SignupComponent,\r\n    LoginComponent,\r\n    ProfileComponent,\r\n    RatingsComponent,\r\n    NavbarComponent,\r\n    ResetPasswordComponent,\r\n    ResetSuccessComponent,\r\n    CreateComponent,\r\n    RateDialogComponent,\r\n    ProfilePuzzlesComponent,\r\n    ProfileRatingsComponent,\r\n    AICreateComponent,\r\n    AdminUserComponent,\r\n    AdminRatingsComponent,\r\n    AdminPuzzlesComponent,\r\n    SolveDialogComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NgxPaginationModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FlexLayoutModule,\r\n    MatButtonModule,\r\n    MatDividerModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatProgressSpinnerModule,\r\n    MatToolbarModule,\r\n    MatTableModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    MatInputModule, MatListModule, MatPaginatorModule, MatProgressBarModule,\r\n    MatCardModule, MatFormFieldModule, MatDialogModule, MatGridListModule, MatRadioModule, ReactiveFormsModule,\r\n    MDBBootstrapModule.forRoot(),\r\n  ],\r\n  entryComponents: [RateDialogComponent],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-solve-dialog',\r\n  templateUrl: './solve-dialog.component.html',\r\n  styleUrls: ['./solve-dialog.component.css']\r\n})\r\nexport class SolveDialogComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"solver\">\r\n    <h3 mat-dialog-title>Drag Puzzle Pieces onto the canvas to solve the puzzle</h3>\r\n        <div mat-dialog-content>\r\n            <!-- Please put the three stuff here -->\r\n        </div>\r\n    <div mat-dialog-actions>\r\n    <button mat-button mat-dialog-close>Close</button>\r\n</div>","import { Component, OnInit} from '@angular/core';\r\n//import { getName } from '.././pages/login/login.component';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  name:string;\r\n  admin:boolean;\r\n  token: any;\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  logout(){\r\n    localStorage.removeItem('token');\r\n    this.router.navigate(['/index']);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.name = localStorage.getItem('name');\r\n    this.token = localStorage.getItem('token');\r\n    if (this.token == \"CgOOiUKmqqPyOlhFjDZth\"){\r\n      this.admin = true; \r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n<div class=\"logo\">\r\n  <img class=\"navimg\" src=\"assets/images/logo_nav.png\" routerLink=\"/ratings\">\r\n</div>\r\n  <nav class=\"navbar navbar-expand-sm\" id=\"navCustom\">\r\n\r\n    <span class=\"left\"><button id=\"burger\" class=\"navbar-toggler hidden-sm hidden-md hidden-lg hidden-xl\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent1\"\r\n    aria-controls=\"navbarSupportedContent1\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span><i\r\n        class=\"fa fa-bars fa-2x\"></i></span></button></span>\r\n\r\n    <span class=\"collapse navbar-collapse left\" id=\"navbarSupportedContent1\">\r\n        <ul class=\"nav navbar-nav mr-auto\" routerLinkActive=\"active\">\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" routerLink=\"/ratings\">View</a>\r\n            </li>\r\n            <li class=\"nav-item dropdown\" >\r\n              <a  role=\"button\" class=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Create<div class=\"caret\"></div></a>\r\n               <div  class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                 <a class=\"dropdown-item\" routerLink=\"/create\" >Manual</a><br>\r\n                 <a class=\"dropdown-item\" routerLink=\"/aicreate\" >AI</a><br>\r\n               </div>\r\n            </li>\r\n            <li class=\"nav-item dropdown\">\r\n              <a role=\"button\" class=\"nav-link dropdown-toggle\" id=\"navbarDropdown2\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Profile<div class=\"caret\"></div></a>\r\n               <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown2\">\r\n                 <a class=\"dropdown-item\" routerLink=\"/profile\">My Details</a><br>\r\n                 <a class=\"dropdown-item\" routerLink=\"/profilePuzzles\">My Puzzles</a><br>\r\n                 <a class=\"dropdown-item\" routerLink=\"/profileRatings\">My Ratings</a>\r\n               </div>\r\n            </li>\r\n            <li *ngIf=\"admin\" class=\"nav-item dropdown\">\r\n              <a role=\"button\" class=\"nav-link dropdown-toggle\" id=\"navbarDropdown2\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Admin<div class=\"caret\"></div></a>\r\n               <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown2\">\r\n                 <a class=\"dropdown-item\" routerLink=\"/adminUser\">All Users</a><br>\r\n                 <a class=\"dropdown-item\" routerLink=\"/adminPuzzles\">All Puzzles</a><br>\r\n                 <a class=\"dropdown-item\" routerLink=\"/adminRatings\">All Ratings</a>\r\n               </div>\r\n            </li>\r\n        </ul>\r\n    </span>\r\n    <span class=\"navbar-text\">\r\n        Hello, {{name}}\r\n        <a id=\"logout\" (click)=\"logout()\">Logout</a>\r\n    </span>\r\n  </nav>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { initializeDataAI } from 'src/assets/js/aiCreation.js';\r\nimport { Router } from '@angular/router';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { Colors, Color } from 'angular-bootstrap-md';\r\n\r\n@Component({\r\n  selector: 'app-aicreate',\r\n  templateUrl: './aicreate.component.html',\r\n  styleUrls: ['./aicreate.component.css']\r\n})\r\nexport class AICreateComponent implements OnInit {\r\n\r\n  token: any;\r\n  col: Color;\r\n  color: Colors;\r\n  name: any;\r\n  description: any;\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if(!localStorage.getItem('token')){\r\n      this.router.navigate(['/index']);\r\n      alert(\"You are not logged in\");\r\n    }\r\n  \tinitializeDataAI();\r\n    this.token = localStorage.getItem('token');\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n<div>\r\n <a mat-raised-button id=\"help\" (click)=\"videoModal1.show()\">Tutorial</a>\r\n <mat-icon class=\"fish\" id=\"helpXs\" (click)=\"videoModal1.show()\">info_outline</mat-icon>\r\n</div>\r\n\r\n\r\n <div mdbModal #videoModal1=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myVideoModal1Label\"\r\n   aria-hidden=\"true\">\r\n   <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n     <div class=\"modal-content\">\r\n       <div class=\"modal-body mb-0 p-0\">\r\n         <div class=\"embed-responsive embed-responsive-16by9 z-depth-1-half\">\r\n           <iframe class=\"embed-responsive-item\" src=\"../../assets/AICreation.mp4\" allowfullscreen></iframe>\r\n         </div>\r\n       </div>\r\n       <div class=\"modal-footer justify-content-center\">\r\n         <button class=\"btns\" (click)=\"videoModal1.hide()\">Close</button>\r\n       </div>\r\n     </div>\r\n   </div>\r\n </div>\r\n\r\n <div class=\"container-fluid\">\r\n   <div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutGap=\"1\">\r\n     <mat-card class=\"puzzleOptions\">\r\n       <mat-card-header>\r\n         <mat-card-title class=\"titleLabel\">Algorithm Parameters</mat-card-title>\r\n       </mat-card-header>\r\n       <mat-card-content>\r\n         <div id=\"inputContainer\">\r\n           <label>Maximum of puzzle pieces - 20</label><br>\r\n           <mat-form-field class=\"names\" appearance=\"outline\">\r\n             <mat-label>Number of puzzle pieces</mat-label>\r\n             <input class=\"input\" type=\"number\" matInput placeholder=\"3\" name=\"numberOfPieces\" id=\"numberOfPiecesInputBox\">\r\n           </mat-form-field>\r\n           <mat-form-field class=\"names\" appearance=\"outline\">\r\n             <mat-label>Number of Group 1 pieces:</mat-label>\r\n             <input class=\"input\" type=\"number\" matInput placeholder=\"1\" name=\"numberOfPieces\" id=\"numberOfPiecesInputBox1\">\r\n           </mat-form-field>\r\n           <mat-form-field class=\"names\" appearance=\"outline\">\r\n             <mat-label>Number of Group 2 pieces:</mat-label>\r\n             <input class=\"input\" type=\"number\" matInput placeholder=\"1\" name=\"numberOfPieces\" id=\"numberOfPiecesInputBox2\">\r\n           </mat-form-field>\r\n           <mat-form-field class=\"names\" appearance=\"outline\">\r\n             <mat-label>Number of Group 2 pieces:</mat-label>\r\n             <input class=\"input\" type=\"number\" matInput placeholder=\"1\" name=\"numberOfPieces\" id=\"numberOfPiecesInputBox3\">\r\n           </mat-form-field>\r\n           <!-- <label>Number of puzzle pieces(20 max):</label><br>\r\n           <input type=\"text\" name=\"numberOfPieces\" id=\"numberOfPiecesInputBox\" value=\"3\"><br>\r\n           <label>Number of Group 1 pieces:</label><br>\r\n           <input type=\"text\" name=\"numberOfPieces\" id=\"numberOfPiecesInputBox1\" value=\"1\"><br>\r\n           <label>Number of Group 2 pieces:</label><br>\r\n           <input type=\"text\" name=\"numberOfPieces\" id=\"numberOfPiecesInputBox2\" value=\"1\"><br>\r\n           <label>Number of Group 2 pieces:</label><br>\r\n           <input type=\"text\" name=\"numberOfPieces\" id=\"numberOfPiecesInputBox3\" value=\"1\"><br> -->\r\n           <br><label>Select Puzzle Type</label><br>\r\n           <mat-radio-group class=\"radio-group\">\r\n             <mat-radio-button class=\"radio-button\" value=\"euclidean\" name=\"distanceMetric\" id=\"euclideanButtonAI\" > Euclidian </mat-radio-button>\r\n             <mat-radio-button class=\"radio-button\" value=\"manhattan\" name=\"distanceMetric\" id=\"manhattanButtonAI\" > Manhattan </mat-radio-button>\r\n           </mat-radio-group>\r\n           <button mat-raised-button class=\"btns\" id=\"nextButton\">Next</button>\r\n           <button mat-raised-button class=\"btns\" id=\"generatePuzzleButtonAI\">Generate Puzzle</button><br>\r\n         </div>\r\n       </mat-card-content>\r\n    </mat-card>\r\n\r\n    <mat-card class=\"creationCard\">\r\n      <mat-card-header>\r\n        <mat-card-title >Create a puzzle</mat-card-title>\r\n      </mat-card-header>\r\n     <mat-card-content>\r\n       <div id=\"containerAI\">\r\n       </div>\r\n       <!-- <div id='colorPalettesAI'>\r\n         <button mat-raised-button class=\"btns\" id=\"randomizeColorsButtonAI\">Randomize Colors</button>\r\n       </div> -->\r\n       <div>\r\n        <mat-progress-bar mode=\"indeterminate\" id=\"progressBar\"></mat-progress-bar>\r\n       </div>\r\n     </mat-card-content>\r\n   </mat-card>\r\n\r\n   <mat-card class=\"saveOptions\">\r\n     <mat-card-header>\r\n       <mat-card-title class=\"titleLabel\">Saving Options</mat-card-title>\r\n     </mat-card-header>\r\n     <mat-card-content class=\"matContentC\">\r\n       <label id=\"colorPalleteLabel\">Select a color-palette:</label><br>\r\n       <mat-radio-group>\r\n         <mat-radio-button class=\"radio-button colorPalettes\" paletteid=0 value=\"default\" name=\"colorPalettes\">Default</mat-radio-button>\r\n         <mat-radio-button class=\"radio-button colorPalettes\" paletteid=1 value=\"shadesOfRed\" name=\"colorPalettes\">Shades Of Red</mat-radio-button>\r\n         <mat-radio-button class=\"radio-button colorPalettes\" paletteid=2 value=\"shadesOfGreen\" name=\"colorPalettes\">Shades Of Green</mat-radio-button>\r\n         <mat-radio-button class=\"radio-button colorPalettes\" paletteid=3 value=\"shadesOfBlue\" name=\"colorPalettes\">Shades of Blue</mat-radio-button>\r\n       </mat-radio-group>\r\n       <button mat-raised-button class=\"btns\" id=\"randomizeColorsButtonAI\">Randomize Colors</button>\r\n       <br><br>\r\n\r\n       <mat-form-field class=\"names\" appearance=\"outline\">\r\n         <mat-label>Puzzle Name</mat-label>\r\n         <input class=\"input\" matInput placeholder=\"New Puzzle\" [(ngModel)]=\"name\" name=\"puzzleName\" id=\"puzzleNameInputBoxAI\">\r\n       </mat-form-field>\r\n\r\n       <mat-form-field class=\"names\" appearance=\"outline\">\r\n         <mat-label>Short description</mat-label>\r\n         <input class=\"input\" matInput placeholder=\"For my cat\" [(ngModel)]=\"description\" name=\"puzzleDescription\" id=\"puzzleDescriptionInputBoxAI\">\r\n       </mat-form-field>\r\n\r\n       <!-- <label id=\"\">Name: </label><br><input [(ngModel)]=\"name\" type=\"text\" name=\"puzzleName\" id=\"puzzleNameInputBoxAI\"><br> -->\r\n       <!-- <label id=\"\">Short Description: </label><br><input [(ngModel)]=\"description\" type=\"text\" name=\"puzzleDescription\" id=\"puzzleDescriptionInputBoxAI\"><br> -->\r\n       <label hidden=\"true\" id=\"tokenLabel\">{{token}}</label><br>\r\n       <button mat-raised-button class=\"btns\" [disabled]=\"(!name) || (!description)\" id=\"saveButtonAI\" routerLink=\"/profilePuzzles\">Save</button>\r\n     </mat-card-content>\r\n   </mat-card>\r\n   </div>\r\n </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { initializeData } from 'src/assets/js/manualCreation.js';\r\nimport Konva from 'konva';\r\nimport { Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.css']\r\n})\r\nexport class CreateComponent implements OnInit {\r\n\r\n  token: any;\r\n\r\n  name: any;\r\n  description: any;\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if(!localStorage.getItem('token')){\r\n      this.router.navigate(['/index']);\r\n      alert(\"You are not logged in\");\r\n    }\r\n\r\n    initializeData();\r\n    this.token = localStorage.getItem('token');\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n<div>\r\n <a mat-raised-button id=\"help\" (click)=\"videoModal1.show()\">Tutorial</a>\r\n <mat-icon id=\"helpXs\" (click)=\"videoModal1.show()\">info_outline</mat-icon>\r\n</div>\r\n\r\n<div mdbModal #videoModal1=\"mdbModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myVideoModal1Label\"\r\n  aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-body mb-0 p-0\">\r\n        <div class=\"embed-responsive embed-responsive-16by9 z-depth-1-half\">\r\n          <iframe class=\"embed-responsive-item\" src=\"../../assets/ManualCreation.mp4\" allowfullscreen></iframe>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer justify-content-center\">\r\n        <button class=\"btns\" (click)=\"videoModal1.hide()\">Close</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"container-fluid\">\r\n  <div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutGap=\"1\">\r\n    <mat-card class=\"puzzleType\">\r\n      <mat-card-header>\r\n        <mat-card-title class=\"titleLabel\">Select Puzzle Type</mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <mat-radio-group class=\"radio-group\">\r\n          <mat-radio-button class=\"radio-button\" value=\"euclidean\" name=\"distanceMetric\" id=\"euclideanButton\" > Euclidian </mat-radio-button>\r\n          <mat-radio-button class=\"radio-button\" value=\"manhattan\" name=\"distanceMetric\" id=\"manhattanButton\" > Manhattan </mat-radio-button>\r\n        </mat-radio-group>\r\n      </mat-card-content>\r\n   </mat-card>\r\n\r\n   <mat-card class=\"creationCard\">\r\n    <mat-card-header>\r\n      <mat-card-title class=\"titleLabel\">Create puzzle by selecting points on the canvas</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <button mat-raised-button class=\"btns\" id=\"deletePointButton\">\r\n        <mat-icon id=\"deletePointButtonIcon\">delete</mat-icon><mat-icon id=\"editPointButtonIcon\">edit</mat-icon> Delete Mode\r\n      </button>\r\n      <div id=\"container\">\r\n      </div>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <!-- <div id='colorPalettes'>\r\n      </div> -->\r\n      <!-- <button mat-raised-button class=\"btns\" id=\"deletePointButton\">Delete Mode</button> -->\r\n      <button mat-raised-button class=\"btns\" id=\"generatePuzzleButton\">Generate Puzzle</button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"saveOptions\">\r\n    <mat-card-header>\r\n      <mat-card-title id=\"saveHeading\">Saving Options</mat-card-title>\r\n    </mat-card-header>\r\n\r\n    <mat-card-content class=\"matContentC\">\r\n      <label class=\"titleLabel\" id=\"colorPalleteLabel\">Select a color-palette:</label><br>\r\n      <mat-radio-group class=\"colRadioBtns\">\r\n        <mat-radio-button class=\"radio-button colorPalettes\" paletteid=0 value=\"default\" name=\"colorPalettes\">Default</mat-radio-button>\r\n        <mat-radio-button class=\"radio-button colorPalettes\" paletteid=1 value=\"shadesOfRed\" name=\"colorPalettes\">Shades Of Red</mat-radio-button>\r\n        <mat-radio-button class=\"radio-button colorPalettes\" paletteid=2 value=\"shadesOfGreen\" name=\"colorPalettes\">Shades Of Green</mat-radio-button>\r\n        <mat-radio-button class=\"radio-button colorPalettes\" paletteid=3 value=\"shadesOfBlue\" name=\"colorPalettes\">Shades of Blue</mat-radio-button>\r\n      </mat-radio-group>\r\n      <button mat-raised-button class=\"btns\" id=\"randomizeColorsButton\">Randomize Colors</button>\r\n      <br><br>\r\n\r\n      <mat-form-field class=\"names\" appearance=\"outline\">\r\n        <mat-label>Puzzle Name</mat-label>\r\n        <input class=\"input\" matInput placeholder=\"New Puzzle\" [(ngModel)]=\"name\" name=\"puzzleName\" id=\"puzzleNameInputBox\">\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"names\" appearance=\"outline\">\r\n        <mat-label>Short description</mat-label>\r\n        <input class=\"input\" matInput placeholder=\"For my cat\" [(ngModel)]=\"description\" name=\"puzzleDescription\" id=\"puzzleDescriptionInputBox\">\r\n      </mat-form-field>\r\n\r\n      <!-- <label id=\"\">Name: </label><br><input type=\"text\" [(ngModel)]=\"name\" name=\"puzzleName\" id=\"puzzleNameInputBox\"><br> -->\r\n      <!-- <label id=\"\">Short Description: </label><br><input type=\"text\" [(ngModel)]=\"description\" name=\"puzzleDescription\" id=\"puzzleDescriptionInputBox\"><br> -->\r\n      <label hidden=\"true\" id=\"tokenLabel\">{{token}}</label><br>\r\n      <button mat-raised-button class=\"btns\" [disabled]=\"(!name) || (!description)\" id=\"saveButton\" routerLink=\"/profilePuzzles\">Save</button>\r\n    </mat-card-content>\r\n  </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.css']\r\n})\r\nexport class IndexComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<header id=\"indexNav\">\r\n    <nav class=\"links\">\r\n      <ul>\r\n        <li id=\"btnLink\"><a href=\"/signup\" mat-button class=\"indexBtn\">Sign Up</a></li>\r\n        <li id=\"btnLink\"><a href=\"/login\" mat-button class=\"indexBtn\">Login</a></li>\r\n      </ul>\r\n    </nav>\r\n</header>\r\n<div class=\"container\" id=\"second\">\r\n        <!-- <h1 class=\"main-title\"><strong>CREATE | SOLVE | PRINT | RATE</strong></h1>\r\n        <h2 class=\"subtitle\"><i>Sign up or login to start creating puzzles that can be solved, printed and rated.</i></h2> -->\r\n        <picture>\r\n          <source media=\"(max-width: 768px)\" srcset=\"assets/images/indexSml.jpg\">\r\n          <img class=\"splashImage\" src=\"assets/images/newSplashv1.jpeg\">\r\n        </picture>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <!--\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"indexNavBtns\">\r\n        <mat-card fxFlex=\"90\" fxLayoutAlign=\"space-evenly center\">\r\n            <a routerLink=\"/login\" mat-raised-button class=\"btn\">Login\r\n            <a routerLink=\"/signup\" mat-raised-button class=\"btn\">Sign Up\r\n      </mat-card>\r\n    </div> -->\r\n\r\n\r\n    <!--\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"indexNavBtns\">\r\n        <mat-card fxFlex=\"90\" fxLayoutAlign=\"space-evenly center\">\r\n            <a routerLink=\"/login\" mat-raised-button class=\"btn\">Login\r\n            <a routerLink=\"/signup\" mat-raised-button class=\"btn\">Sign Up\r\n      </mat-card>\r\n    </div>\r\n     -->\r\n\r\n    <!-- <div class=\"content\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"descText\">\r\n            <mat-card fxFlex=\"90\">\r\n                    <p>Puzzles have been a hobby of many people over the centuries, coming in various\r\n                    forms which have various ways of solving. Puzzles have played a role in people’s\r\n                    problem solving skills. Puzzle generators have allowed for more puzzles to be\r\n                    created, using various techniques to create interesting and challenging puzzles.\r\n                    The system requested by the client involves the creation of 3-Dimensional puzzles (manually and from the use of AI), testing of puzzles, sharing and rating of\r\n                    puzzles by other users, as well as the ability of downloading 3D printable files.\r\n                    Team Prometheus, has come up with a way to develop the system according to\r\n                    the client’s specifications.</p>\r\n          </mat-card>\r\n        </div> -->\r\n\r\n\r\n\r\n        <!-- <div class=\"container\">\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <div class=\"flex-container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\" >\r\n            <div class=\"overlay\"></div>\r\n            <mat-card  class=\"child-1\">\r\n                <mat-card-header>\r\n                    <mat-card-title>Puzzle One</mat-card-title>\r\n                    <mat-card-subtitle class=\"one\">Created by {{puzzle.creator}}</mat-card-subtitle>\r\n                    <mat-card-subtitle class=\"one\">Rating: </mat-card-subtitle>\r\n                    <mat-card-subtitle class=\"one\">Date: </mat-card-subtitle>\r\n                    <mat-card-subtitle class=\"one\">Created by X</mat-card-subtitle>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                    <img class=\"indexImg\" src=\"assets/images/imgC.jpg\">\r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                    <button mat-button class=\"btns\">SOLVE</button>\r\n                    <button mat-button class=\"btns\">RATE</button>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n\r\n            <mat-card  class=\"child-2\">\r\n                <mat-card-header>\r\n                    <mat-card-title>Puzzle One</mat-card-title>\r\n                    <mat-card-subtitle class=\"one\">Created by X</mat-card-subtitle>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                    <img class=\"indexImg\"  src=\"assets/images/imgB.jpg\">\r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                    <button mat-button class=\"btns\">SOLVE</button>\r\n                    <button mat-button class=\"btns\">RATE</button>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n            <mat-card class=\"child-3\">\r\n                <mat-card-header>\r\n                    <mat-card-title>Puzzle One</mat-card-title>\r\n                    <mat-card-subtitle class=\"one\">Created by X</mat-card-subtitle>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                    <img class=\"indexImg\"  src=\"assets/images/imgC.jpg\">\r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                    <button mat-button class=\"btns\">SOLVE</button>\r\n                    <button mat-button class=\"btns\">RATE</button>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n        </div>\r\n\r\n\r\n                <a routerLink=\"/login\" mat-raised-button class=\"btn\">Login\r\n                <a routerLink=\"/signup\" mat-raised-button class=\"btn\">Sign Up\r\n\r\n\r\n    </div> -->\r\n\r\n    <!--\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"indexNavBtns\">\r\n        <mat-card fxFlex=\"90\" fxLayoutAlign=\"space-evenly center\">\r\n            <a routerLink=\"/login\" mat-raised-button class=\"btn\">Login\r\n            <a routerLink=\"/signup\" mat-raised-button class=\"btn\">Sign Up\r\n      </mat-card>\r\n    </div> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { User } from 'src/app/models/User';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  verifyUser: any;\r\n  formError: string;\r\n  fieldTextType: boolean;\r\n\r\n  constructor(private formBuilder: FormBuilder, private api: APIService, private router: Router) {}\r\n  //method for logging in user and getting the token associated with the said user\r\n\r\n  toggleFieldTextType() {\r\n    this.fieldTextType = !this.fieldTextType;\r\n  }\r\n\r\n\r\n  loginUser(currentUser: User){\r\n    this.formError = '';\r\n    if(currentUser !== null){\r\n      this.verifyUser = {\r\n        \"username\":currentUser.email,\r\n        \"password\":currentUser.password\r\n      }\r\n\r\n      this.api.loginUser(this.verifyUser).subscribe(\r\n        data => { console.log(data);\r\n          localStorage.removeItem('name');\r\n          localStorage.setItem('name', data['name']);\r\n          localStorage.removeItem('token');\r\n          localStorage.setItem('token', data['token']);\r\n\r\n        this.formError = \"\";\r\n        this.router.navigate(['/ratings']);\r\n\r\n        setTimeout(()=>{\r\n          localStorage.removeItem('token');\r\n          this.router.navigate(['login']);\r\n          alert(\"You have been logged out after 1 hour\");\r\n        },3600000);\r\n      },\r\n        error => {//if status code other than in the 200 range returned, show error\r\n          console.log('Error from API: ', error.error);\r\n          if(error.status >= 401){\r\n            this.formError = error.error;\r\n          }\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n  //error messages used during login/register validation\r\n  error_messages = {\r\n    'email': [\r\n      { type: 'required', message: 'Email is required.' },\r\n      { type: 'email', message: 'Invalid email format.' }\r\n    ],\r\n    'password': [\r\n      { type: 'required', message: 'Password is required.' },\r\n      { type: 'minlength', message: 'Password must have at least 6 characters.' }\r\n    ]\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]]\r\n\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"flex-container\" fxLayout=\"row\" fxLayoutAlign=\"center none\">\r\n        <mat-card class=\"regForm\"><img src=\"assets/images/label.png\">\r\n            <mat-card-header>\r\n                <h3>Login</h3>\r\n            </mat-card-header>\r\n            <mat-card-content class=\"regFormContent\">\r\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser(loginForm.value)\">\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your email</mat-label>\r\n                        <input class=\"input\" matInput placeholder=\"john@doe.com\" formControlName=\"email\" required>\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.email\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"loginForm.get('email').hasError(error.type) && (loginForm.get('email').dirty || loginForm.get('email').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your password</mat-label><br>\r\n                        <input matInput required\r\n                            [type]=\"fieldTextType ? 'text' : 'password'\" class=\"input\" formControlName=\"password\"/>\r\n                    </mat-form-field>\r\n                    <span>\r\n                        <i class=\"fa\" [ngClass]=\"{ 'fa-eye-slash': !fieldTextType,'fa-eye': fieldTextType }\" (click)=\"toggleFieldTextType()\">\r\n                        </i>\r\n                    </span>\r\n\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.password\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"loginForm.get('password').hasError(error.type) && (loginForm.get('password').dirty || loginForm.get('password').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                            <span id=\"passError\">{{formError}}</span>\r\n                        </div>\r\n                    </div>\r\n                    <button mat-raised-button type=\"submit\" [disabled]=\"!loginForm.valid\" class=\"btns\" id=\"one\">Login</button>\r\n                    <a routerLink=\"/index\" mat-raised-button class=\"btns\" id=\"two\">Cancel</a>\r\n                </form>\r\n            </mat-card-content>\r\n            <mat-card-actions>\r\n                <a routerLink=\"/resetPassword\" class=\"link\">Forgot Password</a>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n *\r\n","<app-navbar></app-navbar>\r\n\r\n<button mat-button class=\"sortBtns\">Name\r\n  <mat-icon (click)=\"nameAscending()\" class=\"arrow\">arrow_upwardward</mat-icon> |\r\n  <mat-icon (click)=\"nameDescending()\" class=\"arrow\">arrow_downward</mat-icon>\r\n</button>\r\n\r\n<div class=\"container\">\r\n<div class=\"container-fluid\" *ngIf=\"currentUser\" >\r\n    <h1 class=\"main-title\" >My Puzzles</h1>\r\n    <div class=\"flex-container\" fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\">\r\n        <mat-card class=\"content\" *ngFor=\"let puzzle of (userPuzzleList | slice: startIndex:endIndex)\">\r\n          <div class=\"content-overlay\"></div>\r\n          <img class=\"content-image\" src=\"{{puzzle.image}}\">\r\n            <mat-card-title><strong>{{puzzle.name}}</strong></mat-card-title>\r\n            <!-- <mat-card-subtitle>Description: {{puzzle.description}}</mat-card-subtitle> -->\r\n            <mat-card-actions class=\"puzzleActions\">\r\n              <button *ngIf=\"!puzzle.shared\" mat-button class=\"btns\" (click)=\"share(puzzle.id)\">SHARE</button>\r\n              <button *ngIf=\"puzzle.shared\" mat-button class=\"btns\" (click)=\"stopShare(puzzle.id)\">STOP SHARING</button>\r\n              <button mat-button class=\"btns\" (click)=\"deletePuzzle(puzzle.id)\">DELETE</button>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n<mat-paginator class=\"paginator\" *ngIf=\"!show\" [length]=\"totalNumberOfPuzzles\" [pageSize]=\"pageSize\"\r\n                  (page)=\"pageEvent = changeEvent($event)\">\r\n</mat-paginator>\r\n\r\n</div>\r\n\r\n  <div *ngIf=\"text\">\r\n    <h2 id=\"NoneText\" >You have not created any puzzles at the moment</h2>\r\n  </div>\r\n<div class=\"spinner\">\r\n  <mat-spinner *ngIf=\"show\" id=\"spinner\"></mat-spinner>\r\n</div> \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { Puzzle } from 'src/app/models/Puzzle';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { PageEvent } from '@angular/material/paginator';\r\n\r\n@Component({\r\n  selector: 'app-profile-puzzles',\r\n  templateUrl: './profile-puzzles.component.html',\r\n  styleUrls: ['./profile-puzzles.component.css']\r\n})\r\nexport class ProfilePuzzlesComponent implements OnInit {\r\n\r\n  currentUser: any;\r\n  //user  puzzle variables\r\n  //puzzleList: Observable <Puzzle[]> ;\r\n  userPuzzleList: any;\r\n  puzzle: any;\r\n  show: boolean;\r\n  text: boolean;\r\n  imageList: any;\r\n  temp: boolean = false;\r\n  tee: any;\r\n\r\n  totalNumberOfPuzzles: number;\r\n  ratingsLSize: number;\r\n\r\n  //pagination\r\n  pageSize: number = 6;\r\n  startIndex:number = 0;\r\n  endIndex: number = 6;\r\n  // pageSizeOptions: number[] = [5, 10, 25, 100];\r\n\r\n  // MatPaginator Output\r\n  pageEvent: PageEvent;\r\n\r\n  constructor(private api: APIService, private router: Router) { }\r\n\r\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\r\n    // this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\r\n  }\r\n\r\n  changeEvent(event: PageEvent)\r\n  {\r\n    console.log(\"Event: \", event);\r\n    this.startIndex = event.pageIndex * event.pageSize;\r\n    this.endIndex = this.startIndex + this.pageSize;\r\n    if(this.endIndex > this.totalNumberOfPuzzles){\r\n      this.endIndex = this.totalNumberOfPuzzles\r\n    }\r\n    this.userPuzzleList.slice(this.startIndex, this.endIndex);\r\n    return event;\r\n  }\r\n\r\n  nameDescending()\r\n  {\r\n    return this.userPuzzleList.sort( (a,b) => {\r\n      console.log(\"values: \", this.userPuzzleList);\r\n      //console.log(\"args: \", args);\r\n      let paramA = a.name.toLowerCase();\r\n      let paramB = b.name.toLowerCase();\r\n\r\n      if(paramA > paramB ){ return -1; }\r\n      else { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  nameAscending()\r\n  {\r\n    return this.userPuzzleList.sort( (a,b) => {\r\n      console.log(\"values: \", this.userPuzzleList);\r\n      //console.log(\"args: \", args);\r\n      let paramA = a.name.toLowerCase();\r\n      let paramB = b.name.toLowerCase();\r\n\r\n      if(paramA < paramB ){ return -1; }\r\n      else { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n\r\n\r\n  getUserPuzzles(){\r\n    this.api.getPuzzlesByUser(this.currentUser).subscribe( data => {\r\n      this.totalNumberOfPuzzles = Object.keys(data).length;\r\n      this.userPuzzleList = data;\r\n      if (data[0]==null)\r\n      {\r\n        this.text = true;\r\n      }\r\n      this.show = false;\r\n    });\r\n  }\r\n\r\n  share(data: any){\r\n    this.puzzle = {\r\n      \"puzzleID\": data\r\n    }\r\n    if(this.api.sharePuzzle(this.puzzle).subscribe()){\r\n        alert(\"Puzzle shared\");\r\n    }\r\n    location.reload();\r\n  }\r\n\r\n  deletePuzzle(puzzleID: any){\r\n    // this.puzzle = {\r\n    //   \"puzzleID\": puzzleID\r\n    // }\r\n    if(this.api.deletePuzzle(puzzleID).subscribe()){\r\n        alert(\"Puzzle deleted\");\r\n    }\r\n    location.reload();\r\n  }\r\n\r\n  stopShare(data: any){\r\n    this.puzzle = {\r\n      \"puzzleID\": data\r\n    }\r\n    if(this.api.stopSharingPuzzle(this.puzzle).subscribe()){\r\n        alert(\"Stop sharing puzzle\");\r\n    }\r\n    location.reload();\r\n  }\r\n\r\n  async delay(ms: number) {\r\n    await new Promise(resolve => setTimeout(()=>resolve(), ms))\r\n    .then( () => { console.log(\"fired\"); });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if(!localStorage.getItem('token')){\r\n      this.router.navigate(['/index']);\r\n      alert(\"You are not logged in\");\r\n    }\r\n\r\n    this.currentUser = {\r\n      \"token\": localStorage.getItem('token')\r\n    }\r\n    this.show = true;\r\n    this.text = false;\r\n\r\n    this.delay(2500).then( () =>{\r\n      this.getUserPuzzles();\r\n    });\r\n\r\n    //this.getUserPuzzles();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Puzzle } from 'src/app/models/Puzzle';\r\nimport { Observable } from 'rxjs';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { RateDialogComponent } from '../../rate-dialog/rate-dialog.component';\r\nimport { PageEvent } from '@angular/material/paginator';\r\n\r\n@Component({\r\n  selector: 'app-profile-ratings',\r\n  templateUrl: './profile-ratings.component.html',\r\n  styleUrls: ['./profile-ratings.component.css']\r\n})\r\nexport class ProfileRatingsComponent implements OnInit {\r\n\r\n  currentUser: any;\r\n  //user puzzle ratings variables\r\n  //ratingList: Observable <any[]> ;\r\n  userRatingsList: any;\r\n  text: boolean;\r\n  ratePID: number;\r\n  ratingEntry: any;\r\n  rateDialogRef: MatDialogRef<RateDialogComponent>;\r\n  show: boolean;\r\n  deleteVal: any;\r\n\r\n  totalNumberOfPuzzles: number;\r\n  ratingsLSize: number;\r\n\r\n  //pagination\r\n  pageSize: number = 6;\r\n  startIndex:number = 0;\r\n  endIndex: number = 6;\r\n  pageSizeOptions: number[] = [5, 10, 25, 100];\r\n\r\n  // MatPaginator Output\r\n  pageEvent: PageEvent;\r\n\r\n  constructor(private api: APIService, private router: Router, private dialog: MatDialog) { }\r\n\r\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\r\n    this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\r\n  }\r\n\r\n  changeEvent(event: PageEvent)\r\n  {\r\n    console.log(\"Event: \", event);\r\n    this.startIndex = event.pageIndex * event.pageSize;\r\n    this.endIndex = this.startIndex + this.pageSize;\r\n    if(this.endIndex > this.totalNumberOfPuzzles){\r\n      this.endIndex = this.totalNumberOfPuzzles\r\n    }\r\n    this.userRatingsList.slice(this.startIndex, this.endIndex);\r\n    return event;\r\n  }\r\n\r\n  nameDescending()\r\n  {\r\n    return this.userRatingsList.sort( (a,b) => {\r\n      let paramA = a.puzzleName.toLowerCase();\r\n      let paramB = b.puzzleName.toLowerCase();\r\n\r\n      if(paramA > paramB ){ return -1; }\r\n      else { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  nameAscending()\r\n  {\r\n    return this.userRatingsList.sort( (a,b) => {\r\n      let paramA = a.puzzleName.toLowerCase();\r\n      let paramB = b.puzzleName.toLowerCase();\r\n\r\n      if(paramA < paramB ){ return -1; }\r\n      else { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  ratingDescending()\r\n  {\r\n    return this.userRatingsList.sort( (a,b) => {\r\n      let paramA = a.rating;//.toLowerCase();\r\n      let paramB = b.rating;//.toLowerCase();\r\n\r\n      if(paramA > paramB ){ return -1; }\r\n      else { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  ratingAscending()\r\n  {\r\n    return this.userRatingsList.sort( (a,b) => {\r\n      let paramA = a.rating;//.toLowerCase();\r\n      let paramB = b.rating;//.toLowerCase();\r\n\r\n      if(paramA < paramB ){ return -1; }\r\n      else { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  getUserPuzzleRatings(){\r\n    this.api.getPuzzleRatingsByUser(this.currentUser).subscribe( data => {\r\n      this.totalNumberOfPuzzles = Object.keys(data).length;\r\n      this.userRatingsList = data;\r\n      this.show = false;\r\n      this.text = false;\r\n      if (this.totalNumberOfPuzzles == 0){\r\n        this.text = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  checkData(data: any){\r\n    this.ratePID = data;\r\n  }\r\n\r\n  openRateDialog(){\r\n    this.rateDialogRef = this.dialog.open(RateDialogComponent);\r\n\r\n    this.rateDialogRef.afterClosed().subscribe( result => {\r\n      if (result != \"\"){\r\n\r\n        this.ratingEntry = {\r\n        //\"id\":this.rateUID,\r\n          \"puzzleID\":this.ratePID,\r\n          \"rating\":result,\r\n          \"token\": localStorage.getItem('token')\r\n        }\r\n\r\n        if(this.api.createNewPuzzleRating(this.ratingEntry).subscribe())\r\n        {\r\n          alert(\"Rating added\");\r\n        }\r\n\r\n        location.reload();\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  openAndCheck(rateP: any){\r\n    this.checkData(rateP);\r\n    this.openRateDialog();\r\n  }\r\n\r\n  delete(ratePID: any){\r\n    this.deleteVal = {\r\n      \"puzzleID\" : ratePID,\r\n      \"token\" : localStorage.getItem('token')\r\n    }\r\n\r\n  this.api.findRatingID(this.deleteVal).subscribe( (result) => {\r\n    if(this.api.deleteRating(result[\"id\"]).subscribe()){\r\n        alert(\"Rating deleted\");\r\n        location.reload();\r\n    }\r\n  });\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if(!localStorage.getItem('token')){\r\n      this.router.navigate(['/index']);\r\n      alert(\"You are not logged in\");\r\n    }\r\n\r\n    this.currentUser = {\r\n      \"token\": localStorage.getItem('token')\r\n    }\r\n\r\n    this.show = true;\r\n    this.text = false;\r\n\r\n    this.getUserPuzzleRatings();\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n\r\n<button mat-button class=\"sortBtns\">Name\r\n    <mat-icon (click)=\"nameAscending()\" class=\"arrow\">arrow_upwardward</mat-icon> |\r\n    <mat-icon (click)=\"nameDescending()\" class=\"arrow\">arrow_downward</mat-icon>\r\n  </button>\r\n\r\n  <button mat-button class=\"sortBtns\">Rating\r\n    <mat-icon (click)=\"ratingAscending()\" class=\"arrow\">arrow_upwardward</mat-icon> |\r\n    <mat-icon (click)=\"ratingDescending()\" class=\"arrow\">arrow_downward</mat-icon>\r\n  </button>\r\n\r\n<div class=\"container\">\r\n<div class=\"container-fluid\" *ngIf=\"currentUser\" >\r\n    <h1 class=\"main-title\" >My Ratings</h1>\r\n    <div class=\"flex-container\" fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\">\r\n        <mat-card class=\"content\" *ngFor=\"let rating of userRatingsList | slice: startIndex:endIndex\">\r\n          <div class=\"content-overlay\"></div>\r\n          <img class=\"content-image\" src=\"{{rating.image}}\">\r\n            <mat-card-title><strong>{{rating.puzzleName}}</strong></mat-card-title>\r\n            <mat-card-subtitle>Rating: {{rating.rating}}/5</mat-card-subtitle>\r\n            <mat-card-actions class=\"puzzleActions\">\r\n                <button mat-button class=\"btns\">SOLVE</button>\r\n                <button mat-button class=\"btns\" (click)=\"openAndCheck(rating.puzzleID)\">UPDATE RATING</button>\r\n            </mat-card-actions>\r\n            <br>\r\n            <mat-card-actions class=\"puzzleActions\">\r\n                <button mat-button id=\"delete\" (click)=\"delete(rating.puzzleID)\">DELETE RATING</button>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n<mat-paginator *ngIf=\"!show\" [length]=\"totalNumberOfPuzzles\" [pageSize]=\"pageSize\"\r\n                  (page)=\"pageEvent = changeEvent($event)\">\r\n</mat-paginator>\r\n\r\n</div>\r\n\r\n<div id=\"NoneText\" *ngIf=\"text\">\r\n    <h2>You have not made any ratings at the moment</h2>\r\n</div>\r\n<div class=\"spinner\">\r\n<mat-spinner *ngIf=\"show\" id=\"spinner\"></mat-spinner>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  nameTextboxValue: string;\r\n  usernameTextboxValue: string;\r\n  currentUserObject:any;\r\n  token: any;\r\n  currentUser: any;\r\n  updateNameForm: FormGroup;\r\n  updateUsernameForm: FormGroup;\r\n\r\n  constructor(private api: APIService, private formBuilder: FormBuilder, private router: Router) { }\r\n\r\n  updateName(){\r\n    this.currentUser = null;\r\n      if(this.nameTextboxValue != undefined){\r\n      this.currentUser = {\r\n        \"token\": localStorage.getItem('token'),\r\n        \"name\": this.nameTextboxValue\r\n      }\r\n      localStorage.removeItem('name');\r\n      localStorage.setItem('name', this.currentUser['name']);\r\n      this.api.updateName(this.currentUser).subscribe( data => {\r\n        this.currentUserObject['name'] = data['name'];\r\n      });\r\n      alert(\"Name updated\");\r\n    }\r\n    else{ console.log(\"No value provided\");}\r\n    location.reload();\r\n  }\r\n\r\n  updateUsername(){\r\n    this.currentUser = null;\r\n    if(this.usernameTextboxValue != undefined){\r\n    this.currentUser = {\r\n      \"token\": localStorage.getItem('token'),\r\n      \"username\": this.usernameTextboxValue\r\n    }\r\n    this.api.updateUsername(this.currentUser).subscribe( data => {\r\n      this.currentUserObject['username'] = data['username'];\r\n    })\r\n  }\r\n  else{console.log(\"No value provided\")}\r\n  }\r\n\r\n  error_messages = {\r\n    'username': [\r\n      { type: 'required', message: 'Email is required.' },\r\n      { type: 'email', message: 'Invalid email format.' }\r\n    ],\r\n    'name': [\r\n      { type: 'required', message: 'Full name is required.' },\r\n      { type: 'pattern', message: 'Name can only consist of letters' }\r\n    ]\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if(!localStorage.getItem('token')){\r\n      this.router.navigate(['/index']);\r\n      alert(\"You are not logged in\");\r\n    }\r\n\r\n    this.currentUser = {\r\n      \"token\": localStorage.getItem('token')\r\n    }\r\n\r\n    this.api.getUser(this.currentUser).subscribe( data => {\r\n      this.currentUserObject = data;\r\n\r\n      this.updateNameForm = this.formBuilder.group({\r\n        name: [data['name'], [Validators.required, Validators.pattern('[a-zA-Z ]*')]]\r\n      });\r\n\r\n      this.updateUsernameForm = this.formBuilder.group({\r\n        username: [data['username'], [Validators.required, Validators.email]]\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n<!--app-navbar-profile></app-navbar-profile-->\r\n\r\n\r\n<div class=\"container-fluid\" >\r\n    <div fxLayout=\"row\" fxLayout.xs=\"col wrap\">\r\n    <mat-card class=\"profileText\">\r\n        <mat-card-header>\r\n            <h1>Edit Details</h1>\r\n        </mat-card-header>\r\n        <mat-card-content class=\"move\">\r\n        <div *ngIf=\"currentUserObject\">\r\n            <form [formGroup]=\"updateNameForm\" (ngSubmit)=\"updateName()\">\r\n                <mat-form-field appearance=\"standard\">\r\n                    <label for=\"name\">Your Name: </label>\r\n                    <input matInput formControlName=\"name\"  value=\"{{currentUserObject.name}}\" (input)=\"nameTextboxValue=$event.target.value\">\r\n                </mat-form-field>\r\n                <div>\r\n                    <ng-container *ngFor=\"let error of error_messages.name\">\r\n                        <mat-error class=\"error-message\" *ngIf=\"updateNameForm.get('name').hasError(error.type) && (updateNameForm.get('name').dirty || updateNameForm.get('name').touched)\">\r\n                            {{ error.message }}\r\n                        </mat-error>\r\n                    </ng-container>\r\n                </div>\r\n                <button mat-raised-button type=\"submit\" [disabled]=\"!updateNameForm.valid\" class=\"btns\" >Save</button>\r\n            </form>\r\n\r\n            <form [formGroup]=\"updateUsernameForm\" (ngSubmit)=\"updateUsername()\">\r\n                <mat-form-field appearance=\"standard\">\r\n                    <label for=\"username\">Your Email: </label>\r\n                    <input matInput formControlName=\"username\"  value=\"{{currentUserObject.username}}\" (input)=\"usernameTextboxValue=$event.target.value\">\r\n                </mat-form-field>\r\n                <div>\r\n                    <ng-container *ngFor=\"let error of error_messages.username\">\r\n                        <mat-error class=\"error-message\" *ngIf=\"updateUsernameForm.get('username').hasError(error.type) && (updateUsernameForm.get('username').dirty || updateUsernameForm.get('username').touched)\">\r\n                            {{ error.message }}\r\n                        </mat-error>\r\n                    </ng-container>\r\n                </div>\r\n                <button mat-raised-button type=\"submit\" [disabled]=\"!updateUsernameForm.valid\" class=\"btns\">Save</button>\r\n            </form>\r\n        </div>\r\n        </mat-card-content>\r\n    </mat-card>\r\n\r\n  </div>\r\n</div>\r\n","export class RatingsArr{\r\n  id: number;\r\n  rating: number;\r\n  puzzleID: number;\r\n}\r\n","export class PuzzleArr{\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  creator: string;\r\n  rating: number;\r\n  created: any;\r\n  showRating: boolean;\r\n  image: any;\r\n  shared: boolean = false; \r\n}\r\n","import { Component, OnInit, ChangeDetectorRef, ViewEncapsulation } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { User } from 'src/app/models/User';\r\nimport { Router } from '@angular/router';\r\nimport { PuzzleArr } from './puzzleArr';\r\nimport { RatingsArr } from './RatingsArr';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { RateDialogComponent } from '../../rate-dialog/rate-dialog.component';\r\nimport { PuzzleRating } from 'src/app/models/PuzzleRating';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { SolveDialogComponent } from 'src/app/dialogs/solve-dialog/solve-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-ratings',\r\n  templateUrl: './ratings.component.html',\r\n  styleUrls: ['./ratings.component.css']\r\n})\r\nexport class RatingsComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = [\"id\",\"name\",\"description\",\"creator\",\"rating\",\"created\",\"showRating\",\"image\"];\r\n  rateDialogRef: MatDialogRef<RateDialogComponent>;\r\n  puzzles: Array<PuzzleArr> = [];\r\n  name: string;\r\n  ratings: Array<RatingsArr> = [];\r\n  ratePID: number;\r\n  rateUID: string;\r\n  ratingEntry: any;\r\n  formError: string;\r\n  show: boolean;\r\n  dataAvailable: boolean;\r\n  //searchbar\r\n  searchTextboxValue: string;\r\n  token: any;\r\n  currentUser: any;\r\n  datasource: any;\r\n\r\n  totalNumberOfPuzzles: number;\r\n  ratingsLSize: number;\r\n\r\n  //pagination\r\n  pageSize: number = 6;\r\n  startIndex:number = 0;\r\n  endIndex: number = 6;\r\n  pageSizeOptions: number[] = [5, 10, 25, 100];\r\n\r\n  // MatPaginator Output\r\n  pageEvent: PageEvent;\r\n\r\n  //solve dialog variable\r\n  solveDialog: MatDialogRef<SolveDialogComponent>\r\n\r\n  constructor(private api: APIService, private cdr: ChangeDetectorRef, private dialog: MatDialog, private router: Router) {\r\n  }\r\n\r\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\r\n    this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\r\n  }\r\n\r\n  changeEvent(event: PageEvent)\r\n  {\r\n    console.log(\"Event: \", event);\r\n    this.startIndex = event.pageIndex * event.pageSize;\r\n    this.endIndex = this.startIndex + this.pageSize;\r\n    if(this.endIndex > this.totalNumberOfPuzzles){\r\n      this.endIndex = this.totalNumberOfPuzzles\r\n    }\r\n    this.puzzles.slice(this.startIndex, this.endIndex);\r\n    return event;\r\n  }\r\n\r\n\r\n  //sorting functions start here\r\n  puzzleDescending()\r\n  {\r\n    return this.puzzles.sort( (a,b) => {\r\n      let paramA = a.name.toLowerCase();\r\n      let paramB = b.name.toLowerCase();\r\n\r\n      if(paramA > paramB ){ return -1; }\r\n      else { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  puzzleAscending()\r\n  {\r\n    return this.puzzles.sort( (a,b) => {\r\n      let paramA = a.name.toLowerCase();\r\n      let paramB = b.name.toLowerCase();\r\n\r\n      if(paramA < paramB ){ return -1; }\r\n      else { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  creatorDescending()\r\n  {\r\n    return this.puzzles.sort( (a,b) => {\r\n      let paramA = a.creator.toLowerCase();\r\n      let paramB = b.creator.toLowerCase();\r\n\r\n      if(paramA > paramB ){ return -1; }\r\n      else { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  creatorAscending()\r\n  {\r\n    return this.puzzles.sort( (a,b) => {\r\n      let paramA = a.creator.toLowerCase();\r\n      let paramB = b.creator.toLowerCase();\r\n\r\n      if(paramA < paramB ){ return -1; }\r\n      else { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  dateDescending()\r\n  {\r\n    return this.puzzles.sort( (a,b) => {\r\n      // let paramA = a.created;//.toLowerCase();\r\n      // let paramB = b.creator;//.toLowerCase();\r\n\r\n      // if(paramA > paramB ){ return -1; }\r\n      // else { return 1; }\r\n      // return 0;\r\n      let paramA = new Date(a.created).getTime();\r\n      let paramB = new Date(b.created).getTime();\r\n      return paramA > paramB ? 1 : -1;\r\n    });\r\n  }\r\n\r\n  dateAscending()\r\n  {\r\n    return this.puzzles.sort( (a,b) => {\r\n      let paramA = new Date(a.created).getTime();\r\n      let paramB = new Date(b.created).getTime();\r\n      return paramA < paramB ? 1 : -1;\r\n    });\r\n  }\r\n\r\n  ratingDescending()\r\n  {\r\n    return this.puzzles.sort( (a,b) => {\r\n      let paramA = a.rating;\r\n      let paramB = b.rating;\r\n\r\n      if(paramA > paramB ){ return -1; }\r\n      else { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  ratingAscending()\r\n  {\r\n    return this.puzzles.sort( (a,b) => {\r\n      let paramA = a.rating;\r\n      let paramB = b.rating;\r\n\r\n      if(paramA < paramB ){ return -1; }\r\n      else { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n  //sorting functions end here\r\n\r\n  populate(populatePuz: any)\r\n  {\r\n    this.ratings.length = 0;\r\n    this.api.getAllPuzzleRatings().subscribe(\r\n      data=> {\r\n        for(let i=0; data[i]!= null; i++){\r\n          let ratingObj = new RatingsArr();\r\n          ratingObj.id = data[i].id;\r\n          ratingObj.rating = data[i].rating;\r\n          ratingObj.puzzleID = data[i].puzzleID;\r\n          this.ratings.push(ratingObj);\r\n        }\r\n      },\r\n      error => {\r\n        console.log(\"Error from API: \", error.error);\r\n      });\r\n\r\n\r\n    if (populatePuz != null)\r\n    {\r\n      this.getPuzzles(populatePuz);\r\n    }\r\n    else\r\n    {\r\n      this.api.getAllPuzzles().subscribe(\r\n        data => {\r\n          this.totalNumberOfPuzzles = Object.keys(data).length;\r\n          this.getPuzzles(data);\r\n      },\r\n        error => {//if status code other than in the 200 range returned, show error\r\n          console.log('Error from API: ', error.error);\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n  searchItems(searchValue: any){\r\n    if(searchValue != undefined){\r\n      this.api.getSearchedPuzzles(searchValue).subscribe( data => {\r\n        var dataObjectSize = Object.keys(data).length;\r\n        if(dataObjectSize == 0 )\r\n        {\r\n          alert(\"Nothing matches given criteria\");\r\n          console.log(\"Nothing matches given criteria\");\r\n        }\r\n        else{\r\n          //Please populate the page with the data received. Other puzzles not fromd data must be cleared\r\n          console.log(data);\r\n          this.populate(data);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getPuzzles(data: any){\r\n    this.puzzles.length = 0;\r\n    for(let i=0; data[i]!=null; i++)\r\n    {\r\n      let puzzleObj = new PuzzleArr();\r\n      puzzleObj.id = data[i].id;\r\n      puzzleObj.name = data[i].name;\r\n      puzzleObj.description = data[i].description;\r\n      puzzleObj.creator = data[i].creator;\r\n      puzzleObj.created = data[i].createdAt;\r\n      puzzleObj.image = data[i].image;\r\n      if (puzzleObj.creator== this.currentUser[\"name\"])\r\n      {\r\n        puzzleObj.showRating = false;\r\n      }\r\n      else\r\n      {\r\n        puzzleObj.showRating = true;\r\n      }\r\n\r\n      let j = 0;\r\n      let total = 0;\r\n\r\n      for (let k=0; this.ratings[k]!=null; k++){\r\n        if (this.ratings[k].puzzleID == data[i].id)\r\n        {\r\n          //********* ERROR HERE - THIS LOOP IS NOT ENTERED WHEN THE RATINGS VALUE IS 0  ************\r\n          total = total + this.ratings[k].rating;\r\n          j = j+1;\r\n        }\r\n      }\r\n\r\n      if (j == 0){\r\n        puzzleObj.rating = 0;\r\n      }\r\n      else{\r\n        puzzleObj.rating = (total/j);\r\n      }\r\n      this.puzzles.push(puzzleObj);\r\n    }\r\n\r\n    this.datasource = new MatTableDataSource(this.puzzles);\r\n\r\n    this.dataAvailable = true;\r\n    this.show= false;\r\n\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.datasource.filterPredicate = function(data, filter: string): boolean {\r\n      return data.name.toLowerCase().includes(filter) || data.creator.toLowerCase().includes(filter)\r\n    };\r\n    this.datasource.filter = filterValue.trim().toLowerCase();\r\n    this.totalNumberOfPuzzles = this.datasource.filteredData.length;\r\n  }\r\n\r\n  checkData(data: any){\r\n    this.ratePID = data;\r\n  }\r\n\r\n  openRateDialog(){\r\n    this.rateDialogRef = this.dialog.open(RateDialogComponent);\r\n\r\n    this.rateDialogRef.afterClosed().subscribe( result => {\r\n\r\n      if (result != \"\"){\r\n\r\n        this.ratingEntry = {\r\n        //\"id\":this.rateUID,\r\n          \"puzzleID\":this.ratePID,\r\n          \"rating\":result,\r\n          \"token\": localStorage.getItem('token')\r\n        }\r\n\r\n        if(this.api.createNewPuzzleRating(this.ratingEntry).subscribe())\r\n        {\r\n          alert(\"Rating added\");\r\n        }\r\n\r\n        location.reload();\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  openAndCheck(rateP: any){\r\n    this.checkData(rateP);\r\n    this.openRateDialog();\r\n  }\r\n\r\n  reload(){\r\n    this.populate(null);\r\n  }\r\n\r\n  //solve dialog\r\n  openSolveDialog(id){\r\n    this.solveDialog = this.dialog.open(SolveDialogComponent);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.show=true;\r\n    this.dataAvailable = false;\r\n    if(!localStorage.getItem('token')){\r\n      this.router.navigate(['/index']);\r\n      alert(\"You are not logged in\");\r\n    }\r\n\r\n    this.currentUser = {\r\n      \"token\": localStorage.getItem('token')\r\n    }\r\n\r\n    this.api.getUser(this.currentUser).subscribe( data => {\r\n      console.log(data[\"name\"]);\r\n      this.currentUser = {\r\n        \"token\": localStorage.getItem('token'),\r\n        \"name\": data[\"name\"]\r\n      }\r\n    });\r\n\r\n    this.populate(null);\r\n\r\n  }\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"container\">\r\n<mat-form-field class=\"searchArea\">\r\n    <mat-label>Search</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event.target.value)\">\r\n</mat-form-field>\r\n\r\n<button mat-button class=\"sortBtns\">Name\r\n  <mat-icon (click)=\"puzzleAscending()\" class=\"arrow\">arrow_upwardward</mat-icon> |\r\n  <mat-icon (click)=\"puzzleDescending()\" class=\"arrow\">arrow_downward</mat-icon>\r\n</button>\r\n\r\n<button mat-button class=\"sortBtns\">Rating\r\n  <mat-icon (click)=\"ratingAscending()\" class=\"arrow\">arrow_upwardward</mat-icon> |\r\n  <mat-icon (click)=\"ratingDescending()\" class=\"arrow\">arrow_downward</mat-icon>\r\n</button>\r\n\r\n<button mat-button class=\"sortBtns\">Creator\r\n  <mat-icon (click)=\"creatorAscending()\" class=\"arrow\">arrow_upwardward</mat-icon> |\r\n  <mat-icon (click)=\"creatorDescending()\" class=\"arrow\">arrow_downward</mat-icon>\r\n</button>\r\n\r\n<button mat-button class=\"sortBtns\">Date\r\n  <mat-icon (click)=\"dateAscending()\" class=\"arrow\">arrow_upwardward</mat-icon> |\r\n  <mat-icon (click)=\"dateDescending()\" class=\"arrow\">arrow_downward</mat-icon>\r\n</button>\r\n\r\n<div class=\"spinner\">\r\n  <mat-spinner *ngIf=\"show\" id=\"spinner\"></mat-spinner>\r\n</div>\r\n\r\n<div class=\"container-fluid\" *ngIf=\"dataAvailable\" >\r\n    <div class=\"flex-container\" fxLayout=\"row wrap\" fxLayout.xs=\"row wrap\" fxLayoutAlign=\"space-evenly center\">\r\n        <mat-card class=\"content\"  *ngFor=\"let puzzle of this.datasource.filteredData | slice: startIndex:endIndex\">\r\n          <div class=\"content-overlay\"></div>\r\n          <!-- <mat-icon aria-hidden=\"false\" class=\"infoIcon\">info_outline</mat-icon> -->\r\n          <img class=\"content-image\" src=\"{{puzzle.image}}\">\r\n            <div class=\"content-details fadeIn-bottom\">\r\n              <mat-card-header>\r\n               <mat-card-subtitle class=\"puzzleDetails\"><strong>Created by:</strong> {{puzzle.creator}}</mat-card-subtitle>\r\n                <mat-card-subtitle class=\"puzzleDetails\"><strong>Created on:</strong> {{puzzle.created}}</mat-card-subtitle>\r\n                <mat-card-subtitle class=\"puzzleDetails\"><strong>Description:</strong> {{puzzle.description}}</mat-card-subtitle>\r\n              </mat-card-header>\r\n            </div>\r\n            <mat-card-title><strong>{{puzzle.name}}</strong></mat-card-title>\r\n            <mat-card-subtitle>Rating: {{puzzle.rating}}/5 <span *ngIf=\"puzzle.rating == '0'\">- Not yet rated</span> </mat-card-subtitle>\r\n\r\n            <mat-card-actions class=\"puzzleActions\">\r\n              <button mat-button class=\"btns\" (click)=\"openSolveDialog(puzzle.id)\">SOLVE</button>\r\n              <button *ngIf=\"puzzle.showRating\" mat-button class=\"btns\" (click)=\"openAndCheck(puzzle.id)\">RATE</button>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n<mat-paginator *ngIf=\"!show\" class=\"paginator\" [length]=\"totalNumberOfPuzzles\" [pageSize]=\"pageSize\"\r\n                  (page)=\"pageEvent = changeEvent($event)\">\r\n</mat-paginator>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { User } from 'src/app/models/User';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.css']\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n  resetPasswordForm: FormGroup;\r\n  verifyUser: any;\r\n  formError: string;\r\n  resetDone: string;\r\n  fieldTextType: boolean;\r\n  fieldTextType2: boolean;\r\n\r\n  constructor(private formBuilder: FormBuilder, private api: APIService, private router: Router ) {}\r\n\r\n  toggleFieldTextType() {\r\n    this.fieldTextType = !this.fieldTextType;\r\n  }\r\n\r\n  toggleFieldTextType2() {\r\n    this.fieldTextType2 = !this.fieldTextType2;\r\n  }\r\n\r\n  //method for logging in user and getting the token associated with the said user\r\n  resetPassword(currentUser: User){\r\n    this.resetDone = '';\r\n    this.formError = '';\r\n    if(this.doPasswordsMatch(this.resetPasswordForm.controls['password'].value, this.resetPasswordForm.controls['confirmPassword'].value) == true){\r\n      this.verifyUser = {\r\n        \"username\": currentUser.email,\r\n        \"password\": currentUser.password\r\n      }\r\n      if(this.verifyUser != null){\r\n        this.api.resetPassword(this.verifyUser).subscribe(\r\n          () => {},\r\n          error => {//if status code other than in the 200 range returned, show error\r\n            if(error.status >= 401){\r\n              this.formError = error.error;\r\n            }\r\n            else\r\n            {\r\n              this.router.navigate(['/resetSuccess', { message: \"Password reset. Please login\" }]);\r\n            }\r\n          })\r\n      }\r\n    }\r\n    else\r\n    {\r\n      this.formError = \"Passwords do not match\";\r\n    }\r\n  }\r\n\r\n  //error messages used during login/register validation\r\n  error_messages = {\r\n    'email': [\r\n      { type: 'required', message: 'Email is required.' },\r\n      { type: 'email', message: 'Invalid email format.' }\r\n    ],\r\n    'password': [\r\n      { type: 'required', message: 'Password is required.' },\r\n      { type: 'minlength', message: 'Password must have at least 6 characters.' }\r\n    ],\r\n    'confirmPassword': [\r\n      { type: 'required', message: 'password is required.' },\r\n      { type: 'minlength', message: 'Password must have at least 6 characters.' }\r\n    ],\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.resetPasswordForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: ['', [Validators.required, Validators.minLength(6)]]\r\n    });\r\n  }\r\n\r\n  //checking if passwords match\r\n  doPasswordsMatch(firstPassword: string, secondPassword: string) {\r\n    if (firstPassword !== secondPassword) {\r\n        return false;\r\n    } else {\r\n      return true;\r\n    }\r\n}\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"flex-container\" fxLayout=\"row\" fxLayoutAlign=\"center none\">\r\n      <mat-card class=\"regForm\"><img src=\"assets/images/label.png\">\r\n          <mat-card-header>\r\n              <h3>Reset Password</h3>\r\n          </mat-card-header>\r\n            <mat-card-content class=\"regFormContent\">\r\n                <form [formGroup]=\"resetPasswordForm\" (ngSubmit)=\"resetPassword(resetPasswordForm.value)\">\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your email</mat-label>\r\n                        <input class=\"input\" matInput placeholder=\"john@doe.com\" formControlName=\"email\" required>\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.email\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"resetPasswordForm.get('email').hasError(error.type) && (resetPasswordForm.get('email').dirty || resetPasswordForm.get('email').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your password</mat-label>\r\n                        <input matInput required\r\n                            [type]=\"fieldTextType ? 'text' : 'password'\" class=\"input\" formControlName=\"password\"/>\r\n                    </mat-form-field>\r\n                    <span>\r\n                        <i class=\"fa\" [ngClass]=\"{ 'fa-eye-slash': !fieldTextType,'fa-eye': fieldTextType }\" (click)=\"toggleFieldTextType()\">\r\n                        </i>\r\n                    </span>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.password\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"resetPasswordForm.get('password').hasError(error.type) && (resetPasswordForm.get('password').dirty || resetPasswordForm.get('password').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <mat-form-field appearance=\"fill\">\r\n                            <mat-label>Confirm password</mat-label>\r\n                            <input matInput required\r\n                                [type]=\"fieldTextType2 ? 'text' : 'password'\" class=\"input\" formControlName=\"confirmPassword\"/>\r\n                        </mat-form-field>\r\n                        <span>\r\n                            <i class=\"fa\" [ngClass]=\"{ 'fa-eye-slash': !fieldTextType2,'fa-eye': fieldTextType2 }\" (click)=\"toggleFieldTextType2()\">\r\n                            </i>\r\n                        </span>\r\n                            <div>\r\n                                <ng-container *ngFor=\"let error of error_messages.confirmPassword\">\r\n                                    <mat-error class=\"error-message\" *ngIf=\"resetPasswordForm.get('confirmPassword').hasError(error.type) && (resetPasswordForm.get('confirmPassword').dirty || resetPasswordForm.get('confirmPassword').touched)\">\r\n                                        {{ error.message }}\r\n                                    </mat-error>\r\n                                </ng-container>\r\n                                <span id=\"passError\">{{formError}}</span>\r\n                            </div>\r\n                    </div>\r\n\r\n                    <button mat-raised-button type=\"submit\" [disabled]=\"!resetPasswordForm.valid\" class=\"btns\" id=\"one\">Submit</button>\r\n                    <a routerLink=\"/index\" mat-raised-button class=\"btns\" id=\"two\">Cancel</a>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-reset-success',\r\n  templateUrl: './reset-success.component.html',\r\n  styleUrls: ['./reset-success.component.css']\r\n})\r\nexport class ResetSuccessComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router ) {}\r\n\r\n  ngOnInit() {\r\n\r\n    let message = this.route.snapshot.paramMap.get('message');\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"flex-container\" fxLayout=\"row\" fxLayoutAlign=\"center none\">\r\n          <mat-card class=\"regForm\"><img src=\"assets/images/label.png\">\r\n              <mat-card-header>\r\n                  <h3>Reset Password</h3>\r\n              </mat-card-header>\r\n            <mat-card-content class=\"regFormContent\">\r\n                    <p>Please login</p>\r\n                    <a routerLink=\"/login\" mat-raised-button class=\"btns\" id=\"two\">Login</a>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { User } from '../../models/User';\r\nimport { APIService } from '../../services/api.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  signUpForm: FormGroup;\r\n  newUser: any;\r\n  formError: string;\r\n  fieldTextType: boolean;\r\n  fieldTextType2: boolean;\r\n\r\n  token: any;\r\n  name: any;\r\n\r\n  constructor(private formBuilder: FormBuilder, private api: APIService, private router: Router) {}\r\n\r\n\r\n  toggleFieldTextType() {\r\n    this.fieldTextType = !this.fieldTextType;\r\n  }\r\n\r\n  toggleFieldTextType2() {\r\n    this.fieldTextType2 = !this.fieldTextType2;\r\n  }\r\n\r\n  //method for creating a new user. A new JSON object is created and sent to the node api\r\n  createNewUser(createUser: any){\r\n    this.formError = '';\r\n    if(this.doPasswordsMatch(this.signUpForm.controls['password'].value, this.signUpForm.controls['confirmPassword'].value) == true){\r\n      this.newUser = {\r\n        \"name\": createUser.name,\r\n        \"username\": createUser.email,\r\n        \"password\": createUser.password\r\n      }\r\n      if(this.newUser != null){\r\n        this.api.createUser(this.newUser).subscribe(\r\n            data => {\r\n              console.log(data);\r\n              localStorage.removeItem('name');\r\n              localStorage.setItem('name', data['name']);\r\n              localStorage.removeItem('token');\r\n              localStorage.setItem('token', data['token']);\r\n              this.router.navigate(['/ratings']);\r\n            },\r\n          error => {//if status code other than in the 200 range returned, show error\r\n            console.log('Error from API: ', error.error);\r\n            if(error.status >= 401){\r\n              this.formError = error.error;\r\n            }\r\n          })\r\n      }\r\n    }\r\n    else\r\n    {\r\n      this.formError = \"Passwords do not match\";\r\n    }\r\n  }\r\n\r\n  //error messages used during login/register validation\r\n  error_messages = {\r\n    'name': [\r\n      { type: 'required', message: 'Full name is required.' },\r\n      { type: 'pattern', message: 'Name can only consist of letters' }\r\n    ],\r\n    'email': [\r\n      { type: 'required', message: 'Email is required.' },\r\n      { type: 'email', message: 'Invalid email format.' }\r\n    ],\r\n    'password': [\r\n      { type: 'required', message: 'Password is required.' },\r\n      { type: 'minlength', message: 'Password must have at least 6 characters.' }\r\n    ],\r\n    'confirmPassword': [\r\n      { type: 'required', message: 'password is required.' },\r\n      { type: 'minlength', message: 'Password must have at least 6 characters.' }\r\n    ],\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.signUpForm = this.formBuilder.group({\r\n      name: ['', [Validators.required, Validators.pattern('[a-zA-Z ]*')]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: ['', [Validators.required, Validators.minLength(6)]]\r\n    });\r\n  }\r\n\r\n  //checking if passwords match\r\n  doPasswordsMatch(firstPassword: string, secondPassword: string) {\r\n        if (firstPassword !== secondPassword) {\r\n          //this.formError = \"Passwords do not match: \" + controlName + \" \" + matchingControlName;\r\n            return false;\r\n        } else {\r\n          //this.formError = \"Match: \" + controlName + \" \" + matchingControlName;\r\n          return true;\r\n        }\r\n    }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"flex-container\" fxLayout=\"row\" fxLayoutAlign=\"center none\">\r\n      <mat-card class=\"regForm\"><img src=\"assets/images/label.png\">\r\n          <mat-card-header>\r\n              <h3>Sign Up</h3>\r\n          </mat-card-header>\r\n            <mat-card-content class=\"regFormContent\">\r\n                <form [formGroup]=\"signUpForm\" (ngSubmit)=\"createNewUser(signUpForm.value)\">\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your full name</mat-label>\r\n                        <input class=\"input\" matInput placeholder=\"John Doe\" formControlName=\"name\" required >\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.name\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"signUpForm.get('name').hasError(error.type) && (signUpForm.get('name').dirty || signUpForm.get('name').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your email</mat-label>\r\n                        <input class=\"input\" matInput placeholder=\"john@doe.com\" formControlName=\"email\" required>\r\n                    </mat-form-field>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.email\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"signUpForm.get('email').hasError(error.type) && (signUpForm.get('email').dirty || signUpForm.get('email').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Enter your password</mat-label>\r\n                        <input matInput required\r\n                  [type]=\"fieldTextType ? 'text' : 'password'\"\r\n                  class=\"input\"\r\n                  formControlName=\"password\"\r\n                />\r\n                    </mat-form-field>\r\n                    <span><i\r\n                      class=\"fa\"\r\n                      [ngClass]=\"{\r\n                        'fa-eye-slash': !fieldTextType,\r\n                        'fa-eye': fieldTextType\r\n                      }\"\r\n                      (click)=\"toggleFieldTextType()\"\r\n                    ></i></span>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.password\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"signUpForm.get('password').hasError(error.type) && (signUpForm.get('password').dirty || signUpForm.get('password').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Confirm password</mat-label>\r\n                        <input matInput required\r\n                  [type]=\"fieldTextType2 ? 'text' : 'password'\"\r\n                  class=\"input\"\r\n                  formControlName=\"confirmPassword\"\r\n                />\r\n                    </mat-form-field>\r\n                    <span><i\r\n                      class=\"fa\"\r\n                      [ngClass]=\"{\r\n                        'fa-eye-slash': !fieldTextType2,\r\n                        'fa-eye': fieldTextType2\r\n                      }\"\r\n                      (click)=\"toggleFieldTextType2()\"\r\n                    ></i></span>\r\n                        <div>\r\n                            <ng-container *ngFor=\"let error of error_messages.confirmPassword\">\r\n                                <mat-error class=\"error-message\" *ngIf=\"signUpForm.get('confirmPassword').hasError(error.type) && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched)\">\r\n                                    {{ error.message }}\r\n                                </mat-error>\r\n                            </ng-container>\r\n                            <span id=\"passError\">{{formError}}</span>\r\n                        </div>\r\n                    </div>\r\n                    <button mat-raised-button type=\"submit\" [disabled]=\"!signUpForm.valid\" class=\"btn\" id=\"one\">Sign Up</button>\r\n\r\n                    <a routerLink=\"/index\" mat-raised-button color=\"accent\" class=\"btns\">Cancel</a>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-rate-dialog',\r\n  templateUrl: './rate-dialog.component.html',\r\n  styleUrls: ['./rate-dialog.component.css']\r\n})\r\nexport class RateDialogComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  input: any;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    private dialogRef: MatDialogRef<RateDialogComponent>) { }\r\n\r\n    @Input() OnlyNumber: boolean;\r\n\r\n    error_messages = {\r\n      'rating': [\r\n        { type: 'pattern', message: 'Must be a number between 1 and 5' }\r\n      ]\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      rating: ['', Validators.pattern(\"^([1-5])$\")]\r\n    })\r\n  }\r\n\r\n  submit(form){\r\n    this.input = form.rating;\r\n      this.dialogRef.close(`${form.rating}`);\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"submit(form.value)\">\r\n  <h1 mat-dialog-title>Rate Puzzle (out of 5)</h1>\r\n  <mat-dialog-content>\r\n    <mat-form-field>\r\n      <input matInput type=\"text\" formControlName=\"rating\" placeholder=\"Enter Rating\" ngControl=\"rating\" OnlyNumber=\"true\">\r\n    </mat-form-field>\r\n    <div>\r\n        <ng-container *ngFor=\"let error of error_messages.rating\">\r\n            <mat-error class=\"error-message\" *ngIf=\"form.get('rating').hasError(error.type) && (form.get('rating').dirty || form.get('rating').touched)\">\r\n                {{ error.message }}\r\n            </mat-error>\r\n        </ng-container>\r\n    </div>\r\n\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button mat-button type=\"submit\" [disabled]=\"!form.valid\">Submit</button>\r\n    <button mat-button type=\"button\" mat-dialog-close>Cancel</button>\r\n  </mat-dialog-actions>\r\n</form>\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { User } from '../models/User';\r\nimport { Puzzle } from '../models/Puzzle';\r\nimport { PuzzleRating } from '../models/PuzzleRating';\r\nimport {HttpHeaders} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class APIService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  /**\r\n   * User endpoints start here\r\n   */\r\n  //create new user\r\n  createUser(newUser: User){\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'} ) };\r\n    return this.http.post('https://prometheuspuzzles.herokuapp.com/api/users/createUser',newUser, httpOptions);\r\n  }\r\n\r\n  loginUser(currentUser: User){\r\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n    return this.http.post('https://prometheuspuzzles.herokuapp.com/api/users/login', currentUser, httpOptions);\r\n  }\r\n\r\n  resetPassword(currentUser: User){\r\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n    return this.http.put('https://prometheuspuzzles.herokuapp.com/api/users/resetPassword', currentUser, httpOptions);\r\n  }\r\n\r\n  getUser(token: any){\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'} ) };\r\n    return this.http.post('https://prometheuspuzzles.herokuapp.com/api/users/getUser',token, httpOptions);\r\n  }\r\n\r\n  updateName(currentUser: User){\r\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n    return this.http.put('https://prometheuspuzzles.herokuapp.com/api/users/updateName', currentUser, httpOptions);\r\n  }\r\n\r\n  updateUsername(currentUser: User){\r\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n    return this.http.put('https://prometheuspuzzles.herokuapp.com/api/users/updateUsername', currentUser, httpOptions);\r\n  }\r\n\r\n  getPuzzlesByUser(token: any): Observable<any[]> {\r\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n    return this.http.post<any[]>('https://prometheuspuzzles.herokuapp.com/api/users/getPuzzlesByUser', token, httpOptions);\r\n  }\r\n\r\n  getPuzzleRatingsByUser(token: any): Observable<any[]>{\r\n    const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n    return this.http.post<any[]>('https://prometheuspuzzles.herokuapp.com/api/users/getPuzzleRatingsByUser', token, httpOptions);\r\n  }\r\n\r\n  /**\r\n   * User endpoints end here\r\n   */\r\n\r\n\r\n/**\r\n* Puzzle endpoints start here\r\n*/\r\ngetAllPuzzles(){\r\n  return this.http.get('https://prometheuspuzzles.herokuapp.com/api/puzzles/getAllPuzzles');\r\n}\r\n\r\ngetAllPuzzleByID(puzzleID: number){\r\n  return this.http.get('https://prometheuspuzzles.herokuapp.com/api/puzzles/getPuzzleByID?Id=' + puzzleID);\r\n}\r\n\r\ncreateNewPuzzle(puzzle: Puzzle){\r\n  const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n  return this.http.post('https://prometheuspuzzles.herokuapp.com/api/puzzles/createPuzzle', puzzle, httpOptions);\r\n}\r\n\r\ncreateNewPuzzleRating(rating: PuzzleRating){\r\n  const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n  return this.http.post('https://prometheuspuzzles.herokuapp.com/api/puzzles/createPuzzleRating', rating, httpOptions);\r\n}\r\n\r\ngetAllPuzzleRatings(){\r\n  return this.http.get('https://prometheuspuzzles.herokuapp.com/api/puzzles/getAllPuzzleRatings');\r\n}\r\n\r\ngetSearchedPuzzles(term: any){\r\n  return this.http.get('https://prometheuspuzzles.herokuapp.com/api/puzzles/getSearchedPuzzles/' + term);\r\n}\r\n\r\nsharePuzzle(puzzle: any){\r\n  const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n  return this.http.put('https://prometheuspuzzles.herokuapp.com/api/puzzles/sharePuzzle', puzzle, httpOptions);\r\n}\r\n\r\nstopSharingPuzzle(puzzle: any){\r\n  const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n  return this.http.put('https://prometheuspuzzles.herokuapp.com/api/puzzles/stopSharingPuzzle', puzzle, httpOptions);\r\n}\r\n\r\ndeletePuzzle(puzzle:number):Observable<number>\r\n{\r\n  return this.http.delete<number>('https://prometheuspuzzles.herokuapp.com/api/puzzles/deletePuzzle/'+puzzle);\r\n}\r\n\r\nfindRatingID(rating: any){\r\n  const httpOptions = { headers: new HttpHeaders( { 'Content-Type': 'application/json' })};\r\n  return this.http.post('https://prometheuspuzzles.herokuapp.com/api/puzzles/findRatingID', rating, httpOptions);\r\n}\r\n\r\ndeleteRating(rating:number):Observable<number>\r\n{\r\n  return this.http.delete<number>('https://prometheuspuzzles.herokuapp.com/api/puzzles/deleteRating/'+rating);\r\n}\r\n\r\n/**\r\n* Puzzle endpoints end here\r\n*/\r\n\r\n/**\r\n* Admin endpoints start here\r\n*/\r\n\r\ngetAllUsers(){\r\n  return this.http.get('http://localhost:3200/api/admin/getAllUsers');\r\n}\r\n\r\ndeleteUser(user:number): Observable<number>\r\n{\r\n  return this.http.delete<number>('http://localhost:3200/api/admin/deleteUser/'+user);\r\n}\r\n\r\ngetAllPuzzlesAdmin()\r\n{\r\n  return this.http.get('http://localhost:3200/api/admin/getAllPuzzles');\r\n}\r\n\r\ndeletePuzzleAdmin(puzzle:number): Observable<number>{\r\n  return this.http.delete<number>('http://localhost:3200/api/admin/deletePuzzle/'+puzzle);\r\n}\r\n\r\ngetAllRatingsAdmin(){\r\n  return this.http.get('http://localhost:3200/api/admin/getAllRatings');\r\n}\r\n\r\ndeleteRatingAdmin(rateID:number): Observable<number>{\r\n  return this.http.delete<number>('http://localhost:3200/api/admin/deleteRatingAdmin/'+rateID);\r\n}\r\n/**\r\n* Admin endpoints end here\r\n*/\r\n\r\n}\r\n","import { width, height, setSites, setDisableEditMode, initializeData, calculateDistancesFromSitesToPoint,\r\n\tequidistantPointsPresent, generateSiteBoundaries, createPieces, clearBoard } from 'src/assets/js/manualCreation.js'\r\n\r\n///The structure of each individual/chromosome object\r\nlet Chromosome = {\r\n\tsites: [],\r\n\tfitness: -1,\r\n};\r\n\r\n///The structure of each site object\r\nlet Site = {\r\n\tx: 0,\r\n\ty: 0,\r\n\tsurfaceArea: 0,\r\n}\r\n\r\nlet generatePuzzleAIButton, colorPalettesDiv;\r\nlet tempWidth, tempHeight;\r\nlet totalSurfaceArea;\r\n\r\nlet generationSize = 10 + 1;\r\nlet tournamentSize = 4;\r\nlet maximumIterations = 150;\r\nlet seedString = 'apples';\r\n\r\nlet sliders = [];\r\nlet labels = [];\r\nlet numberOfSites = 6;\r\nlet desiredProportions = [0.40, 0.20, 0.10, 0.10, 0.10, 0.10];\r\nlet groupDistribution = [];\r\n\r\nfunction copyObject(obj)\r\n{\r\n    return JSON.parse(JSON.stringify(obj));\r\n}\r\n\r\nfunction xmur3(str) {\r\n    for(var i = 0, h = 1779033703 ^ str.length; i < str.length; i++)\r\n        h = Math.imul(h ^ str.charCodeAt(i), 3432918353),\r\n        h = h << 13 | h >>> 19;\r\n    return function() {\r\n        h = Math.imul(h ^ h >>> 16, 2246822507);\r\n        h = Math.imul(h ^ h >>> 13, 3266489909);\r\n        return (h ^= h >>> 16) >>> 0;\r\n    }\r\n}\r\n\r\nfunction mulberry32(a) {\r\n    return function() {\r\n      var t = a += 0x6D2B79F5;\r\n      t = Math.imul(t ^ t >>> 15, t | 1);\r\n      t ^= t + Math.imul(t ^ t >>> 7, t | 61);\r\n      return ((t ^ t >>> 14) >>> 0) / 4294967296;\r\n    }\r\n}\r\n\r\nlet seed = xmur3(seedString);\r\nlet rand = mulberry32(seed());\r\n\r\nfunction random(max)\r\n{\r\n    return Math.ceil(rand() * max) - 1;\r\n}\r\n\r\nfunction expandPuzzle(sites, factor)\r\n{\r\n\tfor(let i = 0; i < sites.length; i++)\r\n\t{\r\n\t\tsites[i].x = sites[i].x * factor;\r\n\t\tsites[i].y = sites[i].y * factor;\r\n\t}\r\n\r\n\treturn sites;\r\n}\r\n\r\nexport function initializeDataAI()\r\n{\r\n\tinitializeData('AI');\r\n\tgeneratePuzzleAIButton = document.getElementById('generatePuzzleButtonAI');\r\n\tgeneratePuzzleAIButton.addEventListener('mousedown', generatePuzzleAI);\r\n\tgeneratePuzzleAIButton.remove();\r\n\r\n\tdocument.getElementById('nextButton').addEventListener('mousedown', displaySlidersCard);\r\n}\r\n\r\nfunction displaySlidersCard()\r\n{\r\n\tnumberOfSites = document.getElementById('numberOfPiecesInputBox').value;\r\n\r\n\tgroupDistribution.push(document.getElementById('numberOfPiecesInputBox1').value);\r\n\tgroupDistribution.push(document.getElementById('numberOfPiecesInputBox2').value);\r\n\tgroupDistribution.push(document.getElementById('numberOfPiecesInputBox3').value);\r\n\r\n\tgenerateSliders(3);\r\n\r\n\tdocument.getElementById('inputContainer').appendChild(generatePuzzleAIButton);\r\n}\r\n\r\nfunction generatePuzzleAI()\r\n{\r\n\tdesiredProportions = [];\r\n\r\n\tfor(let i = 0; i < 3; i++)\r\n\t{\r\n\t\tlet proportion = (sliders[i].value / groupDistribution[i]) / 100;\r\n\r\n\t\tfor(let counter = 0; counter < groupDistribution[i]; counter++)\r\n\t\t\tdesiredProportions.push(proportion);\r\n\t}\r\n\r\n\tdesiredProportions.sort( function(a, b) { return b - a } );\r\n\r\n\tdocument.getElementById('inputContainer').innerHTML = '';\r\n\r\n\tlet sites = run();\r\n\tsites = expandPuzzle(sites, 10);\r\n\r\n\tsetSites(sites);\r\n\tsetDisableEditMode(true);\r\n\tclearBoard();\r\n\tgenerateSiteBoundaries();\r\n\tcreatePieces();\r\n}\r\n\r\nfunction generateSliders(numberOfSliders)\r\n{\r\n\tlet inputContainer = document.getElementById('inputContainer');\r\n\tlet defaultValue = 100/numberOfSliders;\r\n\r\n\tinputContainer.innerHTML = '';\r\n\r\n\tfor(let i = 0; i < numberOfSliders; i++)\r\n\t{\r\n\t\tlet slider = document.createElement('input');\r\n\t\tslider.type = 'range';\r\n\t\tslider.min = 1.00;\r\n\t\tslider.max = 100.00 - numberOfSliders + 1;\r\n\t\tslider.value = defaultValue;\r\n\t\tslider.previousValue = defaultValue;\r\n\t\tslider.sliderid = i;\r\n\t\tslider.step = 0.01;\r\n\r\n\t\tslider.addEventListener('input', function() {\r\n\t\t\tlet difference = this.previousValue - this.value;\r\n\t\t\tlet distributedValue = (difference/( numberOfSliders - 1 )).toFixed(2);\r\n\t\t\tlet leftover = 0;\r\n\r\n\t\t\tfor(let i = 0 ; i < numberOfSliders; i++)\r\n\t\t\t{\r\n\t\t\t\tif(i != this.sliderid)\r\n\t\t\t\t{\r\n\t\t\t\t\tlet tempValue = ( parseFloat(sliders[i].value) + parseFloat(distributedValue) );\r\n\t\t\t\t\tif(tempValue >= 1.00)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(leftover != 0 && ( tempValue + leftover ) >= 1.00)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttempValue += leftover;\r\n\t\t\t\t\t\t\tleftover = 0;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tsliders[i].value = tempValue;\r\n\t\t\t\t\t\tsliders[i].previousValue = tempValue;\r\n\t\t\t\t\t\tlabels[i].innerHTML = parseInt(tempValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tleftover += parseFloat(distributedValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor(let i = 0; leftover != 0 && i < numberOfSliders; i++)\r\n\t\t\t{\r\n\t\t\t\tif(i != this.sliderid)\r\n\t\t\t\t{\r\n\t\t\t\t\tlet tempValue = parseFloat(sliders[i].value) + leftover;\r\n\t\t\t\t\tif(tempValue >= 1.00)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsliders[i].value = tempValue;\r\n\t\t\t\t\t\tsliders[i].previousValue = tempValue;\r\n\t\t\t\t\t\tlabels[i].innerHTML = parseInt(tempValue);\r\n\t\t\t\t\t\tleftover = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.previousValue = this.value;\r\n\t\t\tlabels[this.sliderid].innerHTML = parseInt(this.value);\r\n\t\t});\r\n\r\n\t\tlet headerLabel = document.createElement('label');\r\n\t\theaderLabel.innerHTML = 'Size ' + (i+1);\r\n\r\n\t\tlet valueLabel = document.createElement('label');\r\n\t\tvalueLabel.innerHTML = defaultValue.toFixed(0);\r\n\r\n\t\tlet br = document.createElement('br');\r\n\r\n\t\tsliders.push(slider);\r\n\t\tlabels.push(valueLabel);\r\n\r\n\r\n\t\tinputContainer.appendChild(headerLabel);\r\n\t\tinputContainer.appendChild(slider);\r\n\t\tinputContainer.appendChild(valueLabel);\r\n\t\tinputContainer.appendChild(br);\r\n\t}\r\n}\r\n\r\n///Executes the genetic algorithm and returns the resulting site array\r\nfunction run()\r\n{\r\n\tlet currentGeneration = [], nextGeneration = [];\r\n\tlet parentX, parentY, children;\r\n\tlet x, y;\r\n\ttempWidth = width/10;\r\n\ttempHeight = height/10;\r\n\ttotalSurfaceArea = tempWidth * tempHeight;\r\n\r\n\tnextGeneration = initializeGeneration();\r\n\tfor(let generation = 0; generation < maximumIterations; generation++)\r\n\t{\r\n\t\tcurrentGeneration = nextGeneration;\r\n\t\tnextGeneration = [];\r\n\t\tnextGeneration.push( getFittest(currentGeneration) );\r\n\t\tfor(let i = 0; i < generationSize - 1; i+=2)\r\n\t\t{\r\n\t\t\tparentX = runTournament(currentGeneration);\r\n\t\t\tparentY = runTournament(currentGeneration);\r\n\t\t\tchildren = crossover(parentX, parentY);\r\n\t\t\tmutate(children[0]);\r\n\t\t\tmutate(children[1]);\r\n\t\t\tcalculateAndSetFitness(children[0]);\r\n\t\t\tcalculateAndSetFitness(children[1]);\r\n\t\t\tnextGeneration.push(...children);\r\n\t\t}\r\n\t}\r\n\r\n\tconsole.log(nextGeneration);\r\n\tconsole.log('done!');\r\n\treturn getFittest(nextGeneration).sites;\r\n}\r\n\r\n///Returns the fittest chromosome from generation\r\nfunction getFittest(generation)\r\n{\r\n\tlet fittestChromosome = null;\r\n\tfittestChromosome = generation[0];\r\n\r\n\tfor(let i = 1; i < generationSize; i++)\r\n\t\tif(generation[i].fitness < fittestChromosome.fitness)\r\n\t\t\tfittestChromosome = generation[i];\r\n\r\n\treturn fittestChromosome;\r\n}\r\n\r\n///Randomly selected a site and a movement direction; then proceed to execute movement using a random offset\r\nfunction mutate(chromosome)\r\n{\r\n\t// let siteIndex = random(numberOfSites);\r\n\tlet selectedSite = chromosome.sites[random(numberOfSites)];\r\n\tlet offset = random(5);\r\n\tlet movementDirection = random(4);\r\n\r\n\t///Move site to the right by offset (increment x by offset), or move to the left if at board edge\r\n\tif(movementDirection == 0)\r\n\t{\r\n\t\tif(selectedSite.x + offset < tempWidth)\r\n\t\t\tselectedSite.x = selectedSite.x + offset;\r\n\t\telse\r\n\t\t\tselectedSite.x = selectedSite.x - offset;\r\n\t}\r\n\t///Move site to the left by offset (decrement x by offset), or move to the right if at the board edge\r\n\telse if(movementDirection == 1)\r\n\t{\r\n\t\tif(selectedSite.x - offset > 0)\r\n\t\t\tselectedSite.x = selectedSite.x - offset;\r\n\t\telse\r\n\t\t\tselectedSite.x = selectedSite.x + offset;\r\n\t}\r\n\t///Move site upwards by offset (decrement y by offset), or move downwards if at the board edge\r\n\telse if(movementDirection == 2)\r\n\t{\r\n\t\tif(selectedSite.y - offset > 0)\r\n\t\t\tselectedSite.y = selectedSite.y - offset;\r\n\t\telse\r\n\t\t\tselectedSite.y = selectedSite.y + offset;\r\n\t}\r\n\t///Move site downwards by offset (increment y by offset), or move upwards if at board edge\r\n\telse if(movementDirection == 3)\r\n\t{\r\n\t\tif(selectedSite.y + offset < tempHeight)\r\n\t\t\tselectedSite.y = selectedSite.y + offset;\r\n\t\telse\r\n\t\t\tselectedSite.y = selectedSite.y - offset;\r\n\t}\r\n}\r\n\r\n/**\r\n\tCrossover operation; randomly select a site index and swap the sites located on said index.\r\n\tThis function will create two new children, swap their sites and return an array containing them.\r\n**/\r\nfunction crossover(chromosomeX, chromosomeY)\r\n{\r\n\tlet swapIndex = random(numberOfSites);\r\n\tlet childX = copyObject(chromosomeX);\r\n\tlet childY = copyObject(chromosomeY);\r\n\r\n\tlet tempSite = childX.sites[swapIndex];\r\n\tchildX.sites[swapIndex] = childY.sites[swapIndex];\r\n\tchildY.sites[swapIndex] = tempSite;\r\n\r\n\treturn [childX, childY];\r\n}\r\n\r\n///Tournament selection of parent for next generation - fittest from a random bunch is returned.\r\nfunction runTournament(generation)\r\n{\r\n\tlet chosenChromosome, fittestChromosome = null;\r\n\r\n\tfor(let i = 0; i < tournamentSize; i++)\r\n\t{\r\n\t\tchosenChromosome = generation[random(generationSize)];\r\n\t\tif(fittestChromosome == null || chosenChromosome.fitness < fittestChromosome.fitness)\r\n\t\t\tfittestChromosome = chosenChromosome;\r\n\t}\r\n\r\n\treturn fittestChromosome;\r\n}\r\n\r\n///Create and return the initial generation of chromosomes\r\nfunction initializeGeneration()\r\n{\r\n\tlet currentGeneration = [];\r\n\tfor(let i = 0; i < generationSize; i++)\r\n\t{\r\n\t\tlet newChromosome = copyObject(Chromosome);\r\n\t\tfor(let siteIndex = 0; siteIndex < numberOfSites; siteIndex++)\r\n\t\t{\r\n\t\t\tlet tempSite = copyObject(Site);\r\n\t\t\ttempSite.x = random(tempWidth + 1);\r\n\t\t\ttempSite.y = random(tempHeight + 1);\r\n\t\t\tnewChromosome.sites.push(tempSite);\r\n\t\t}\r\n\r\n\t\tcalculateAndSetFitness(newChromosome);\r\n\t\tcurrentGeneration.push(newChromosome);\r\n\t}\r\n\r\n\treturn currentGeneration;\r\n}\r\n\r\n///Calculate and set the fitness of a chromosome\r\nfunction calculateAndSetFitness(chromosome)\r\n{\r\n\tdetermineAndSetSiteBoundaries(chromosome);\r\n\tsortSites(chromosome);\r\n\tlet fitness = 0, difference;\r\n\r\n\tfor(let i = 0; i < desiredProportions.length; i++)\r\n\t{\r\n\t\tdifference = ( desiredProportions[i] * totalSurfaceArea ) - chromosome.sites[i].surfaceArea;\r\n\t\tif(difference < 0)\r\n\t\t\tdifference *= -1;\r\n\t\tfitness += difference;\r\n\t}\r\n\r\n\tchromosome.fitness = fitness;\r\n}\r\n\r\n///Sort the sites according to surface area from highest to lowest\r\nfunction sortSites(chromosome)\r\n{\r\n\tlet sites = chromosome.sites;\r\n\tsites.sort(function(siteA, siteB) { return \tsiteB.surfaceArea - siteA.surfaceArea });\r\n}\r\n\r\n///Generate the boundaries around the sites\r\nfunction determineAndSetSiteBoundaries(chromosome)\r\n{\r\n\tfor(let i = 0; i < numberOfSites; i++)\r\n\t\tchromosome.sites[i].surfaceArea = 0;\r\n\r\n\tfor(let row = 0; row < tempHeight; row++)\r\n\t{\r\n\t\tfor(let col = 0; col < tempWidth; col++)\r\n\t\t{\r\n\t\t\tlet distances = calculateDistancesFromSitesToPoint(col, row, chromosome.sites);\r\n\t\t\tlet equidistantPoints = equidistantPointsPresent(distances);\r\n\r\n\t\t\tchromosome.sites[equidistantPoints[0]].surfaceArea += 1;\r\n\t\t}\r\n\t}\r\n}\r\n","import Konva from 'konva';\r\nexport { width, height, setSites, setDisableEditMode, initializeData, calculateDistancesFromSitesToPoint,\r\n\tequidistantPointsPresent, generateSiteBoundaries, createPieces, clearBoard };\r\n\r\nlet apiURL = \"http://localhost:3200/api/puzzles/createPuzzle\";\r\nlet distanceMetric = 'euclidean';\r\nlet token;\r\n\r\nlet contentDiv = null;\r\nlet aiContentDiv = null;\r\nlet canvas;\r\nlet canvasCoords;\r\nlet width =  500;\r\nlet height = 500;\r\nlet stage;\r\nlet layer;\r\nlet pointsArray = [];\r\nlet sites = [];\r\nlet siteBoundaries;\r\nlet pieces = [];\r\nlet precision = 0;\r\n\r\nlet colorPalettes = [];\r\nlet selectedPalette;\r\nlet paletteCounter = 0;\r\nlet radioButtons = [];\r\n\r\nlet hoverOverPoint = false;\r\nlet disableEditMode = false;\r\nlet deletePointButtonClicked = false;\r\nlet piecesJSONObject;\r\n\r\nlet editIcon, deleteIcon;\r\n\r\n///Make an array with desired colors - can be hex values or names\r\nlet defaultPalette = ['Plum', 'Tomato', 'Orange', 'Violet', 'Gray', 'MediumSeaGreen', 'LightGray', 'SlateBlue', 'Brown', 'Aquamarine', 'AntiqueWhite', 'Red', 'Green'];\r\n///Add the array to the page using this function with the array as a first and the desired name as a second parameter\r\naddColorPalette(defaultPalette, \"Default\");\r\n\r\nlet shadesOfRedPalette = ['Crimson', 'DarkRed', 'Coral', 'FireBrick', 'IndianRed', 'Maroon', 'OrangeRed', 'PaleVioletRed', 'Red', 'Tomato', 'Brown'];\r\naddColorPalette(shadesOfRedPalette, \"Shades Of Red\");\r\n\r\nlet shadesOfGreenPalette = ['Teal', 'MediumSpringGreen', 'LimeGreen', 'ForestGreen', 'MediumSeaGreen', 'LawnGreen', 'PaleGreen', 'GreenYellow', 'Aquamarine'];\r\naddColorPalette(shadesOfGreenPalette, \"Shades of Green\");\r\n\r\nlet shadesOfBluePalette = ['DarkBlue', 'DeepSkyBlue', 'MediumBlue', 'DodgerBlue', 'MidnightBlue', 'RoyalBlue', 'DarkSlateBlue', 'CornflowerBlue', 'SkyBlue', 'PowderBlue'];\r\naddColorPalette(shadesOfBluePalette, \"Shades of Blue\");\r\n\r\n///Add a color palette to the page and needed functionality\r\nfunction addColorPalette(arrayOfColors, paletteName)\r\n{\r\n\tcolorPalettes.push(arrayOfColors);\r\n}\r\n\r\n///Changes the displayed color palette used on the puzzle and re-renders it\r\nfunction changePuzzleColorPalette(colors)\r\n{\r\n\tif(pieces.length > 0)\r\n\t{\r\n\t\tlayer.removeChildren();\r\n\t\tfor(let i = 0; i < pieces.length; i++)\r\n\t\t{\r\n\t\t\tpieces[i].attrs.stroke = colors[i % colors.length];\r\n\t\t\tlayer.add(pieces[i]);\r\n\t\t}\r\n\r\n\t\tlayer.draw();\r\n\t}\r\n}\r\n\r\n///Randomizes the color palette used on the puzzle\r\nfunction randomizePuzzleColorPalette()\r\n{\r\n\tif(pieces.length > 0)\r\n\t{\r\n\t\tlayer.removeChildren();\r\n\t\tfor(let i = 0; i < pieces.length; i++)\r\n\t\t{\r\n\t\t\tpieces[i].attrs.stroke = getRandomRGB();\r\n\t\t\tlayer.add(pieces[i]);\r\n\t\t}\r\n\r\n\t\tlayer.draw();\r\n\t}\r\n}\r\n\r\n///Returns a random RGB value\r\nfunction getRandomRGB()\r\n{\r\n\tlet r = Math.floor(Math.random() * 256);\r\n\tlet g = Math.floor(Math.random() * 256);\r\n\tlet b = Math.floor(Math.random() * 256);\r\n\treturn \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\r\n}\r\n\r\n///Initialize data and set functions for buttons\r\nfunction initializeData(appendedString)\r\n{\r\n\tif(appendedString == undefined)\r\n\t\tappendedString = '';\r\n\r\n\tsites = [];\r\n\tsiteBoundaries = [];\r\n\r\n\tdisableEditMode = false;\r\n\r\n\tselectedPalette = defaultPalette;\r\n\tcanvas = document.getElementById('container'+appendedString);\r\n\tstage = new Konva.Stage({\r\n\t\tcontainer: 'container'+appendedString,\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t});\r\n\r\n\tlayer = new Konva.Layer();\r\n\r\n\tstage.add(layer);\r\n\r\n\tcanvas.addEventListener('mousedown', function(event){\r\n\t\tif(!disableEditMode && !hoverOverPoint)\r\n\t\t{\r\n\t\t\tcanvasCoords = canvas.getBoundingClientRect();\r\n\t\t\tlet x = event.clientX - canvasCoords.x;\r\n\t\t\tlet y = event.clientY - canvasCoords.y;\r\n\r\n\t\t\tlet point = createPoint(x, y);\r\n\r\n\t\t\tlayer.add(point);\r\n\t\t\tlayer.draw();\r\n\t\t\tconsole.log(\"X: \" + x + \" Y: \" + y);\r\n\t\t}\r\n\t});\r\n\r\n\tif(document.getElementById('generatePuzzleButton') != null)\r\n\t\tdocument.getElementById('generatePuzzleButton').addEventListener('mousedown', generatePuzzle);\r\n\r\n\tdocument.getElementById('euclideanButton'+appendedString).addEventListener('mousedown', function(){\r\n\t\tsetDistanceMetric('euclidean');\r\n\t});\r\n\r\n\tdocument.getElementById('manhattanButton'+appendedString).addEventListener('mousedown', function(){\r\n\t\tsetDistanceMetric('manhattan');\r\n\t});\r\n\r\n\tdocument.getElementById('saveButton'+appendedString).addEventListener('mousedown', function() {\r\n\t\tsavePuzzle(appendedString);\r\n\t});\r\n\r\n\tif(document.getElementById('deletePointButton') != null)\r\n\t{\r\n\t\teditIcon = document.getElementById('editPointButtonIcon');\r\n\t\tdeleteIcon = document.getElementById('deletePointButtonIcon');\r\n\t\tif(editIcon != null)\r\n\t\t\teditIcon.remove();\r\n\r\n\t\tdocument.getElementById('deletePointButton').addEventListener('mousedown', function() {\r\n\t\t\tdeletePointButtonClicked = !deletePointButtonClicked;\r\n\t\t\tif(deletePointButtonClicked)\r\n\t\t\t{\r\n\t\t\t\tdisableEditMode = true;\r\n\t\t\t\tthis.innerHTML = '';\r\n\t\t\t\tthis.appendChild(editIcon);\r\n\t\t\t\tthis.innerHTML += 'Edit Mode';\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tdisableEditMode = false;\r\n\t\t\t\tthis.innerHTML = '';\r\n\t\t\t\tthis.appendChild(deleteIcon);\r\n\t\t\t\tthis.innerHTML += 'Delete Mode';\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tdocument.getElementById('randomizeColorsButton'+appendedString).addEventListener('mousedown', randomizePuzzleColorPalette);\r\n\r\n\tlet palettes = document.getElementsByClassName('colorPalettes');\r\n\r\n\tfor(let paletteIndex = 0; paletteIndex < palettes.length; paletteIndex++)\r\n\t{\r\n\t\tpalettes[paletteIndex].addEventListener('mousedown', function(){\r\n\t\t\t// console.log(this.getAttribute('paletteid'));\r\n\t\t\tselectedPalette = colorPalettes[this.getAttribute('paletteid')];\r\n\t\t\tchangePuzzleColorPalette(selectedPalette);\r\n\t\t});\r\n\t}\r\n\r\n\t// document.getElementById('saveAndSubmitButton').addEventListener('mousedown', function() {\r\n\t// \t// let puzzleImage = stage.toDataURL({ pixelRatio: 0.25 });\r\n\t// \t// document.getElementById('testingImg').src = puzzleImage;\r\n\t// \tsavePuzzle(true);\r\n\t// });\r\n}\r\n\r\n///Create a post ajax request and send it to the API in order to save the user's created puzzle\r\nfunction savePuzzle(appendedString)\r\n{\r\n\ttoken = document.getElementById('tokenLabel').innerHTML;\r\n\r\n\tlet puzzleName = document.getElementById('puzzleNameInputBox'+appendedString).value;\r\n\tlet puzzleDescription = document.getElementById('puzzleDescriptionInputBox'+appendedString).value;\r\n\r\n\tlet puzzleImage = stage.toDataURL({ pixelRatio: 0.25 });\r\n\r\n\tlet jsonData = {\r\n\t\ttoken: token,\r\n\t\tname: puzzleName,\r\n\t\tdescription: puzzleDescription,\r\n\t\tpuzzleObject: piecesJSONObject,\r\n\t\timage: puzzleImage,\r\n\t\tshared: false\r\n\t};\r\n\r\n\t$.ajax({\r\n\t\ttype: 'POST',\r\n\t\turl: apiURL,\r\n\t\theaders: {\r\n\t\t\t'Access-Control-Allow-Origin' : '*'\r\n\t\t},\r\n\t\tcontentType: 'application/json',\r\n\t\tdata: JSON.stringify(jsonData),\r\n\t\tdataType: 'json',\r\n\t\tsuccess: function(data, status) {\r\n\t\t\tconsole.log(data);\r\n\t\t\tconsole.log(status);\r\n\t\t},\r\n\t\terror: function(data, status) {\r\n\t\t\tconsole.log(data);\r\n\t\t\tconsole.log(status);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n///Set the selected distance metric for the puzzle\r\nfunction setDistanceMetric(metric)\r\n{\r\n\tdistanceMetric = metric;\r\n}\r\n\r\n///Set disableEditMode to true to prevent user from clicking it any further\r\nfunction setDisableEditMode(bool)\r\n{\r\n\tdisableEditMode = bool;\r\n}\r\n\r\n///Set the sites array\r\nfunction setSites(tempSites)\r\n{\r\n\tsites = tempSites;\r\n}\r\n\r\n///Clear the board\r\nfunction clearBoard()\r\n{\r\n\tpiecesJSONObject = {\r\n\t\t'pieces' : []\r\n\t};\r\n\r\n\tpieces = [];\r\n\tlayer.destroyChildren();\r\n}\r\n\r\n///Create a visual representation of where the user clicks\r\nfunction createPoint(x, y)\r\n{\r\n\tlet point = new Konva.Circle({\r\n\t\tx: x,\r\n\t\ty: y,\r\n\t\tradius: 1,\r\n\t\tstroke: 'black',\r\n\t\tstrokeWidth: 4,\r\n\t\tdraggable: true\r\n\t});\r\n\r\n\tpoint.on('mouseover', function (event){\r\n\t\tdocument.onmousemove = function(event) {\r\n\t\t\tcanvasCoords = canvas.getBoundingClientRect();\r\n\t\t\tpoint.x(event.clientX - canvasCoords.x);\r\n\t\t\tpoint.y(event.clientY - canvasCoords.y);\r\n\t\t};\r\n\r\n\t\thoverOverPoint = true;\r\n\t\tdocument.body.style.cursor = 'pointer';\r\n\t});\r\n\r\n\tpoint.on('mouseout', function(event) {\r\n\t\tdocument.onmousemove = null;\r\n\t\thoverOverPoint = false;\r\n\t\tdocument.body.style.cursor = 'default';\r\n\t});\r\n\r\n\tpoint.on('click', function(event) {\r\n\t\t// console.log('clicked!');\r\n\t\tif(deletePointButtonClicked)\r\n\t\t{\r\n\t\t\tdocument.onmousemove = null;\r\n\t\t\thoverOverPoint = false;\r\n\t\t\tdocument.body.style.cursor = 'default';\r\n\t\t\tpoint.destroy();\r\n\t\t\tlayer.draw();\r\n\t\t}\r\n\t});\r\n\r\n\treturn point;\r\n}\r\n\r\n///Calls the necessary functions to generate puzzle's vertiecs as well as the visual representation\r\nfunction generatePuzzle()\r\n{\r\n\t//Testing data\r\n\t// {\"sites\":[78,108,300,102,100,247,333,281,184,331],\"queries\":[]}\r\n\t// sites = [\r\n\t// {\r\n\t// \tx:78,\r\n\t// \ty:108,\r\n\t// },\r\n\t// {\r\n\t// \tx:300,\r\n\t// \ty:102,\r\n\t// },\r\n\t// {\r\n\t// \tx:100,\r\n\t// \ty:247,\r\n\t// },\r\n\t// {\r\n\t// \tx:333,\r\n\t// \ty:281,\r\n\t// },\r\n\t// {\r\n\t// \tx:184,\r\n\t// \ty:331,\r\n\t// }\r\n\t// ];\r\n\r\n\tpointsArray = layer.getChildren(function(node) {\r\n\t\treturn node.getClassName() === 'Circle';\r\n\t});\r\n\r\n\tfor (let i = pointsArray.length - 1; i >= 0; i--) {\r\n\t\tsites.push({\r\n\t\t\tx: pointsArray[i].attrs.x,\r\n\t\t\ty: pointsArray[i].attrs.y,\r\n\t\t});\r\n\t}\r\n\r\n\tclearBoard();\r\n\r\n\t///This makes sure that the generate button will only generate once\r\n\tdisableEditMode = true;\r\n\r\n\tgenerateSiteBoundaries();\r\n\tcreatePieces();\r\n}\r\n\r\n///Creates the puzzle pieces from the siteBoundaries for each site(position selected by the user)\r\nfunction createPieces()\r\n{\r\n\tfor(let i = 0; i < sites.length; i++)\r\n\t{\r\n\t\tlet trimmedPoints = trimPoints(siteBoundaries[i]);\r\n\t\tlet piece = new Konva.Line({\r\n\t\t\tpoints: trimmedPoints,\r\n\t\t\tstroke: selectedPalette[i % selectedPalette.length],\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tdraggable: true,\r\n\t\t});\r\n\r\n\t\tpiece.on('mouseover', function (){\r\n\t\t\tdocument.body.style.cursor = 'pointer';\r\n\t\t});\r\n\r\n\t\tpiece.on('mouseout', function() {\r\n\t\t\tdocument.body.style.cursor = 'default';\r\n\t\t});\r\n\r\n\t\tpieces.push(piece);\r\n\t\tpiecesJSONObject.pieces.push(trimmedPoints);\r\n\t\tlayer.add(piece);\r\n\t}\r\n\tlayer.draw();\r\n\tpiecesJSONObject = JSON.stringify(piecesJSONObject);\r\n}\r\n\r\n///Shortens the array of vertices for each puzzle piece\r\nfunction trimPoints(pointArray)\r\n{\r\n\tlet trimmedPoints = [];\r\n\tlet lastPointCol = -1;\r\n\tlet firstPointCol = pointArray[0];\r\n\tlet currentRow = pointArray[1];\r\n\tlet crissCross = 1;\r\n\r\n\tfor(let index = 0; index < pointArray.length; index+=2)\r\n\t{\r\n\t\tif(currentRow != pointArray[index+1])\r\n\t\t{\r\n\t\t\tif(crissCross == 1)\r\n\t\t\t{\r\n\t\t\t\ttrimmedPoints.push(firstPointCol, currentRow);\r\n\t\t\t\ttrimmedPoints.push(lastPointCol, currentRow);\r\n\t\t\t\tcrissCross = -1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttrimmedPoints.push(lastPointCol, currentRow);\r\n\t\t\t\ttrimmedPoints.push(firstPointCol, currentRow);\r\n\t\t\t\tcrissCross - 1;\r\n\t\t\t}\r\n\r\n\t\t\tfirstPointCol = pointArray[index];\r\n\t\t\tlastPointCol = pointArray[index];\r\n\t\t\tcurrentRow = pointArray[index+1];\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tlastPointCol = pointArray[index];\r\n\t\t}\r\n\t}\r\n\r\n\treturn trimmedPoints;\r\n}\r\n\r\n///Generate the boundaries around the sites\r\nfunction generateSiteBoundaries()\r\n{\r\n\t// console.log(sites);\r\n\tfor(let i = 0; i < sites.length; i++)\r\n\t\tsiteBoundaries[i] = [];\r\n\r\n\tfor(let row = 0; row < height; row++)\r\n\t{\r\n\t\tfor(let col = 0; col < width; col++)\r\n\t\t{\r\n\t\t\tlet distances = calculateDistancesFromSitesToPoint(col, row, sites);\r\n\t\t\tlet equidistantPoints = equidistantPointsPresent(distances);\r\n\r\n\t\t\tsiteBoundaries[equidistantPoints[0]].push(col);\r\n\t\t\tsiteBoundaries[equidistantPoints[0]].push(row);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n///Determines which site is closest to a pixel position\r\nfunction equidistantPointsPresent(distances)\r\n{\r\n\tlet returnArray = [];\r\n\tlet minimumDistance = Math.min(...distances);\r\n\r\n\tif(distanceMetric === 'euclidean')\r\n\t\tminimumDistance = minimumDistance.toFixed(precision) + '';\r\n\r\n\tlet index = 0, counter = 0;\r\n\r\n\twhile(index != -1)\r\n\t{\r\n\t\tindex = distances.indexOf(minimumDistance);\r\n\t\tif(index != -1)\r\n\t\t{\r\n\t\t\treturnArray.push(index+counter);\r\n\t\t\tdistances.splice(index, 1);\r\n\t\t\tcounter++;\r\n\t\t}\r\n\t}\r\n\r\n\treturn returnArray;\r\n}\r\n\r\n///Calculates the distances from each site to pixel in position (xOfPoint, yOfPoint) and returns an array\r\nfunction calculateDistancesFromSitesToPoint(xOfPoint, yOfPoint, sitePoints)\r\n{\r\n\tlet result = [];\r\n\tfor(let i = 0; i < sitePoints.length; i++)\r\n\t\tresult.push(calculateDistance(xOfPoint, yOfPoint, sitePoints[i].x, sitePoints[i].y));\r\n\r\n\treturn result;\r\n}\r\n\r\n///Calculates the distance from point1 to point2 using the selected distance metrix\r\nfunction calculateDistance(point1X, point1Y, point2X, point2Y)\r\n{\r\n\tif(distanceMetric === 'euclidean')\r\n\t\treturn calculateEuclideanDistance(point1X, point1Y, point2X, point2Y);\r\n\telse if(distanceMetric === 'manhattan')\r\n\t\treturn calculateManhattanDistance(point1X, point1Y, point2X, point2Y);\r\n}\r\n\r\n///Calculates and returns the Euclidean distance\r\nfunction calculateEuclideanDistance(point1X, point1Y, point2X, point2Y)\r\n{\r\n\tlet result = Math.pow( Math.pow( point1X - point2X, 2 ) + Math.pow( point1Y - point2Y, 2 ), 0.5 );\r\n\treturn result.toFixed(precision);\r\n}\r\n\r\n///Calculates and returns the Manhattan distance\r\nfunction calculateManhattanDistance(point1X, point1Y, point2X, point2Y)\r\n{\r\n\tlet resultX = point1X - point2X;\r\n\tif(resultX < 0)\r\n\t\tresultX *= -1;\r\n\tlet resultY = point1Y - point2Y;\r\n\tif(resultY < 0)\r\n\t\tresultY *= -1;\r\n\tlet result = resultX + resultY;\r\n\treturn result;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}